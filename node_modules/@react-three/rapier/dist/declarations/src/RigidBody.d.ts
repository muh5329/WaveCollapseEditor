import React, { MutableRefObject, RefObject } from "react";
import { ReactNode } from "react";
import { Object3D } from "three";
import { InstancedRigidBodyApi } from "./api";
import { InstancedRigidBodiesProps } from "./InstancedRigidBodies";
import { RigidBodyApi, UseRigidBodyOptions } from "./types";
export declare const RigidBodyContext: React.Context<{
    ref: RefObject<Object3D> | MutableRefObject<Object3D>;
    api: RigidBodyApi | InstancedRigidBodyApi;
    options: UseRigidBodyOptions | InstancedRigidBodiesProps;
}>;
export declare const useRigidBodyContext: () => {
    ref: RefObject<Object3D> | MutableRefObject<Object3D>;
    api: RigidBodyApi | InstancedRigidBodyApi;
    options: UseRigidBodyOptions | InstancedRigidBodiesProps;
};
export interface RigidBodyProps extends UseRigidBodyOptions {
    children?: ReactNode;
}
export declare const RigidBody: React.MemoExoticComponent<React.ForwardRefExoticComponent<RigidBodyProps & React.RefAttributes<import("./api").RigidBodyApi>>>;
