import { Quaternion as RapierQuaternion, Vector3 as RapierVector3 } from "@dimforge/rapier3d-compat";
import { Euler, Quaternion, Vector3 } from "three";
import { RigidBodyTypeString, Vector3Array } from "./types";
export declare const vectorArrayToVector3: (arr: Vector3Array) => Vector3;
export declare const vector3ToQuaternion: (v: Vector3) => Quaternion;
export declare const rapierVector3ToVector3: ({ x, y, z }: RapierVector3) => Vector3;
export declare const rapierQuaternionToQuaternion: ({ x, y, z, w }: RapierQuaternion) => Quaternion;
export declare const rigidBodyTypeFromString: (type: RigidBodyTypeString) => number;
export declare const scaleVertices: (vertices: ArrayLike<number>, scale: Vector3) => number[];
export declare const vectorToTuple: (v: Vector3 | Quaternion | any[] | undefined | number | Euler) => any[];
