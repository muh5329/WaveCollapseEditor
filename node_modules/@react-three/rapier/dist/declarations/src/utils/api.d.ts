import { Collider, ColliderDesc, DebugRenderBuffers, ImpulseJoint, JointData, RigidBody, RigidBodyDesc, World } from "@dimforge/rapier3d-compat";
import { Vector3 } from "three";
import { RefGetter } from "../types";
export interface WorldApi {
    raw(): World;
    getCollider(handle: number): Collider | undefined;
    getRigidBody(handle: number): RigidBody | undefined;
    createRigidBody(desc: RigidBodyDesc): RigidBody;
    createCollider(desc: ColliderDesc, parent?: RigidBody): Collider;
    removeRigidBody(rigidBody: RigidBody): void;
    removeCollider(collider: Collider, wakeUp?: boolean): void;
    createImpulseJoint(params: JointData, rigidBodyA: RigidBody, rigidBodyB: RigidBody, wakeUp?: boolean): ImpulseJoint;
    removeImpulseJoint(joint: ImpulseJoint, wakeUp?: boolean): void;
    forEachCollider(callback: (collider: Collider) => void): void;
    setGravity(gravity: Vector3): void;
    debugRender(): DebugRenderBuffers;
}
export declare const createWorldApi: (ref: RefGetter<World>) => WorldApi;
