{
  "version": 3,
  "sources": ["../../chevrotain/src/version.ts", "../../lodash/_isPrototype.js", "../../lodash/_overArg.js", "../../lodash/_nativeKeys.js", "../../lodash/_baseKeys.js", "../../lodash/_freeGlobal.js", "../../lodash/_root.js", "../../lodash/_Symbol.js", "../../lodash/_getRawTag.js", "../../lodash/_objectToString.js", "../../lodash/_baseGetTag.js", "../../lodash/isObject.js", "../../lodash/isFunction.js", "../../lodash/_coreJsData.js", "../../lodash/_isMasked.js", "../../lodash/_toSource.js", "../../lodash/_baseIsNative.js", "../../lodash/_getValue.js", "../../lodash/_getNative.js", "../../lodash/_DataView.js", "../../lodash/_Map.js", "../../lodash/_Promise.js", "../../lodash/_Set.js", "../../lodash/_WeakMap.js", "../../lodash/_getTag.js", "../../lodash/isObjectLike.js", "../../lodash/_baseIsArguments.js", "../../lodash/isArguments.js", "../../lodash/isArray.js", "../../lodash/isLength.js", "../../lodash/isArrayLike.js", "../../lodash/stubFalse.js", "../../lodash/isBuffer.js", "../../lodash/_baseIsTypedArray.js", "../../lodash/_baseUnary.js", "../../lodash/_nodeUtil.js", "../../lodash/isTypedArray.js", "../../lodash/isEmpty.js", "../../lodash/_arrayMap.js", "../../lodash/_listCacheClear.js", "../../lodash/eq.js", "../../lodash/_assocIndexOf.js", "../../lodash/_listCacheDelete.js", "../../lodash/_listCacheGet.js", "../../lodash/_listCacheHas.js", "../../lodash/_listCacheSet.js", "../../lodash/_ListCache.js", "../../lodash/_stackClear.js", "../../lodash/_stackDelete.js", "../../lodash/_stackGet.js", "../../lodash/_stackHas.js", "../../lodash/_nativeCreate.js", "../../lodash/_hashClear.js", "../../lodash/_hashDelete.js", "../../lodash/_hashGet.js", "../../lodash/_hashHas.js", "../../lodash/_hashSet.js", "../../lodash/_Hash.js", "../../lodash/_mapCacheClear.js", "../../lodash/_isKeyable.js", "../../lodash/_getMapData.js", "../../lodash/_mapCacheDelete.js", "../../lodash/_mapCacheGet.js", "../../lodash/_mapCacheHas.js", "../../lodash/_mapCacheSet.js", "../../lodash/_MapCache.js", "../../lodash/_stackSet.js", "../../lodash/_Stack.js", "../../lodash/_setCacheAdd.js", "../../lodash/_setCacheHas.js", "../../lodash/_SetCache.js", "../../lodash/_arraySome.js", "../../lodash/_cacheHas.js", "../../lodash/_equalArrays.js", "../../lodash/_Uint8Array.js", "../../lodash/_mapToArray.js", "../../lodash/_setToArray.js", "../../lodash/_equalByTag.js", "../../lodash/_arrayPush.js", "../../lodash/_baseGetAllKeys.js", "../../lodash/_arrayFilter.js", "../../lodash/stubArray.js", "../../lodash/_getSymbols.js", "../../lodash/_baseTimes.js", "../../lodash/_isIndex.js", "../../lodash/_arrayLikeKeys.js", "../../lodash/keys.js", "../../lodash/_getAllKeys.js", "../../lodash/_equalObjects.js", "../../lodash/_baseIsEqualDeep.js", "../../lodash/_baseIsEqual.js", "../../lodash/_baseIsMatch.js", "../../lodash/_isStrictComparable.js", "../../lodash/_getMatchData.js", "../../lodash/_matchesStrictComparable.js", "../../lodash/_baseMatches.js", "../../lodash/isSymbol.js", "../../lodash/_isKey.js", "../../lodash/memoize.js", "../../lodash/_memoizeCapped.js", "../../lodash/_stringToPath.js", "../../lodash/_baseToString.js", "../../lodash/toString.js", "../../lodash/_castPath.js", "../../lodash/_toKey.js", "../../lodash/_baseGet.js", "../../lodash/get.js", "../../lodash/_baseHasIn.js", "../../lodash/_hasPath.js", "../../lodash/hasIn.js", "../../lodash/_baseMatchesProperty.js", "../../lodash/identity.js", "../../lodash/_baseProperty.js", "../../lodash/_basePropertyDeep.js", "../../lodash/property.js", "../../lodash/_baseIteratee.js", "../../lodash/_createBaseFor.js", "../../lodash/_baseFor.js", "../../lodash/_baseForOwn.js", "../../lodash/_createBaseEach.js", "../../lodash/_baseEach.js", "../../lodash/_baseMap.js", "../../lodash/map.js", "../../lodash/_arrayEach.js", "../../lodash/_castFunction.js", "../../lodash/forEach.js", "../../lodash/_baseValues.js", "../../lodash/values.js", "../../lodash/_baseHas.js", "../../lodash/has.js", "../../lodash/_defineProperty.js", "../../lodash/_baseAssignValue.js", "../../lodash/_assignValue.js", "../../lodash/_copyObject.js", "../../lodash/_baseAssign.js", "../../lodash/_nativeKeysIn.js", "../../lodash/_baseKeysIn.js", "../../lodash/keysIn.js", "../../lodash/_baseAssignIn.js", "../../lodash/_cloneBuffer.js", "../../lodash/_copyArray.js", "../../lodash/_copySymbols.js", "../../lodash/_getPrototype.js", "../../lodash/_getSymbolsIn.js", "../../lodash/_copySymbolsIn.js", "../../lodash/_getAllKeysIn.js", "../../lodash/_initCloneArray.js", "../../lodash/_cloneArrayBuffer.js", "../../lodash/_cloneDataView.js", "../../lodash/_cloneRegExp.js", "../../lodash/_cloneSymbol.js", "../../lodash/_cloneTypedArray.js", "../../lodash/_initCloneByTag.js", "../../lodash/_baseCreate.js", "../../lodash/_initCloneObject.js", "../../lodash/_baseIsMap.js", "../../lodash/isMap.js", "../../lodash/_baseIsSet.js", "../../lodash/isSet.js", "../../lodash/_baseClone.js", "../../lodash/clone.js", "../../@chevrotain/utils/src/print.ts", "../../@chevrotain/utils/src/timer.ts", "../../@chevrotain/utils/src/to-fast-properties.ts", "../../@chevrotain/utils/src/api.ts", "../../lodash/_baseSlice.js", "../../lodash/_trimmedEndIndex.js", "../../lodash/_baseTrim.js", "../../lodash/toNumber.js", "../../lodash/toFinite.js", "../../lodash/toInteger.js", "../../lodash/drop.js", "../../lodash/isString.js", "../../lodash/_baseIsRegExp.js", "../../lodash/isRegExp.js", "../../lodash/_baseSet.js", "../../lodash/_basePickBy.js", "../../lodash/pickBy.js", "../../lodash/_apply.js", "../../lodash/_overRest.js", "../../lodash/constant.js", "../../lodash/_baseSetToString.js", "../../lodash/_shortOut.js", "../../lodash/_setToString.js", "../../lodash/_baseRest.js", "../../lodash/_isIterateeCall.js", "../../lodash/_createAssigner.js", "../../lodash/assign.js", "../../@chevrotain/gast/src/model.ts", "../../@chevrotain/gast/src/visitor.ts", "../../lodash/_baseSome.js", "../../lodash/some.js", "../../lodash/_arrayEvery.js", "../../lodash/_baseEvery.js", "../../lodash/every.js", "../../lodash/_baseFindIndex.js", "../../lodash/_baseIsNaN.js", "../../lodash/_strictIndexOf.js", "../../lodash/_baseIndexOf.js", "../../lodash/includes.js", "../../@chevrotain/gast/src/helpers.ts", "../../@chevrotain/gast/src/api.ts", "../../chevrotain/src/parse/grammar/rest.ts", "../../lodash/_isFlattenable.js", "../../lodash/_baseFlatten.js", "../../lodash/flatten.js", "../../lodash/_arrayIncludes.js", "../../lodash/_arrayIncludesWith.js", "../../lodash/noop.js", "../../lodash/_createSet.js", "../../lodash/_baseUniq.js", "../../lodash/uniq.js", "../../chevrotain/src/parse/grammar/first.ts", "../../chevrotain/src/parse/constants.ts", "../../chevrotain/src/parse/grammar/follow.ts", "../../lodash/isUndefined.js", "../../regexp-to-ast/lib/regexp-to-ast.js", "../../lodash/head.js", "../../lodash/first.js", "../../lodash/compact.js", "../../lodash/_baseFilter.js", "../../lodash/negate.js", "../../lodash/reject.js", "../../lodash/_baseDifference.js", "../../lodash/isArrayLikeObject.js", "../../lodash/difference.js", "../../lodash/indexOf.js", "../../lodash/_createFind.js", "../../lodash/findIndex.js", "../../lodash/find.js", "../../lodash/filter.js", "../../lodash/defaults.js", "../../lodash/_arrayReduce.js", "../../lodash/_baseReduce.js", "../../lodash/reduce.js", "../../chevrotain/src/scan/reg_exp_parser.ts", "../../chevrotain/src/scan/reg_exp.ts", "../../chevrotain/src/scan/lexer.ts", "../../lodash/last.js", "../../chevrotain/src/scan/tokens.ts", "../../chevrotain/src/scan/lexer_errors_public.ts", "../../chevrotain/src/scan/lexer_public.ts", "../../chevrotain/src/scan/tokens_public.ts", "../../chevrotain/src/parse/errors_public.ts", "../../chevrotain/src/parse/grammar/resolver.ts", "../../lodash/_arrayAggregator.js", "../../lodash/_baseAggregator.js", "../../lodash/_createAggregator.js", "../../lodash/groupBy.js", "../../lodash/flatMap.js", "../../lodash/dropRight.js", "../../chevrotain/src/parse/grammar/interpreter.ts", "../../chevrotain/src/parse/grammar/lookahead.ts", "../../chevrotain/src/parse/grammar/checks.ts", "../../chevrotain/src/parse/grammar/gast/gast_resolver_public.ts", "../../chevrotain/src/parse/exceptions_public.ts", "../../chevrotain/src/parse/parser/traits/recoverable.ts", "../../chevrotain/src/parse/grammar/keys.ts", "../../chevrotain/src/parse/grammar/llk_lookahead.ts", "../../chevrotain/src/parse/parser/traits/looksahead.ts", "../../chevrotain/src/parse/cst/cst.ts", "../../chevrotain/src/lang/lang_extensions.ts", "../../chevrotain/src/parse/cst/cst_visitor.ts", "../../chevrotain/src/parse/parser/traits/tree_builder.ts", "../../chevrotain/src/parse/parser/traits/lexer_adapter.ts", "../../chevrotain/src/parse/parser/traits/recognizer_api.ts", "../../chevrotain/src/parse/parser/traits/recognizer_engine.ts", "../../chevrotain/src/parse/parser/traits/error_handler.ts", "../../chevrotain/src/parse/parser/traits/context_assist.ts", "../../chevrotain/src/parse/parser/traits/gast_recorder.ts", "../../chevrotain/src/parse/parser/traits/perf_tracer.ts", "../../chevrotain/src/parse/parser/utils/apply_mixins.ts", "../../chevrotain/src/parse/parser/parser.ts", "../../@chevrotain/cst-dts-gen/src/model.ts", "../../lodash/_castSlice.js", "../../lodash/_hasUnicode.js", "../../lodash/_asciiToArray.js", "../../lodash/_unicodeToArray.js", "../../lodash/_stringToArray.js", "../../lodash/_createCaseFirst.js", "../../lodash/upperFirst.js", "../../@chevrotain/cst-dts-gen/src/generate.ts", "../../@chevrotain/cst-dts-gen/src/api.ts", "../../chevrotain/src/diagrams/render_public.ts", "../../chevrotain/src/api.ts", "browser-external:fs", "../../@babel/runtime/helpers/esm/typeof.js", "../../@babel/runtime/helpers/esm/toPrimitive.js", "../../@babel/runtime/helpers/esm/toPropertyKey.js", "../../@babel/runtime/helpers/esm/defineProperty.js", "../../fflate/esm/browser.js", "../../mmd-parser/build/mmdparser.module.js", "../../chevrotain/lib_esm/api_esm.mjs", "../../ktx-parse/src/constants.ts", "../../ktx-parse/src/container.ts", "../../ktx-parse/src/buffer-reader.ts", "../../ktx-parse/src/constants-internal.ts", "../../ktx-parse/src/util.ts", "../../ktx-parse/src/read.ts", "../../ktx-parse/src/write.ts", "../../zstddec/zstddec.ts", "../../opentype.js/node_modules/string.prototype.codepointat/codepointat.js", "../../opentype.js/node_modules/tiny-inflate/index.js", "../../opentype.js/src/bbox.js", "../../opentype.js/src/path.js", "../../opentype.js/src/check.js", "../../opentype.js/src/types.js", "../../opentype.js/src/table.js", "../../opentype.js/src/parse.js", "../../opentype.js/src/tables/cmap.js", "../../opentype.js/src/encoding.js", "../../opentype.js/src/draw.js", "../../opentype.js/src/glyph.js", "../../opentype.js/src/glyphset.js", "../../opentype.js/src/tables/cff.js", "../../opentype.js/src/tables/head.js", "../../opentype.js/src/tables/hhea.js", "../../opentype.js/src/tables/hmtx.js", "../../opentype.js/src/tables/ltag.js", "../../opentype.js/src/tables/maxp.js", "../../opentype.js/src/tables/name.js", "../../opentype.js/src/tables/os2.js", "../../opentype.js/src/tables/post.js", "../../opentype.js/src/tables/gsub.js", "../../opentype.js/src/tables/meta.js", "../../opentype.js/src/tables/sfnt.js", "../../opentype.js/src/layout.js", "../../opentype.js/src/position.js", "../../opentype.js/src/substitution.js", "../../opentype.js/src/util.js", "../../opentype.js/src/tables/glyf.js", "../../opentype.js/src/hintingtt.js", "../../opentype.js/src/tokenizer.js", "../../opentype.js/src/char.js", "../../opentype.js/src/features/featureQuery.js", "../../opentype.js/src/features/arab/contextCheck/arabicWord.js", "../../opentype.js/src/features/arab/contextCheck/arabicSentence.js", "../../opentype.js/src/features/applySubstitution.js", "../../opentype.js/src/features/arab/arabicPresentationForms.js", "../../opentype.js/src/features/arab/arabicRequiredLigatures.js", "../../opentype.js/src/features/latn/contextCheck/latinWord.js", "../../opentype.js/src/features/latn/latinLigatures.js", "../../opentype.js/src/bidi.js", "../../opentype.js/src/font.js", "../../opentype.js/src/tables/fvar.js", "../../opentype.js/src/tables/gdef.js", "../../opentype.js/src/tables/gpos.js", "../../opentype.js/src/tables/kern.js", "../../opentype.js/src/tables/loca.js", "../../opentype.js/src/opentype.js"],
  "sourcesContent": ["// needs a separate module as this is required inside chevrotain productive code\n// and also in the entry point for webpack(api.ts).\n// A separate file avoids cyclic dependencies and webpack errors.\nexport const VERSION = \"10.5.0\"\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n", "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n", "var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n", "var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n", "var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n", "var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n", "var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n", "var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n", "var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n", "var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n", "var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n", "/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n", "var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n", "var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n", "/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n", "var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n", "var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n", "/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n", "var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n", "var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n", "var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n", "/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n", "/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n", "/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n", "var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n", "var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n", "var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n", "var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n", "var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n", "var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n", "var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n", "var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n", "/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n", "/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n", "var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n", "/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n", "/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n", "var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n", "/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n", "/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n", "var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n", "/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n", "var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n", "/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n", "/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n", "var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n", "/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n", "var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n", "var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n", "var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n", "var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n", "var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n", "var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n", "var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n", "var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n", "var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n", "/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n", "var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n", "var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n", "var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n", "var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n", "var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n", "var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n", "var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n", "var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n", "var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n", "var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n", "var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n", "/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n", "var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n", "var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n", "var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n", "/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n", "/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n", "var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n", "var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n", "var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n", "/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n", "var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n", "var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n", "var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n", "var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n", "var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n", "var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n", "/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n", "var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n", "var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n", "var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n", "var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n", "var baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n", "var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n", "var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n", "var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n", "var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n", "var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n", "/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n", "var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n", "var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n", "var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n", "var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n", "/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n", "var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n", "var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n", "var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n", "var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n", "var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n", "var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n", "/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n", "var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n", "var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n", "var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n", "var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n", "var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n", "var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n", "var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n", "var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n", "var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n", "export function PRINT_ERROR(msg: string) {\n  /* istanbul ignore else - can't override global.console in node.js */\n  if (console && console.error) {\n    console.error(`Error: ${msg}`)\n  }\n}\n\nexport function PRINT_WARNING(msg: string) {\n  /* istanbul ignore else - can't override global.console in node.js*/\n  if (console && console.warn) {\n    // TODO: modify docs accordingly\n    console.warn(`Warning: ${msg}`)\n  }\n}\n", "export function timer<T>(func: () => T): { time: number; value: T } {\n  const start = new Date().getTime()\n  const val = func()\n  const end = new Date().getTime()\n  const total = end - start\n  return { time: total, value: val }\n}\n", "// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast: any) {\n  function FakeConstructor() {}\n\n  // If our object is used as a constructor it would receive\n  FakeConstructor.prototype = toBecomeFast\n  const fakeInstance = new (FakeConstructor as any)()\n\n  function fakeAccess() {\n    return typeof fakeInstance.bar\n  }\n\n  // help V8 understand this is a \"real\" prototype by actually using\n  // the fake instance.\n  fakeAccess()\n  fakeAccess()\n\n  // Always true condition to suppress the Firefox warning of unreachable\n  // code after a return statement.\n  if (1) return toBecomeFast\n\n  // Eval prevents optimization of this method (even though this is dead code)\n  /* istanbul ignore next */\n  // tslint:disable-next-line\n  eval(toBecomeFast)\n}\n", "export { PRINT_WARNING, PRINT_ERROR } from \"./print\"\nexport { timer } from \"./timer\"\nexport { toFastProperties } from \"./to-fast-properties\"\n", "/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n", "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n", "var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n", "var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n", "var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n", "var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n", "var baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nmodule.exports = drop;\n", "var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nmodule.exports = baseIsRegExp;\n", "var baseIsRegExp = require('./_baseIsRegExp'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nmodule.exports = isRegExp;\n", "var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n", "var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n", "var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n", "/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n", "var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n", "/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n", "var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n", "/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n", "var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n", "var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n", "var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n", "var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n", "var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n", "import map from \"lodash/map\"\nimport forEach from \"lodash/forEach\"\nimport isString from \"lodash/isString\"\nimport isRegExp from \"lodash/isRegExp\"\nimport pickBy from \"lodash/pickBy\"\nimport assign from \"lodash/assign\"\nimport {\n  IGASTVisitor,\n  IProduction,\n  IProductionWithOccurrence,\n  ISerializedGast,\n  TokenType\n} from \"@chevrotain/types\"\n\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType: TokenType): string {\n  if (hasTokenLabel(tokType)) {\n    return tokType.LABEL\n  } else {\n    return tokType.name\n  }\n}\n\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(\n  obj: TokenType\n): obj is TokenType & Pick<Required<TokenType>, \"LABEL\"> {\n  return isString(obj.LABEL) && obj.LABEL !== \"\"\n}\n\nexport abstract class AbstractProduction<T extends IProduction = IProduction>\n  implements IProduction\n{\n  public get definition(): T[] {\n    return this._definition\n  }\n  public set definition(value: T[]) {\n    this._definition = value\n  }\n\n  constructor(protected _definition: T[]) {}\n\n  accept(visitor: IGASTVisitor): void {\n    visitor.visit(this)\n    forEach(this.definition, (prod) => {\n      prod.accept(visitor)\n    })\n  }\n}\n\nexport class NonTerminal\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public nonTerminalName!: string\n  public label?: string\n  public referencedRule!: Rule\n  public idx: number = 1\n\n  constructor(options: {\n    nonTerminalName: string\n    label?: string\n    referencedRule?: Rule\n    idx?: number\n  }) {\n    super([])\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined)\n    )\n  }\n\n  set definition(definition: IProduction[]) {\n    // immutable\n  }\n\n  get definition(): IProduction[] {\n    if (this.referencedRule !== undefined) {\n      return this.referencedRule.definition\n    }\n    return []\n  }\n\n  accept(visitor: IGASTVisitor): void {\n    visitor.visit(this)\n    // don't visit children of a reference, we will get cyclic infinite loops if we do so\n  }\n}\n\nexport class Rule extends AbstractProduction {\n  public name!: string\n  public orgText: string = \"\"\n\n  constructor(options: {\n    name: string\n    definition: IProduction[]\n    orgText?: string\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class Alternative extends AbstractProduction {\n  public ignoreAmbiguities: boolean = false\n\n  constructor(options: {\n    definition: IProduction[]\n    ignoreAmbiguities?: boolean\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class Option\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public idx: number = 1\n  public maxLookahead?: number\n\n  constructor(options: {\n    definition: IProduction[]\n    idx?: number\n    maxLookahead?: number\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class RepetitionMandatory\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public idx: number = 1\n  public maxLookahead?: number\n\n  constructor(options: {\n    definition: IProduction[]\n    idx?: number\n    maxLookahead?: number\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class RepetitionMandatoryWithSeparator\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public separator!: TokenType\n  public idx: number = 1\n  public maxLookahead?: number\n\n  constructor(options: {\n    definition: IProduction[]\n    separator: TokenType\n    idx?: number\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class Repetition\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public separator!: TokenType\n  public idx: number = 1\n  public maxLookahead?: number\n\n  constructor(options: {\n    definition: IProduction[]\n    idx?: number\n    maxLookahead?: number\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class RepetitionWithSeparator\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public separator!: TokenType\n  public idx: number = 1\n  public maxLookahead?: number\n\n  constructor(options: {\n    definition: IProduction[]\n    separator: TokenType\n    idx?: number\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class Alternation\n  extends AbstractProduction<Alternative>\n  implements IProductionWithOccurrence\n{\n  public idx: number = 1\n  public ignoreAmbiguities: boolean = false\n  public hasPredicates: boolean = false\n  public maxLookahead?: number\n\n  public get definition(): Alternative[] {\n    return this._definition\n  }\n  public set definition(value: Alternative[]) {\n    this._definition = value\n  }\n\n  constructor(options: {\n    definition: Alternative[]\n    idx?: number\n    ignoreAmbiguities?: boolean\n    hasPredicates?: boolean\n    maxLookahead?: number\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class Terminal implements IProductionWithOccurrence {\n  public terminalType!: TokenType\n  public label?: string\n  public idx: number = 1\n\n  constructor(options: {\n    terminalType: TokenType\n    label?: string\n    idx?: number\n  }) {\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined)\n    )\n  }\n\n  accept(visitor: IGASTVisitor): void {\n    visitor.visit(this)\n  }\n}\n\nexport interface ISerializedBasic extends ISerializedGast {\n  type:\n    | \"Alternative\"\n    | \"Option\"\n    | \"RepetitionMandatory\"\n    | \"Repetition\"\n    | \"Alternation\"\n  idx?: number\n}\n\nexport interface ISerializedGastRule extends ISerializedGast {\n  type: \"Rule\"\n  name: string\n  orgText: string\n}\n\nexport interface ISerializedNonTerminal extends ISerializedGast {\n  type: \"NonTerminal\"\n  name: string\n  label?: string\n  idx: number\n}\n\nexport interface ISerializedTerminal extends ISerializedGast {\n  type: \"Terminal\"\n  name: string\n  terminalLabel?: string\n  label?: string\n  pattern?: string\n  idx: number\n}\n\nexport interface ISerializedTerminalWithSeparator extends ISerializedGast {\n  type: \"RepetitionMandatoryWithSeparator\" | \"RepetitionWithSeparator\"\n  idx: number\n  separator: ISerializedTerminal\n}\n\nexport type ISerializedGastAny =\n  | ISerializedBasic\n  | ISerializedGastRule\n  | ISerializedNonTerminal\n  | ISerializedTerminal\n  | ISerializedTerminalWithSeparator\n\nexport function serializeGrammar(topRules: Rule[]): ISerializedGast[] {\n  return map(topRules, serializeProduction)\n}\n\nexport function serializeProduction(node: IProduction): ISerializedGast {\n  function convertDefinition(definition: IProduction[]): ISerializedGast[] {\n    return map(definition, serializeProduction)\n  }\n  /* istanbul ignore else */\n  if (node instanceof NonTerminal) {\n    const serializedNonTerminal: ISerializedNonTerminal = {\n      type: \"NonTerminal\",\n      name: node.nonTerminalName,\n      idx: node.idx\n    }\n\n    if (isString(node.label)) {\n      serializedNonTerminal.label = node.label\n    }\n\n    return serializedNonTerminal\n  } else if (node instanceof Alternative) {\n    return <ISerializedBasic>{\n      type: \"Alternative\",\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof Option) {\n    return <ISerializedBasic>{\n      type: \"Option\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof RepetitionMandatory) {\n    return <ISerializedBasic>{\n      type: \"RepetitionMandatory\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof RepetitionMandatoryWithSeparator) {\n    return <ISerializedTerminalWithSeparator>{\n      type: \"RepetitionMandatoryWithSeparator\",\n      idx: node.idx,\n      separator: <ISerializedTerminal>(\n        serializeProduction(new Terminal({ terminalType: node.separator }))\n      ),\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof RepetitionWithSeparator) {\n    return <ISerializedTerminalWithSeparator>{\n      type: \"RepetitionWithSeparator\",\n      idx: node.idx,\n      separator: <ISerializedTerminal>(\n        serializeProduction(new Terminal({ terminalType: node.separator }))\n      ),\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof Repetition) {\n    return <ISerializedBasic>{\n      type: \"Repetition\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof Alternation) {\n    return <ISerializedBasic>{\n      type: \"Alternation\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof Terminal) {\n    const serializedTerminal = <ISerializedTerminal>{\n      type: \"Terminal\",\n      name: node.terminalType.name,\n      label: tokenLabel(node.terminalType),\n      idx: node.idx\n    }\n\n    if (isString(node.label)) {\n      serializedTerminal.terminalLabel = node.label\n    }\n\n    const pattern = node.terminalType.PATTERN\n    if (node.terminalType.PATTERN) {\n      serializedTerminal.pattern = isRegExp(pattern)\n        ? (<any>pattern).source\n        : pattern\n    }\n\n    return serializedTerminal\n  } else if (node instanceof Rule) {\n    return <ISerializedGastRule>{\n      type: \"Rule\",\n      name: node.name,\n      orgText: node.orgText,\n      definition: convertDefinition(node.definition)\n    }\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n", "import {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"./model\"\nimport { IProduction } from \"@chevrotain/types\"\n\nexport abstract class GAstVisitor {\n  public visit(node: IProduction): any {\n    const nodeAny: any = node\n    switch (nodeAny.constructor) {\n      case NonTerminal:\n        return this.visitNonTerminal(nodeAny)\n      case Alternative:\n        return this.visitAlternative(nodeAny)\n      case Option:\n        return this.visitOption(nodeAny)\n      case RepetitionMandatory:\n        return this.visitRepetitionMandatory(nodeAny)\n      case RepetitionMandatoryWithSeparator:\n        return this.visitRepetitionMandatoryWithSeparator(nodeAny)\n      case RepetitionWithSeparator:\n        return this.visitRepetitionWithSeparator(nodeAny)\n      case Repetition:\n        return this.visitRepetition(nodeAny)\n      case Alternation:\n        return this.visitAlternation(nodeAny)\n      case Terminal:\n        return this.visitTerminal(nodeAny)\n      case Rule:\n        return this.visitRule(nodeAny)\n      /* istanbul ignore next */\n      default:\n        throw Error(\"non exhaustive match\")\n    }\n  }\n\n  /* istanbul ignore next - testing the fact a NOOP function exists is non-trivial  */\n  public visitNonTerminal(node: NonTerminal): any {}\n\n  /* istanbul ignore next - testing the fact a NOOP function exists is non-trivial  */\n  public visitAlternative(node: Alternative): any {}\n\n  /* istanbul ignore next - testing the fact a NOOP function exists is non-trivial  */\n  public visitOption(node: Option): any {}\n\n  /* istanbul ignore next - testing the fact a NOOP function exists is non-trivial  */\n  public visitRepetition(node: Repetition): any {}\n\n  /* istanbul ignore next - testing the fact a NOOP function exists is non-trivial  */\n  public visitRepetitionMandatory(node: RepetitionMandatory): any {}\n\n  /* istanbul ignore next - testing the fact a NOOP function exists is non-trivial  */\n  public visitRepetitionMandatoryWithSeparator(\n    node: RepetitionMandatoryWithSeparator\n  ): any {}\n\n  /* istanbul ignore next - testing the fact a NOOP function exists is non-trivial  */\n  public visitRepetitionWithSeparator(node: RepetitionWithSeparator): any {}\n\n  /* istanbul ignore next - testing the fact a NOOP function exists is non-trivial  */\n  public visitAlternation(node: Alternation): any {}\n\n  /* istanbul ignore next - testing the fact a NOOP function exists is non-trivial  */\n  public visitTerminal(node: Terminal): any {}\n\n  /* istanbul ignore next - testing the fact a NOOP function exists is non-trivial  */\n  public visitRule(node: Rule): any {}\n}\n", "var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nmodule.exports = baseSome;\n", "var arraySome = require('./_arraySome'),\n    baseIteratee = require('./_baseIteratee'),\n    baseSome = require('./_baseSome'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = some;\n", "/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = arrayEvery;\n", "var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nmodule.exports = baseEvery;\n", "var arrayEvery = require('./_arrayEvery'),\n    baseEvery = require('./_baseEvery'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = every;\n", "/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n", "/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n", "/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n", "var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n", "var baseIndexOf = require('./_baseIndexOf'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    toInteger = require('./toInteger'),\n    values = require('./values');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n", "import some from \"lodash/some\"\nimport every from \"lodash/every\"\nimport has from \"lodash/has\"\nimport includes from \"lodash/includes\"\nimport {\n  AbstractProduction,\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"./model\"\nimport { GAstVisitor } from \"./visitor\"\nimport { IProduction, IProductionWithOccurrence } from \"@chevrotain/types\"\n\nexport function isSequenceProd(\n  prod: IProduction\n): prod is { definition: IProduction[] } & IProduction {\n  return (\n    prod instanceof Alternative ||\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionMandatory ||\n    prod instanceof RepetitionMandatoryWithSeparator ||\n    prod instanceof RepetitionWithSeparator ||\n    prod instanceof Terminal ||\n    prod instanceof Rule\n  )\n}\n\nexport function isOptionalProd(\n  prod: IProduction,\n  alreadyVisited: NonTerminal[] = []\n): boolean {\n  const isDirectlyOptional =\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionWithSeparator\n  if (isDirectlyOptional) {\n    return true\n  }\n\n  // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n  if (prod instanceof Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return some((<Alternation>prod).definition, (subProd: IProduction) => {\n      return isOptionalProd(subProd, alreadyVisited)\n    })\n  } else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false\n  } else if (prod instanceof AbstractProduction) {\n    if (prod instanceof NonTerminal) {\n      alreadyVisited.push(prod)\n    }\n    return every(\n      (<AbstractProduction>prod).definition,\n      (subProd: IProduction) => {\n        return isOptionalProd(subProd, alreadyVisited)\n      }\n    )\n  } else {\n    return false\n  }\n}\n\nexport function isBranchingProd(\n  prod: IProduction\n): prod is { definition: IProduction[] } & IProduction {\n  return prod instanceof Alternation\n}\n\nexport function getProductionDslName(prod: IProductionWithOccurrence): string {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    return \"SUBRULE\"\n  } else if (prod instanceof Option) {\n    return \"OPTION\"\n  } else if (prod instanceof Alternation) {\n    return \"OR\"\n  } else if (prod instanceof RepetitionMandatory) {\n    return \"AT_LEAST_ONE\"\n  } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\"\n  } else if (prod instanceof RepetitionWithSeparator) {\n    return \"MANY_SEP\"\n  } else if (prod instanceof Repetition) {\n    return \"MANY\"\n  } else if (prod instanceof Terminal) {\n    return \"CONSUME\"\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n", "export {\n  Rule,\n  Terminal,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Alternation,\n  Alternative,\n  serializeGrammar,\n  serializeProduction\n} from \"./model\"\n\nexport { GAstVisitor } from \"./visitor\"\n\nexport {\n  getProductionDslName,\n  isOptionalProd,\n  isBranchingProd,\n  isSequenceProd\n} from \"./helpers\"\n", "import drop from \"lodash/drop\"\nimport forEach from \"lodash/forEach\"\nimport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Terminal\n} from \"@chevrotain/gast\"\nimport { IProduction } from \"@chevrotain/types\"\n\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport abstract class RestWalker {\n  walk(prod: { definition: IProduction[] }, prevRest: any[] = []): void {\n    forEach(prod.definition, (subProd: IProduction, index) => {\n      const currRest = drop(prod.definition, index + 1)\n      /* istanbul ignore else */\n      if (subProd instanceof NonTerminal) {\n        this.walkProdRef(subProd, currRest, prevRest)\n      } else if (subProd instanceof Terminal) {\n        this.walkTerminal(subProd, currRest, prevRest)\n      } else if (subProd instanceof Alternative) {\n        this.walkFlat(subProd, currRest, prevRest)\n      } else if (subProd instanceof Option) {\n        this.walkOption(subProd, currRest, prevRest)\n      } else if (subProd instanceof RepetitionMandatory) {\n        this.walkAtLeastOne(subProd, currRest, prevRest)\n      } else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n        this.walkAtLeastOneSep(subProd, currRest, prevRest)\n      } else if (subProd instanceof RepetitionWithSeparator) {\n        this.walkManySep(subProd, currRest, prevRest)\n      } else if (subProd instanceof Repetition) {\n        this.walkMany(subProd, currRest, prevRest)\n      } else if (subProd instanceof Alternation) {\n        this.walkOr(subProd, currRest, prevRest)\n      } else {\n        throw Error(\"non exhaustive match\")\n      }\n    })\n  }\n\n  walkTerminal(\n    terminal: Terminal,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {}\n\n  walkProdRef(\n    refProd: NonTerminal,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {}\n\n  walkFlat(\n    flatProd: Alternative,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABCDEF => after the D the rest is EF\n    const fullOrRest = currRest.concat(prevRest)\n    this.walk(flatProd, <any>fullOrRest)\n  }\n\n  walkOption(\n    optionProd: Option,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABC(DE)?F => after the (DE)? the rest is F\n    const fullOrRest = currRest.concat(prevRest)\n    this.walk(optionProd, <any>fullOrRest)\n  }\n\n  walkAtLeastOne(\n    atLeastOneProd: RepetitionMandatory,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n    const fullAtLeastOneRest: IProduction[] = [\n      new Option({ definition: atLeastOneProd.definition })\n    ].concat(<any>currRest, <any>prevRest)\n    this.walk(atLeastOneProd, fullAtLeastOneRest)\n  }\n\n  walkAtLeastOneSep(\n    atLeastOneSepProd: RepetitionMandatoryWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n    const fullAtLeastOneSepRest = restForRepetitionWithSeparator(\n      atLeastOneSepProd,\n      currRest,\n      prevRest\n    )\n    this.walk(atLeastOneSepProd, fullAtLeastOneSepRest)\n  }\n\n  walkMany(\n    manyProd: Repetition,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n    const fullManyRest: IProduction[] = [\n      new Option({ definition: manyProd.definition })\n    ].concat(<any>currRest, <any>prevRest)\n    this.walk(manyProd, fullManyRest)\n  }\n\n  walkManySep(\n    manySepProd: RepetitionWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n    const fullManySepRest = restForRepetitionWithSeparator(\n      manySepProd,\n      currRest,\n      prevRest\n    )\n    this.walk(manySepProd, fullManySepRest)\n  }\n\n  walkOr(\n    orProd: Alternation,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n    const fullOrRest = currRest.concat(prevRest)\n    // walk all different alternatives\n    forEach(orProd.definition, (alt) => {\n      // wrapping each alternative in a single definition wrapper\n      // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n      // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n      const prodWrapper = new Alternative({ definition: [alt] })\n      this.walk(prodWrapper, <any>fullOrRest)\n    })\n  }\n}\n\nfunction restForRepetitionWithSeparator(\n  repSepProd: RepetitionWithSeparator,\n  currRest: IProduction[],\n  prevRest: IProduction[]\n) {\n  const repSepRest = [\n    new Option({\n      definition: [\n        new Terminal({ terminalType: repSepProd.separator }) as IProduction\n      ].concat(repSepProd.definition)\n    }) as IProduction\n  ]\n  const fullRepSepRest: IProduction[] = repSepRest.concat(currRest, prevRest)\n  return fullRepSepRest\n}\n", "var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n", "var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n", "var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n", "var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n", "/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n", "/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n", "var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n", "var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n", "import flatten from \"lodash/flatten\"\nimport uniq from \"lodash/uniq\"\nimport map from \"lodash/map\"\nimport { NonTerminal, Terminal } from \"@chevrotain/gast\"\nimport {\n  isBranchingProd,\n  isOptionalProd,\n  isSequenceProd\n} from \"@chevrotain/gast\"\nimport { IProduction, TokenType } from \"@chevrotain/types\"\n\nexport function first(prod: IProduction): TokenType[] {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    // this could in theory cause infinite loops if\n    // (1) prod A refs prod B.\n    // (2) prod B refs prod A\n    // (3) AB can match the empty set\n    // in other words a cycle where everything is optional so the first will keep\n    // looking ahead for the next optional part and will never exit\n    // currently there is no safeguard for this unique edge case because\n    // (1) not sure a grammar in which this can happen is useful for anything (productive)\n    return first((<NonTerminal>prod).referencedRule)\n  } else if (prod instanceof Terminal) {\n    return firstForTerminal(<Terminal>prod)\n  } else if (isSequenceProd(prod)) {\n    return firstForSequence(prod)\n  } else if (isBranchingProd(prod)) {\n    return firstForBranching(prod)\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nexport function firstForSequence(prod: {\n  definition: IProduction[]\n}): TokenType[] {\n  let firstSet: TokenType[] = []\n  const seq = prod.definition\n  let nextSubProdIdx = 0\n  let hasInnerProdsRemaining = seq.length > nextSubProdIdx\n  let currSubProd\n  // so we enter the loop at least once (if the definition is not empty\n  let isLastInnerProdOptional = true\n  // scan a sequence until it's end or until we have found a NONE optional production in it\n  while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n    currSubProd = seq[nextSubProdIdx]\n    isLastInnerProdOptional = isOptionalProd(currSubProd)\n    firstSet = firstSet.concat(first(currSubProd))\n    nextSubProdIdx = nextSubProdIdx + 1\n    hasInnerProdsRemaining = seq.length > nextSubProdIdx\n  }\n\n  return uniq(firstSet)\n}\n\nexport function firstForBranching(prod: {\n  definition: IProduction[]\n}): TokenType[] {\n  const allAlternativesFirsts: TokenType[][] = map(\n    prod.definition,\n    (innerProd) => {\n      return first(innerProd)\n    }\n  )\n  return uniq(flatten<TokenType>(allAlternativesFirsts))\n}\n\nexport function firstForTerminal(terminal: Terminal): TokenType[] {\n  return [terminal.terminalType]\n}\n", "// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\"\n", "import { RestWalker } from \"./rest\"\nimport { first } from \"./first\"\nimport forEach from \"lodash/forEach\"\nimport assign from \"lodash/assign\"\nimport { IN } from \"../constants\"\nimport { Alternative, NonTerminal, Rule, Terminal } from \"@chevrotain/gast\"\nimport { IProduction, TokenType } from \"@chevrotain/types\"\n\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n  public follows: Record<string, TokenType[]> = {}\n\n  constructor(private topProd: Rule) {\n    super()\n  }\n\n  startWalking(): Record<string, TokenType[]> {\n    this.walk(this.topProd)\n    return this.follows\n  }\n\n  walkTerminal(\n    terminal: Terminal,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // do nothing! just like in the public sector after 13:00\n  }\n\n  walkProdRef(\n    refProd: NonTerminal,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    const followName =\n      buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n      this.topProd.name\n    const fullRest: IProduction[] = currRest.concat(prevRest)\n    const restProd = new Alternative({ definition: fullRest })\n    const t_in_topProd_follows = first(restProd)\n    this.follows[followName] = t_in_topProd_follows\n  }\n}\n\nexport function computeAllProdsFollows(\n  topProductions: Rule[]\n): Record<string, TokenType[]> {\n  const reSyncFollows = {}\n\n  forEach(topProductions, (topProd) => {\n    const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking()\n    assign(reSyncFollows, currRefsFollow)\n  })\n  return reSyncFollows\n}\n\nexport function buildBetweenProdsFollowPrefix(\n  inner: Rule,\n  occurenceInParent: number\n): string {\n  return inner.name + occurenceInParent + IN\n}\n\nexport function buildInProdFollowPrefix(terminal: Terminal): string {\n  const terminalName = terminal.terminalType.name\n  return terminalName + terminal.idx + IN\n}\n", "/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n", ";(function(root, factory) {\n    // istanbul ignore next\n    if (typeof define === \"function\" && define.amd) {\n        // istanbul ignore next\n        define([], factory)\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory()\n    } else {\n        // istanbul ignore next\n        root.regexpToAst = factory()\n    }\n})(\n    typeof self !== \"undefined\"\n        ? // istanbul ignore next\n          self\n        : this,\n    function() {\n        // references\n        // https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n        // https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\n        function RegExpParser() {}\n\n        RegExpParser.prototype.saveState = function() {\n            return {\n                idx: this.idx,\n                input: this.input,\n                groupIdx: this.groupIdx\n            }\n        }\n\n        RegExpParser.prototype.restoreState = function(newState) {\n            this.idx = newState.idx\n            this.input = newState.input\n            this.groupIdx = newState.groupIdx\n        }\n\n        RegExpParser.prototype.pattern = function(input) {\n            // parser state\n            this.idx = 0\n            this.input = input\n            this.groupIdx = 0\n\n            this.consumeChar(\"/\")\n            var value = this.disjunction()\n            this.consumeChar(\"/\")\n\n            var flags = {\n                type: \"Flags\",\n                loc: { begin: this.idx, end: input.length },\n                global: false,\n                ignoreCase: false,\n                multiLine: false,\n                unicode: false,\n                sticky: false\n            }\n\n            while (this.isRegExpFlag()) {\n                switch (this.popChar()) {\n                    case \"g\":\n                        addFlag(flags, \"global\")\n                        break\n                    case \"i\":\n                        addFlag(flags, \"ignoreCase\")\n                        break\n                    case \"m\":\n                        addFlag(flags, \"multiLine\")\n                        break\n                    case \"u\":\n                        addFlag(flags, \"unicode\")\n                        break\n                    case \"y\":\n                        addFlag(flags, \"sticky\")\n                        break\n                }\n            }\n\n            if (this.idx !== this.input.length) {\n                throw Error(\n                    \"Redundant input: \" + this.input.substring(this.idx)\n                )\n            }\n            return {\n                type: \"Pattern\",\n                flags: flags,\n                value: value,\n                loc: this.loc(0)\n            }\n        }\n\n        RegExpParser.prototype.disjunction = function() {\n            var alts = []\n            var begin = this.idx\n\n            alts.push(this.alternative())\n\n            while (this.peekChar() === \"|\") {\n                this.consumeChar(\"|\")\n                alts.push(this.alternative())\n            }\n\n            return { type: \"Disjunction\", value: alts, loc: this.loc(begin) }\n        }\n\n        RegExpParser.prototype.alternative = function() {\n            var terms = []\n            var begin = this.idx\n\n            while (this.isTerm()) {\n                terms.push(this.term())\n            }\n\n            return { type: \"Alternative\", value: terms, loc: this.loc(begin) }\n        }\n\n        RegExpParser.prototype.term = function() {\n            if (this.isAssertion()) {\n                return this.assertion()\n            } else {\n                return this.atom()\n            }\n        }\n\n        RegExpParser.prototype.assertion = function() {\n            var begin = this.idx\n            switch (this.popChar()) {\n                case \"^\":\n                    return {\n                        type: \"StartAnchor\",\n                        loc: this.loc(begin)\n                    }\n                case \"$\":\n                    return { type: \"EndAnchor\", loc: this.loc(begin) }\n                // '\\b' or '\\B'\n                case \"\\\\\":\n                    switch (this.popChar()) {\n                        case \"b\":\n                            return {\n                                type: \"WordBoundary\",\n                                loc: this.loc(begin)\n                            }\n                        case \"B\":\n                            return {\n                                type: \"NonWordBoundary\",\n                                loc: this.loc(begin)\n                            }\n                    }\n                    // istanbul ignore next\n                    throw Error(\"Invalid Assertion Escape\")\n                // '(?=' or '(?!'\n                case \"(\":\n                    this.consumeChar(\"?\")\n\n                    var type\n                    switch (this.popChar()) {\n                        case \"=\":\n                            type = \"Lookahead\"\n                            break\n                        case \"!\":\n                            type = \"NegativeLookahead\"\n                            break\n                    }\n                    ASSERT_EXISTS(type)\n\n                    var disjunction = this.disjunction()\n\n                    this.consumeChar(\")\")\n\n                    return {\n                        type: type,\n                        value: disjunction,\n                        loc: this.loc(begin)\n                    }\n            }\n            // istanbul ignore next\n            ASSERT_NEVER_REACH_HERE()\n        }\n\n        RegExpParser.prototype.quantifier = function(isBacktracking) {\n            var range\n            var begin = this.idx\n            switch (this.popChar()) {\n                case \"*\":\n                    range = {\n                        atLeast: 0,\n                        atMost: Infinity\n                    }\n                    break\n                case \"+\":\n                    range = {\n                        atLeast: 1,\n                        atMost: Infinity\n                    }\n                    break\n                case \"?\":\n                    range = {\n                        atLeast: 0,\n                        atMost: 1\n                    }\n                    break\n                case \"{\":\n                    var atLeast = this.integerIncludingZero()\n                    switch (this.popChar()) {\n                        case \"}\":\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atLeast\n                            }\n                            break\n                        case \",\":\n                            var atMost\n                            if (this.isDigit()) {\n                                atMost = this.integerIncludingZero()\n                                range = {\n                                    atLeast: atLeast,\n                                    atMost: atMost\n                                }\n                            } else {\n                                range = {\n                                    atLeast: atLeast,\n                                    atMost: Infinity\n                                }\n                            }\n                            this.consumeChar(\"}\")\n                            break\n                    }\n                    // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                    // causes severe performance degradations\n                    if (isBacktracking === true && range === undefined) {\n                        return undefined\n                    }\n                    ASSERT_EXISTS(range)\n                    break\n            }\n\n            // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n            // causes severe performance degradations\n            if (isBacktracking === true && range === undefined) {\n                return undefined\n            }\n\n            ASSERT_EXISTS(range)\n\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\")\n                range.greedy = false\n            } else {\n                range.greedy = true\n            }\n\n            range.type = \"Quantifier\"\n            range.loc = this.loc(begin)\n            return range\n        }\n\n        RegExpParser.prototype.atom = function() {\n            var atom\n            var begin = this.idx\n            switch (this.peekChar()) {\n                case \".\":\n                    atom = this.dotAll()\n                    break\n                case \"\\\\\":\n                    atom = this.atomEscape()\n                    break\n                case \"[\":\n                    atom = this.characterClass()\n                    break\n                case \"(\":\n                    atom = this.group()\n                    break\n            }\n\n            if (atom === undefined && this.isPatternCharacter()) {\n                atom = this.patternCharacter()\n            }\n\n            ASSERT_EXISTS(atom)\n\n            atom.loc = this.loc(begin)\n\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier()\n            }\n\n            return atom\n        }\n\n        RegExpParser.prototype.dotAll = function() {\n            this.consumeChar(\".\")\n            return {\n                type: \"Set\",\n                complement: true,\n                value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")]\n            }\n        }\n\n        RegExpParser.prototype.atomEscape = function() {\n            this.consumeChar(\"\\\\\")\n\n            switch (this.peekChar()) {\n                case \"1\":\n                case \"2\":\n                case \"3\":\n                case \"4\":\n                case \"5\":\n                case \"6\":\n                case \"7\":\n                case \"8\":\n                case \"9\":\n                    return this.decimalEscapeAtom()\n                case \"d\":\n                case \"D\":\n                case \"s\":\n                case \"S\":\n                case \"w\":\n                case \"W\":\n                    return this.characterClassEscape()\n                case \"f\":\n                case \"n\":\n                case \"r\":\n                case \"t\":\n                case \"v\":\n                    return this.controlEscapeAtom()\n                case \"c\":\n                    return this.controlLetterEscapeAtom()\n                case \"0\":\n                    return this.nulCharacterAtom()\n                case \"x\":\n                    return this.hexEscapeSequenceAtom()\n                case \"u\":\n                    return this.regExpUnicodeEscapeSequenceAtom()\n                default:\n                    return this.identityEscapeAtom()\n            }\n        }\n\n        RegExpParser.prototype.decimalEscapeAtom = function() {\n            var value = this.positiveInteger()\n\n            return { type: \"GroupBackReference\", value: value }\n        }\n\n        RegExpParser.prototype.characterClassEscape = function() {\n            var set\n            var complement = false\n            switch (this.popChar()) {\n                case \"d\":\n                    set = digitsCharCodes\n                    break\n                case \"D\":\n                    set = digitsCharCodes\n                    complement = true\n                    break\n                case \"s\":\n                    set = whitespaceCodes\n                    break\n                case \"S\":\n                    set = whitespaceCodes\n                    complement = true\n                    break\n                case \"w\":\n                    set = wordCharCodes\n                    break\n                case \"W\":\n                    set = wordCharCodes\n                    complement = true\n                    break\n            }\n\n            ASSERT_EXISTS(set)\n\n            return { type: \"Set\", value: set, complement: complement }\n        }\n\n        RegExpParser.prototype.controlEscapeAtom = function() {\n            var escapeCode\n            switch (this.popChar()) {\n                case \"f\":\n                    escapeCode = cc(\"\\f\")\n                    break\n                case \"n\":\n                    escapeCode = cc(\"\\n\")\n                    break\n                case \"r\":\n                    escapeCode = cc(\"\\r\")\n                    break\n                case \"t\":\n                    escapeCode = cc(\"\\t\")\n                    break\n                case \"v\":\n                    escapeCode = cc(\"\\v\")\n                    break\n            }\n            ASSERT_EXISTS(escapeCode)\n\n            return { type: \"Character\", value: escapeCode }\n        }\n\n        RegExpParser.prototype.controlLetterEscapeAtom = function() {\n            this.consumeChar(\"c\")\n            var letter = this.popChar()\n            if (/[a-zA-Z]/.test(letter) === false) {\n                throw Error(\"Invalid \")\n            }\n\n            var letterCode = letter.toUpperCase().charCodeAt(0) - 64\n            return { type: \"Character\", value: letterCode }\n        }\n\n        RegExpParser.prototype.nulCharacterAtom = function() {\n            // TODO implement '[lookahead ∉ DecimalDigit]'\n            // TODO: for the deprecated octal escape sequence\n            this.consumeChar(\"0\")\n            return { type: \"Character\", value: cc(\"\\0\") }\n        }\n\n        RegExpParser.prototype.hexEscapeSequenceAtom = function() {\n            this.consumeChar(\"x\")\n            return this.parseHexDigits(2)\n        }\n\n        RegExpParser.prototype.regExpUnicodeEscapeSequenceAtom = function() {\n            this.consumeChar(\"u\")\n            return this.parseHexDigits(4)\n        }\n\n        RegExpParser.prototype.identityEscapeAtom = function() {\n            // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n            // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n            var escapedChar = this.popChar()\n            return { type: \"Character\", value: cc(escapedChar) }\n        }\n\n        RegExpParser.prototype.classPatternCharacterAtom = function() {\n            switch (this.peekChar()) {\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                // istanbul ignore next\n                case \"\\\\\":\n                // istanbul ignore next\n                case \"]\":\n                    throw Error(\"TBD\")\n                default:\n                    var nextChar = this.popChar()\n                    return { type: \"Character\", value: cc(nextChar) }\n            }\n        }\n\n        RegExpParser.prototype.characterClass = function() {\n            var set = []\n            var complement = false\n            this.consumeChar(\"[\")\n            if (this.peekChar(0) === \"^\") {\n                this.consumeChar(\"^\")\n                complement = true\n            }\n\n            while (this.isClassAtom()) {\n                var from = this.classAtom()\n                var isFromSingleChar = from.type === \"Character\"\n                if (isFromSingleChar && this.isRangeDash()) {\n                    this.consumeChar(\"-\")\n                    var to = this.classAtom()\n                    var isToSingleChar = to.type === \"Character\"\n\n                    // a range can only be used when both sides are single characters\n                    if (isToSingleChar) {\n                        if (to.value < from.value) {\n                            throw Error(\"Range out of order in character class\")\n                        }\n                        set.push({ from: from.value, to: to.value })\n                    } else {\n                        // literal dash\n                        insertToSet(from.value, set)\n                        set.push(cc(\"-\"))\n                        insertToSet(to.value, set)\n                    }\n                } else {\n                    insertToSet(from.value, set)\n                }\n            }\n\n            this.consumeChar(\"]\")\n\n            return { type: \"Set\", complement: complement, value: set }\n        }\n\n        RegExpParser.prototype.classAtom = function() {\n            switch (this.peekChar()) {\n                // istanbul ignore next\n                case \"]\":\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                    throw Error(\"TBD\")\n                case \"\\\\\":\n                    return this.classEscape()\n                default:\n                    return this.classPatternCharacterAtom()\n            }\n        }\n\n        RegExpParser.prototype.classEscape = function() {\n            this.consumeChar(\"\\\\\")\n            switch (this.peekChar()) {\n                // Matches a backspace.\n                // (Not to be confused with \\b word boundary outside characterClass)\n                case \"b\":\n                    this.consumeChar(\"b\")\n                    return { type: \"Character\", value: cc(\"\\u0008\") }\n                case \"d\":\n                case \"D\":\n                case \"s\":\n                case \"S\":\n                case \"w\":\n                case \"W\":\n                    return this.characterClassEscape()\n                case \"f\":\n                case \"n\":\n                case \"r\":\n                case \"t\":\n                case \"v\":\n                    return this.controlEscapeAtom()\n                case \"c\":\n                    return this.controlLetterEscapeAtom()\n                case \"0\":\n                    return this.nulCharacterAtom()\n                case \"x\":\n                    return this.hexEscapeSequenceAtom()\n                case \"u\":\n                    return this.regExpUnicodeEscapeSequenceAtom()\n                default:\n                    return this.identityEscapeAtom()\n            }\n        }\n\n        RegExpParser.prototype.group = function() {\n            var capturing = true\n            this.consumeChar(\"(\")\n            switch (this.peekChar(0)) {\n                case \"?\":\n                    this.consumeChar(\"?\")\n                    this.consumeChar(\":\")\n                    capturing = false\n                    break\n                default:\n                    this.groupIdx++\n                    break\n            }\n            var value = this.disjunction()\n            this.consumeChar(\")\")\n\n            var groupAst = {\n                type: \"Group\",\n                capturing: capturing,\n                value: value\n            }\n\n            if (capturing) {\n                groupAst.idx = this.groupIdx\n            }\n\n            return groupAst\n        }\n\n        RegExpParser.prototype.positiveInteger = function() {\n            var number = this.popChar()\n\n            // istanbul ignore next - can't ever get here due to previous lookahead checks\n            // still implementing this error checking in case this ever changes.\n            if (decimalPatternNoZero.test(number) === false) {\n                throw Error(\"Expecting a positive integer\")\n            }\n\n            while (decimalPattern.test(this.peekChar(0))) {\n                number += this.popChar()\n            }\n\n            return parseInt(number, 10)\n        }\n\n        RegExpParser.prototype.integerIncludingZero = function() {\n            var number = this.popChar()\n            if (decimalPattern.test(number) === false) {\n                throw Error(\"Expecting an integer\")\n            }\n\n            while (decimalPattern.test(this.peekChar(0))) {\n                number += this.popChar()\n            }\n\n            return parseInt(number, 10)\n        }\n\n        RegExpParser.prototype.patternCharacter = function() {\n            var nextChar = this.popChar()\n            switch (nextChar) {\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                // istanbul ignore next\n                case \"^\":\n                // istanbul ignore next\n                case \"$\":\n                // istanbul ignore next\n                case \"\\\\\":\n                // istanbul ignore next\n                case \".\":\n                // istanbul ignore next\n                case \"*\":\n                // istanbul ignore next\n                case \"+\":\n                // istanbul ignore next\n                case \"?\":\n                // istanbul ignore next\n                case \"(\":\n                // istanbul ignore next\n                case \")\":\n                // istanbul ignore next\n                case \"[\":\n                // istanbul ignore next\n                case \"|\":\n                    // istanbul ignore next\n                    throw Error(\"TBD\")\n                default:\n                    return { type: \"Character\", value: cc(nextChar) }\n            }\n        }\n        RegExpParser.prototype.isRegExpFlag = function() {\n            switch (this.peekChar(0)) {\n                case \"g\":\n                case \"i\":\n                case \"m\":\n                case \"u\":\n                case \"y\":\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isRangeDash = function() {\n            return this.peekChar() === \"-\" && this.isClassAtom(1)\n        }\n\n        RegExpParser.prototype.isDigit = function() {\n            return decimalPattern.test(this.peekChar(0))\n        }\n\n        RegExpParser.prototype.isClassAtom = function(howMuch) {\n            if (howMuch === undefined) {\n                howMuch = 0\n            }\n\n            switch (this.peekChar(howMuch)) {\n                case \"]\":\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\u2028\":\n                case \"\\u2029\":\n                    return false\n                default:\n                    return true\n            }\n        }\n\n        RegExpParser.prototype.isTerm = function() {\n            return this.isAtom() || this.isAssertion()\n        }\n\n        RegExpParser.prototype.isAtom = function() {\n            if (this.isPatternCharacter()) {\n                return true\n            }\n\n            switch (this.peekChar(0)) {\n                case \".\":\n                case \"\\\\\": // atomEscape\n                case \"[\": // characterClass\n                // TODO: isAtom must be called before isAssertion - disambiguate\n                case \"(\": // group\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isAssertion = function() {\n            switch (this.peekChar(0)) {\n                case \"^\":\n                case \"$\":\n                    return true\n                // '\\b' or '\\B'\n                case \"\\\\\":\n                    switch (this.peekChar(1)) {\n                        case \"b\":\n                        case \"B\":\n                            return true\n                        default:\n                            return false\n                    }\n                // '(?=' or '(?!'\n                case \"(\":\n                    return (\n                        this.peekChar(1) === \"?\" &&\n                        (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\")\n                    )\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isQuantifier = function() {\n            var prevState = this.saveState()\n            try {\n                return this.quantifier(true) !== undefined\n            } catch (e) {\n                return false\n            } finally {\n                this.restoreState(prevState)\n            }\n        }\n\n        RegExpParser.prototype.isPatternCharacter = function() {\n            switch (this.peekChar()) {\n                case \"^\":\n                case \"$\":\n                case \"\\\\\":\n                case \".\":\n                case \"*\":\n                case \"+\":\n                case \"?\":\n                case \"(\":\n                case \")\":\n                case \"[\":\n                case \"|\":\n                case \"/\":\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\u2028\":\n                case \"\\u2029\":\n                    return false\n                default:\n                    return true\n            }\n        }\n\n        RegExpParser.prototype.parseHexDigits = function(howMany) {\n            var hexString = \"\"\n            for (var i = 0; i < howMany; i++) {\n                var hexChar = this.popChar()\n                if (hexDigitPattern.test(hexChar) === false) {\n                    throw Error(\"Expecting a HexDecimal digits\")\n                }\n                hexString += hexChar\n            }\n            var charCode = parseInt(hexString, 16)\n            return { type: \"Character\", value: charCode }\n        }\n\n        RegExpParser.prototype.peekChar = function(howMuch) {\n            if (howMuch === undefined) {\n                howMuch = 0\n            }\n            return this.input[this.idx + howMuch]\n        }\n\n        RegExpParser.prototype.popChar = function() {\n            var nextChar = this.peekChar(0)\n            this.consumeChar()\n            return nextChar\n        }\n\n        RegExpParser.prototype.consumeChar = function(char) {\n            if (char !== undefined && this.input[this.idx] !== char) {\n                throw Error(\n                    \"Expected: '\" +\n                        char +\n                        \"' but found: '\" +\n                        this.input[this.idx] +\n                        \"' at offset: \" +\n                        this.idx\n                )\n            }\n\n            if (this.idx >= this.input.length) {\n                throw Error(\"Unexpected end of input\")\n            }\n            this.idx++\n        }\n\n        RegExpParser.prototype.loc = function(begin) {\n            return { begin: begin, end: this.idx }\n        }\n\n        // consts and utilities\n        var hexDigitPattern = /[0-9a-fA-F]/\n        var decimalPattern = /[0-9]/\n        var decimalPatternNoZero = /[1-9]/\n\n        function cc(char) {\n            return char.charCodeAt(0)\n        }\n\n        function insertToSet(item, set) {\n            if (item.length !== undefined) {\n                item.forEach(function(subItem) {\n                    set.push(subItem)\n                })\n            } else {\n                set.push(item)\n            }\n        }\n\n        function addFlag(flagObj, flagKey) {\n            if (flagObj[flagKey] === true) {\n                throw \"duplicate flag \" + flagKey\n            }\n\n            flagObj[flagKey] = true\n        }\n\n        function ASSERT_EXISTS(obj) {\n            // istanbul ignore next\n            if (obj === undefined) {\n                throw Error(\"Internal Error - Should never get here!\")\n            }\n        }\n\n        // istanbul ignore next\n        function ASSERT_NEVER_REACH_HERE() {\n            throw Error(\"Internal Error - Should never get here!\")\n        }\n\n        var i\n        var digitsCharCodes = []\n        for (i = cc(\"0\"); i <= cc(\"9\"); i++) {\n            digitsCharCodes.push(i)\n        }\n\n        var wordCharCodes = [cc(\"_\")].concat(digitsCharCodes)\n        for (i = cc(\"a\"); i <= cc(\"z\"); i++) {\n            wordCharCodes.push(i)\n        }\n\n        for (i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n            wordCharCodes.push(i)\n        }\n\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\n        var whitespaceCodes = [\n            cc(\" \"),\n            cc(\"\\f\"),\n            cc(\"\\n\"),\n            cc(\"\\r\"),\n            cc(\"\\t\"),\n            cc(\"\\v\"),\n            cc(\"\\t\"),\n            cc(\"\\u00a0\"),\n            cc(\"\\u1680\"),\n            cc(\"\\u2000\"),\n            cc(\"\\u2001\"),\n            cc(\"\\u2002\"),\n            cc(\"\\u2003\"),\n            cc(\"\\u2004\"),\n            cc(\"\\u2005\"),\n            cc(\"\\u2006\"),\n            cc(\"\\u2007\"),\n            cc(\"\\u2008\"),\n            cc(\"\\u2009\"),\n            cc(\"\\u200a\"),\n            cc(\"\\u2028\"),\n            cc(\"\\u2029\"),\n            cc(\"\\u202f\"),\n            cc(\"\\u205f\"),\n            cc(\"\\u3000\"),\n            cc(\"\\ufeff\")\n        ]\n\n        function BaseRegExpVisitor() {}\n\n        BaseRegExpVisitor.prototype.visitChildren = function(node) {\n            for (var key in node) {\n                var child = node[key]\n                /* istanbul ignore else */\n                if (node.hasOwnProperty(key)) {\n                    if (child.type !== undefined) {\n                        this.visit(child)\n                    } else if (Array.isArray(child)) {\n                        child.forEach(function(subChild) {\n                            this.visit(subChild)\n                        }, this)\n                    }\n                }\n            }\n        }\n\n        BaseRegExpVisitor.prototype.visit = function(node) {\n            switch (node.type) {\n                case \"Pattern\":\n                    this.visitPattern(node)\n                    break\n                case \"Flags\":\n                    this.visitFlags(node)\n                    break\n                case \"Disjunction\":\n                    this.visitDisjunction(node)\n                    break\n                case \"Alternative\":\n                    this.visitAlternative(node)\n                    break\n                case \"StartAnchor\":\n                    this.visitStartAnchor(node)\n                    break\n                case \"EndAnchor\":\n                    this.visitEndAnchor(node)\n                    break\n                case \"WordBoundary\":\n                    this.visitWordBoundary(node)\n                    break\n                case \"NonWordBoundary\":\n                    this.visitNonWordBoundary(node)\n                    break\n                case \"Lookahead\":\n                    this.visitLookahead(node)\n                    break\n                case \"NegativeLookahead\":\n                    this.visitNegativeLookahead(node)\n                    break\n                case \"Character\":\n                    this.visitCharacter(node)\n                    break\n                case \"Set\":\n                    this.visitSet(node)\n                    break\n                case \"Group\":\n                    this.visitGroup(node)\n                    break\n                case \"GroupBackReference\":\n                    this.visitGroupBackReference(node)\n                    break\n                case \"Quantifier\":\n                    this.visitQuantifier(node)\n                    break\n            }\n\n            this.visitChildren(node)\n        }\n\n        BaseRegExpVisitor.prototype.visitPattern = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitFlags = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitDisjunction = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitAlternative = function(node) {}\n\n        // Assertion\n        BaseRegExpVisitor.prototype.visitStartAnchor = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitEndAnchor = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitWordBoundary = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitNonWordBoundary = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitLookahead = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitNegativeLookahead = function(node) {}\n\n        // atoms\n        BaseRegExpVisitor.prototype.visitCharacter = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitSet = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitGroup = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitGroupBackReference = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitQuantifier = function(node) {}\n\n        return {\n            RegExpParser: RegExpParser,\n            BaseRegExpVisitor: BaseRegExpVisitor,\n            VERSION: \"0.5.0\"\n        }\n    }\n)\n", "/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nmodule.exports = head;\n", "module.exports = require('./head');\n", "/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = compact;\n", "var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n", "/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n", "var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray'),\n    negate = require('./negate');\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nmodule.exports = reject;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n", "var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n", "var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n", "var baseIndexOf = require('./_baseIndexOf'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nmodule.exports = indexOf;\n", "var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n", "var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n", "var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n", "var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n", "var baseRest = require('./_baseRest'),\n    eq = require('./eq'),\n    isIterateeCall = require('./_isIterateeCall'),\n    keysIn = require('./keysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nmodule.exports = defaults;\n", "/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n", "/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n", "var arrayReduce = require('./_arrayReduce'),\n    baseEach = require('./_baseEach'),\n    baseIteratee = require('./_baseIteratee'),\n    baseReduce = require('./_baseReduce'),\n    isArray = require('./isArray');\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nmodule.exports = reduce;\n", "import {\n  Alternative,\n  Assertion,\n  Atom,\n  Disjunction,\n  RegExpParser,\n  RegExpPattern\n} from \"regexp-to-ast\"\n\nlet regExpAstCache: { [regex: string]: RegExpPattern } = {}\nconst regExpParser = new RegExpParser()\n\n// this should be moved to regexp-to-ast\nexport type ASTNode =\n  | RegExpPattern\n  | Disjunction\n  | Alternative\n  | Assertion\n  | Atom\n\nexport function getRegExpAst(regExp: RegExp): RegExpPattern {\n  const regExpStr = regExp.toString()\n  if (regExpAstCache.hasOwnProperty(regExpStr)) {\n    return regExpAstCache[regExpStr]\n  } else {\n    const regExpAst = regExpParser.pattern(regExpStr)\n    regExpAstCache[regExpStr] = regExpAst\n    return regExpAst\n  }\n}\n\nexport function clearRegExpParserCache() {\n  regExpAstCache = {}\n}\n", "import {\n  Alternative,\n  Atom,\n  BaseRegExpVisitor,\n  Character,\n  Disjunction,\n  Group,\n  Set,\n  Term,\n  VERSION\n} from \"regexp-to-ast\"\nimport isArray from \"lodash/isArray\"\nimport every from \"lodash/every\"\nimport forEach from \"lodash/forEach\"\nimport find from \"lodash/find\"\nimport values from \"lodash/values\"\nimport includes from \"lodash/includes\"\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\"\nimport { ASTNode, getRegExpAst } from \"./reg_exp_parser\"\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer\"\n\nconst complementErrorMessage =\n  \"Complement Sets are not supported for first char optimization\"\nexport const failedOptimizationPrefixMsg =\n  'Unable to use \"first char\" lexer optimizations:\\n'\n\nexport function getOptimizedStartCodesIndices(\n  regExp: RegExp,\n  ensureOptimizations = false\n): number[] {\n  try {\n    const ast = getRegExpAst(regExp)\n    const firstChars = firstCharOptimizedIndices(\n      ast.value,\n      {},\n      ast.flags.ignoreCase\n    )\n    return firstChars\n  } catch (e) {\n    /* istanbul ignore next */\n    // Testing this relies on the regexp-to-ast library having a bug... */\n    // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n    if (e.message === complementErrorMessage) {\n      if (ensureOptimizations) {\n        PRINT_WARNING(\n          `${failedOptimizationPrefixMsg}` +\n            `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n            \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n            \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\"\n        )\n      }\n    } else {\n      let msgSuffix = \"\"\n      if (ensureOptimizations) {\n        msgSuffix =\n          \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n          \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\"\n      }\n      PRINT_ERROR(\n        `${failedOptimizationPrefixMsg}\\n` +\n          `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n          `\\tUsing the regexp-to-ast library version: ${VERSION}\\n` +\n          \"\\tPlease open an issue at: https://github.com/bd82/regexp-to-ast/issues\" +\n          msgSuffix\n      )\n    }\n  }\n\n  return []\n}\n\nexport function firstCharOptimizedIndices(\n  ast: ASTNode,\n  result: { [charCode: number]: number },\n  ignoreCase: boolean\n): number[] {\n  switch (ast.type) {\n    case \"Disjunction\":\n      for (let i = 0; i < ast.value.length; i++) {\n        firstCharOptimizedIndices(ast.value[i], result, ignoreCase)\n      }\n      break\n    case \"Alternative\":\n      const terms = ast.value\n      for (let i = 0; i < terms.length; i++) {\n        const term = terms[i]\n\n        // skip terms that cannot effect the first char results\n        switch (term.type) {\n          case \"EndAnchor\":\n          // A group back reference cannot affect potential starting char.\n          // because if a back reference is the first production than automatically\n          // the group being referenced has had to come BEFORE so its codes have already been added\n          case \"GroupBackReference\":\n          // assertions do not affect potential starting codes\n          case \"Lookahead\":\n          case \"NegativeLookahead\":\n          case \"StartAnchor\":\n          case \"WordBoundary\":\n          case \"NonWordBoundary\":\n            continue\n        }\n\n        const atom = term\n        switch (atom.type) {\n          case \"Character\":\n            addOptimizedIdxToResult(atom.value, result, ignoreCase)\n            break\n          case \"Set\":\n            if (atom.complement === true) {\n              throw Error(complementErrorMessage)\n            }\n            forEach(atom.value, (code) => {\n              if (typeof code === \"number\") {\n                addOptimizedIdxToResult(code, result, ignoreCase)\n              } else {\n                // range\n                const range = code as any\n                // cannot optimize when ignoreCase is\n                if (ignoreCase === true) {\n                  for (\n                    let rangeCode = range.from;\n                    rangeCode <= range.to;\n                    rangeCode++\n                  ) {\n                    addOptimizedIdxToResult(rangeCode, result, ignoreCase)\n                  }\n                }\n                // Optimization (2 orders of magnitude less work for very large ranges)\n                else {\n                  // handle unoptimized values\n                  for (\n                    let rangeCode = range.from;\n                    rangeCode <= range.to && rangeCode < minOptimizationVal;\n                    rangeCode++\n                  ) {\n                    addOptimizedIdxToResult(rangeCode, result, ignoreCase)\n                  }\n\n                  // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                  if (range.to >= minOptimizationVal) {\n                    const minUnOptVal =\n                      range.from >= minOptimizationVal\n                        ? range.from\n                        : minOptimizationVal\n                    const maxUnOptVal = range.to\n                    const minOptIdx = charCodeToOptimizedIndex(minUnOptVal)\n                    const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal)\n\n                    for (\n                      let currOptIdx = minOptIdx;\n                      currOptIdx <= maxOptIdx;\n                      currOptIdx++\n                    ) {\n                      result[currOptIdx] = currOptIdx\n                    }\n                  }\n                }\n              }\n            })\n            break\n          case \"Group\":\n            firstCharOptimizedIndices(atom.value, result, ignoreCase)\n            break\n          /* istanbul ignore next */\n          default:\n            throw Error(\"Non Exhaustive Match\")\n        }\n\n        // reached a mandatory production, no more **start** codes can be found on this alternative\n        const isOptionalQuantifier =\n          atom.quantifier !== undefined && atom.quantifier.atLeast === 0\n        if (\n          // A group may be optional due to empty contents /(?:)/\n          // or if everything inside it is optional /((a)?)/\n          (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n          // If this term is not a group it may only be optional if it has an optional quantifier\n          (atom.type !== \"Group\" && isOptionalQuantifier === false)\n        ) {\n          break\n        }\n      }\n      break\n    /* istanbul ignore next */\n    default:\n      throw Error(\"non exhaustive match!\")\n  }\n\n  // console.log(Object.keys(result).length)\n  return values(result)\n}\n\nfunction addOptimizedIdxToResult(\n  code: number,\n  result: { [charCode: number]: number },\n  ignoreCase: boolean\n) {\n  const optimizedCharIdx = charCodeToOptimizedIndex(code)\n  result[optimizedCharIdx] = optimizedCharIdx\n\n  if (ignoreCase === true) {\n    handleIgnoreCase(code, result)\n  }\n}\n\nfunction handleIgnoreCase(\n  code: number,\n  result: { [charCode: number]: number }\n) {\n  const char = String.fromCharCode(code)\n  const upperChar = char.toUpperCase()\n  /* istanbul ignore else */\n  if (upperChar !== char) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0))\n    result[optimizedCharIdx] = optimizedCharIdx\n  } else {\n    const lowerChar = char.toLowerCase()\n    if (lowerChar !== char) {\n      const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0))\n      result[optimizedCharIdx] = optimizedCharIdx\n    }\n  }\n}\n\nfunction findCode(setNode: Set, targetCharCodes: number[]) {\n  return find(setNode.value, (codeOrRange) => {\n    if (typeof codeOrRange === \"number\") {\n      return includes(targetCharCodes, codeOrRange)\n    } else {\n      // range\n      const range = <any>codeOrRange\n      return (\n        find(\n          targetCharCodes,\n          (targetCode) => range.from <= targetCode && targetCode <= range.to\n        ) !== undefined\n      )\n    }\n  })\n}\n\nfunction isWholeOptional(ast: any): boolean {\n  const quantifier = (ast as Atom).quantifier\n  if (quantifier && quantifier.atLeast === 0) {\n    return true\n  }\n\n  if (!ast.value) {\n    return false\n  }\n\n  return isArray(ast.value)\n    ? every(ast.value, isWholeOptional)\n    : isWholeOptional(ast.value)\n}\n\nclass CharCodeFinder extends BaseRegExpVisitor {\n  found: boolean = false\n\n  constructor(private targetCharCodes: number[]) {\n    super()\n  }\n\n  visitChildren(node: ASTNode) {\n    // No need to keep looking...\n    if (this.found === true) {\n      return\n    }\n\n    // switch lookaheads as they do not actually consume any characters thus\n    // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n    switch (node.type) {\n      case \"Lookahead\":\n        this.visitLookahead(node)\n        return\n      case \"NegativeLookahead\":\n        this.visitNegativeLookahead(node)\n        return\n    }\n\n    super.visitChildren(node)\n  }\n\n  visitCharacter(node: Character) {\n    if (includes(this.targetCharCodes, node.value)) {\n      this.found = true\n    }\n  }\n\n  visitSet(node: Set) {\n    if (node.complement) {\n      if (findCode(node, this.targetCharCodes) === undefined) {\n        this.found = true\n      }\n    } else {\n      if (findCode(node, this.targetCharCodes) !== undefined) {\n        this.found = true\n      }\n    }\n  }\n}\n\nexport function canMatchCharCode(\n  charCodes: number[],\n  pattern: RegExp | string\n) {\n  if (pattern instanceof RegExp) {\n    const ast = getRegExpAst(pattern)\n    const charCodeFinder = new CharCodeFinder(charCodes)\n    charCodeFinder.visit(ast)\n    return charCodeFinder.found\n  } else {\n    return (\n      find(<any>pattern, (char) => {\n        return includes(charCodes, (<string>char).charCodeAt(0))\n      }) !== undefined\n    )\n  }\n}\n", "import { BaseRegExpVisitor } from \"regexp-to-ast\"\nimport { IRegExpExec, Lexer, LexerDefinitionErrorType } from \"./lexer_public\"\nimport first from \"lodash/first\"\nimport isEmpty from \"lodash/isEmpty\"\nimport compact from \"lodash/compact\"\nimport isArray from \"lodash/isArray\"\nimport values from \"lodash/values\"\nimport flatten from \"lodash/flatten\"\nimport reject from \"lodash/reject\"\nimport difference from \"lodash/difference\"\nimport indexOf from \"lodash/indexOf\"\nimport map from \"lodash/map\"\nimport forEach from \"lodash/forEach\"\nimport isString from \"lodash/isString\"\nimport isFunction from \"lodash/isFunction\"\nimport isUndefined from \"lodash/isUndefined\"\nimport find from \"lodash/find\"\nimport has from \"lodash/has\"\nimport keys from \"lodash/keys\"\nimport isRegExp from \"lodash/isRegExp\"\nimport filter from \"lodash/filter\"\nimport defaults from \"lodash/defaults\"\nimport reduce from \"lodash/reduce\"\nimport includes from \"lodash/includes\"\nimport { PRINT_ERROR } from \"@chevrotain/utils\"\nimport {\n  canMatchCharCode,\n  failedOptimizationPrefixMsg,\n  getOptimizedStartCodesIndices\n} from \"./reg_exp\"\nimport {\n  ILexerDefinitionError,\n  ILineTerminatorsTester,\n  IMultiModeLexerDefinition,\n  IToken,\n  TokenType\n} from \"@chevrotain/types\"\nimport { getRegExpAst } from \"./reg_exp_parser\"\n\nconst PATTERN = \"PATTERN\"\nexport const DEFAULT_MODE = \"defaultMode\"\nexport const MODES = \"modes\"\n\nexport interface IPatternConfig {\n  pattern: IRegExpExec | string\n  longerAlt: number[] | undefined\n  canLineTerminator: boolean\n  isCustom: boolean\n  short: number | false\n  group: string | undefined | false\n  push: string | undefined\n  pop: boolean\n  tokenType: TokenType\n  tokenTypeIdx: number\n}\n\nexport interface IAnalyzeResult {\n  patternIdxToConfig: IPatternConfig[]\n  charCodeToPatternIdxToConfig: { [charCode: number]: IPatternConfig[] }\n  emptyGroups: { [groupName: string]: IToken[] }\n  hasCustom: boolean\n  canBeOptimized: boolean\n}\n\nexport let SUPPORT_STICKY =\n  typeof (<any>new RegExp(\"(?:)\")).sticky === \"boolean\"\n\nexport function disableSticky() {\n  SUPPORT_STICKY = false\n}\n\nexport function enableSticky() {\n  SUPPORT_STICKY = true\n}\n\nexport function analyzeTokenTypes(\n  tokenTypes: TokenType[],\n  options: {\n    positionTracking?: \"full\" | \"onlyStart\" | \"onlyOffset\"\n    ensureOptimizations?: boolean\n    lineTerminatorCharacters?: (number | string)[]\n    // TODO: should `useSticky` be an argument here?\n    useSticky?: boolean\n    safeMode?: boolean\n    tracer?: (msg: string, action: () => void) => void\n  }\n): IAnalyzeResult {\n  options = defaults(options, {\n    useSticky: SUPPORT_STICKY,\n    debug: false as boolean,\n    safeMode: false as boolean,\n    positionTracking: \"full\",\n    lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n    tracer: (msg: string, action: Function) => action()\n  })\n\n  const tracer = options.tracer!\n\n  tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n    initCharCodeToOptimizedIndexMap()\n  })\n\n  let onlyRelevantTypes: TokenType[]\n  tracer(\"Reject Lexer.NA\", () => {\n    onlyRelevantTypes = reject(tokenTypes, (currType) => {\n      return currType[PATTERN] === Lexer.NA\n    })\n  })\n\n  let hasCustom = false\n  let allTransformedPatterns: (IRegExpExec | string)[]\n  tracer(\"Transform Patterns\", () => {\n    hasCustom = false\n    allTransformedPatterns = map(\n      onlyRelevantTypes,\n      (currType): IRegExpExec | string => {\n        const currPattern = currType[PATTERN]\n\n        /* istanbul ignore else */\n        if (isRegExp(currPattern)) {\n          const regExpSource = currPattern.source\n          if (\n            regExpSource.length === 1 &&\n            // only these regExp meta characters which can appear in a length one regExp\n            regExpSource !== \"^\" &&\n            regExpSource !== \"$\" &&\n            regExpSource !== \".\" &&\n            !currPattern.ignoreCase\n          ) {\n            return regExpSource\n          } else if (\n            regExpSource.length === 2 &&\n            regExpSource[0] === \"\\\\\" &&\n            // not a meta character\n            !includes(\n              [\n                \"d\",\n                \"D\",\n                \"s\",\n                \"S\",\n                \"t\",\n                \"r\",\n                \"n\",\n                \"t\",\n                \"0\",\n                \"c\",\n                \"b\",\n                \"B\",\n                \"f\",\n                \"v\",\n                \"w\",\n                \"W\"\n              ],\n              regExpSource[1]\n            )\n          ) {\n            // escaped meta Characters: /\\+/ /\\[/\n            // or redundant escaping: /\\a/\n            // without the escaping \"\\\"\n            return regExpSource[1]\n          } else {\n            return options.useSticky\n              ? addStickyFlag(currPattern)\n              : addStartOfInput(currPattern)\n          }\n        } else if (isFunction(currPattern)) {\n          hasCustom = true\n          // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n          return { exec: currPattern }\n        } else if (typeof currPattern === \"object\") {\n          hasCustom = true\n          // ICustomPattern\n          return currPattern\n        } else if (typeof currPattern === \"string\") {\n          if (currPattern.length === 1) {\n            return currPattern\n          } else {\n            const escapedRegExpString = currPattern.replace(\n              /[\\\\^$.*+?()[\\]{}|]/g,\n              \"\\\\$&\"\n            )\n            const wrappedRegExp = new RegExp(escapedRegExpString)\n            return options.useSticky\n              ? addStickyFlag(wrappedRegExp)\n              : addStartOfInput(wrappedRegExp)\n          }\n        } else {\n          throw Error(\"non exhaustive match\")\n        }\n      }\n    )\n  })\n\n  let patternIdxToType: number[]\n  let patternIdxToGroup: (string | undefined | false)[]\n  let patternIdxToLongerAltIdxArr: (number[] | undefined)[]\n  let patternIdxToPushMode: (string | undefined)[]\n  let patternIdxToPopMode: boolean[]\n  tracer(\"misc mapping\", () => {\n    patternIdxToType = map(\n      onlyRelevantTypes,\n      (currType) => currType.tokenTypeIdx!\n    )\n\n    patternIdxToGroup = map(onlyRelevantTypes, (clazz: any) => {\n      const groupName = clazz.GROUP\n      /* istanbul ignore next */\n      if (groupName === Lexer.SKIPPED) {\n        return undefined\n      } else if (isString(groupName)) {\n        return groupName\n      } else if (isUndefined(groupName)) {\n        return false\n      } else {\n        throw Error(\"non exhaustive match\")\n      }\n    })\n\n    patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz: any) => {\n      const longerAltType = clazz.LONGER_ALT\n\n      if (longerAltType) {\n        const longerAltIdxArr = isArray(longerAltType)\n          ? map(longerAltType, (type: any) => indexOf(onlyRelevantTypes, type))\n          : [indexOf(onlyRelevantTypes, longerAltType)]\n        return longerAltIdxArr\n      }\n    })\n\n    patternIdxToPushMode = map(\n      onlyRelevantTypes,\n      (clazz: any) => clazz.PUSH_MODE\n    )\n\n    patternIdxToPopMode = map(onlyRelevantTypes, (clazz: any) =>\n      has(clazz, \"POP_MODE\")\n    )\n  })\n\n  let patternIdxToCanLineTerminator: boolean[]\n  tracer(\"Line Terminator Handling\", () => {\n    const lineTerminatorCharCodes = getCharCodes(\n      options.lineTerminatorCharacters!\n    )\n    patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false)\n    if (options.positionTracking !== \"onlyOffset\") {\n      patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n        if (has(tokType, \"LINE_BREAKS\")) {\n          return !!tokType.LINE_BREAKS\n        } else {\n          return (\n            checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n            canMatchCharCode(\n              lineTerminatorCharCodes,\n              tokType.PATTERN as RegExp | string\n            )\n          )\n        }\n      })\n    }\n  })\n\n  let patternIdxToIsCustom: boolean[]\n  let patternIdxToShort: (number | false)[]\n  let emptyGroups!: { [groupName: string]: IToken[] }\n  let patternIdxToConfig!: IPatternConfig[]\n  tracer(\"Misc Mapping #2\", () => {\n    patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern)\n    patternIdxToShort = map(allTransformedPatterns, isShortPattern)\n\n    emptyGroups = reduce(\n      onlyRelevantTypes,\n      (acc, clazz: any) => {\n        const groupName = clazz.GROUP\n        if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n          acc[groupName] = []\n        }\n        return acc\n      },\n      {} as { [groupName: string]: IToken[] }\n    )\n\n    patternIdxToConfig = map(\n      allTransformedPatterns,\n      (x, idx): IPatternConfig => {\n        return {\n          pattern: allTransformedPatterns[idx],\n          longerAlt: patternIdxToLongerAltIdxArr[idx],\n          canLineTerminator: patternIdxToCanLineTerminator[idx],\n          isCustom: patternIdxToIsCustom[idx],\n          short: patternIdxToShort[idx],\n          group: patternIdxToGroup[idx],\n          push: patternIdxToPushMode[idx],\n          pop: patternIdxToPopMode[idx],\n          tokenTypeIdx: patternIdxToType[idx],\n          tokenType: onlyRelevantTypes[idx]\n        }\n      }\n    )\n  })\n\n  let canBeOptimized = true\n  let charCodeToPatternIdxToConfig: { [charCode: number]: IPatternConfig[] } =\n    []\n\n  if (!options.safeMode) {\n    tracer(\"First Char Optimization\", () => {\n      charCodeToPatternIdxToConfig = reduce(\n        onlyRelevantTypes,\n        (result, currTokType, idx) => {\n          if (typeof currTokType.PATTERN === \"string\") {\n            const charCode = currTokType.PATTERN.charCodeAt(0)\n            const optimizedIdx = charCodeToOptimizedIndex(charCode)\n            addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx])\n          } else if (isArray(currTokType.START_CHARS_HINT)) {\n            let lastOptimizedIdx: number\n            forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n              const charCode =\n                typeof charOrInt === \"string\"\n                  ? charOrInt.charCodeAt(0)\n                  : charOrInt\n              const currOptimizedIdx = charCodeToOptimizedIndex(charCode)\n              // Avoid adding the config multiple times\n              /* istanbul ignore else */\n              // - Difficult to check this scenario effects as it is only a performance\n              //   optimization that does not change correctness\n              if (lastOptimizedIdx !== currOptimizedIdx) {\n                lastOptimizedIdx = currOptimizedIdx\n                addToMapOfArrays(\n                  result,\n                  currOptimizedIdx,\n                  patternIdxToConfig[idx]\n                )\n              }\n            })\n          } else if (isRegExp(currTokType.PATTERN)) {\n            if (currTokType.PATTERN.unicode) {\n              canBeOptimized = false\n              if (options.ensureOptimizations) {\n                PRINT_ERROR(\n                  `${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                    \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\"\n                )\n              }\n            } else {\n              const optimizedCodes = getOptimizedStartCodesIndices(\n                currTokType.PATTERN,\n                options.ensureOptimizations\n              )\n              /* istanbul ignore if */\n              // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n              // the first should be a different validation and the second cannot be tested.\n              if (isEmpty(optimizedCodes)) {\n                // we cannot understand what codes may start possible matches\n                // The optimization correctness requires knowing start codes for ALL patterns.\n                // Not actually sure this is an error, no debug message\n                canBeOptimized = false\n              }\n              forEach(optimizedCodes, (code) => {\n                addToMapOfArrays(result, code, patternIdxToConfig[idx])\n              })\n            }\n          } else {\n            if (options.ensureOptimizations) {\n              PRINT_ERROR(\n                `${failedOptimizationPrefixMsg}` +\n                  `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                  \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                  \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\"\n              )\n            }\n            canBeOptimized = false\n          }\n\n          return result\n        },\n        [] as { [charCode: number]: IPatternConfig[] }\n      )\n    })\n  }\n\n  return {\n    emptyGroups: emptyGroups,\n    patternIdxToConfig: patternIdxToConfig,\n    charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n    hasCustom: hasCustom,\n    canBeOptimized: canBeOptimized\n  }\n}\n\nexport function validatePatterns(\n  tokenTypes: TokenType[],\n  validModesNames: string[]\n): ILexerDefinitionError[] {\n  let errors: ILexerDefinitionError[] = []\n\n  const missingResult = findMissingPatterns(tokenTypes)\n  errors = errors.concat(missingResult.errors)\n\n  const invalidResult = findInvalidPatterns(missingResult.valid)\n  const validTokenTypes = invalidResult.valid\n  errors = errors.concat(invalidResult.errors)\n\n  errors = errors.concat(validateRegExpPattern(validTokenTypes))\n\n  errors = errors.concat(findInvalidGroupType(validTokenTypes))\n\n  errors = errors.concat(\n    findModesThatDoNotExist(validTokenTypes, validModesNames)\n  )\n\n  errors = errors.concat(findUnreachablePatterns(validTokenTypes))\n\n  return errors\n}\n\nfunction validateRegExpPattern(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  let errors: ILexerDefinitionError[] = []\n  const withRegExpPatterns = filter(tokenTypes, (currTokType) =>\n    isRegExp(currTokType[PATTERN])\n  )\n\n  errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns))\n\n  errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns))\n\n  errors = errors.concat(findUnsupportedFlags(withRegExpPatterns))\n\n  errors = errors.concat(findDuplicatePatterns(withRegExpPatterns))\n\n  errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns))\n\n  return errors\n}\n\nexport interface ILexerFilterResult {\n  errors: ILexerDefinitionError[]\n  valid: TokenType[]\n}\n\nexport function findMissingPatterns(\n  tokenTypes: TokenType[]\n): ILexerFilterResult {\n  const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n    return !has(currType, PATTERN)\n  })\n\n  const errors = map(tokenTypesWithMissingPattern, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- missing static 'PATTERN' property\",\n      type: LexerDefinitionErrorType.MISSING_PATTERN,\n      tokenTypes: [currType]\n    }\n  })\n\n  const valid = difference(tokenTypes, tokenTypesWithMissingPattern)\n  return { errors, valid }\n}\n\nexport function findInvalidPatterns(\n  tokenTypes: TokenType[]\n): ILexerFilterResult {\n  const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n    const pattern = currType[PATTERN]\n    return (\n      !isRegExp(pattern) &&\n      !isFunction(pattern) &&\n      !has(pattern, \"exec\") &&\n      !isString(pattern)\n    )\n  })\n\n  const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' can only be a RegExp, a\" +\n        \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n      type: LexerDefinitionErrorType.INVALID_PATTERN,\n      tokenTypes: [currType]\n    }\n  })\n\n  const valid = difference(tokenTypes, tokenTypesWithInvalidPattern)\n  return { errors, valid }\n}\n\nconst end_of_input = /[^\\\\][$]/\n\nexport function findEndOfInputAnchor(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  class EndAnchorFinder extends BaseRegExpVisitor {\n    found = false\n\n    visitEndAnchor(node: unknown) {\n      this.found = true\n    }\n  }\n\n  const invalidRegex = filter(tokenTypes, (currType) => {\n    const pattern = currType.PATTERN\n\n    try {\n      const regexpAst = getRegExpAst(pattern as RegExp)\n      const endAnchorVisitor = new EndAnchorFinder()\n      endAnchorVisitor.visit(regexpAst)\n\n      return endAnchorVisitor.found\n    } catch (e) {\n      // old behavior in case of runtime exceptions with regexp-to-ast.\n      /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n      return end_of_input.test((pattern as RegExp).source)\n    }\n  })\n\n  const errors = map(invalidRegex, (currType) => {\n    return {\n      message:\n        \"Unexpected RegExp Anchor Error:\\n\" +\n        \"\\tToken Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n        \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n        \"\\tfor details.\",\n      type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n      tokenTypes: [currType]\n    }\n  })\n\n  return errors\n}\n\nexport function findEmptyMatchRegExps(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  const matchesEmptyString = filter(tokenTypes, (currType) => {\n    const pattern = currType.PATTERN as RegExp\n    return pattern.test(\"\")\n  })\n\n  const errors = map(matchesEmptyString, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' must not match an empty string\",\n      type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n      tokenTypes: [currType]\n    }\n  })\n\n  return errors\n}\n\nconst start_of_input = /[^\\\\[][\\^]|^\\^/\n\nexport function findStartOfInputAnchor(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  class StartAnchorFinder extends BaseRegExpVisitor {\n    found = false\n\n    visitStartAnchor(node: unknown) {\n      this.found = true\n    }\n  }\n\n  const invalidRegex = filter(tokenTypes, (currType) => {\n    const pattern = currType.PATTERN as RegExp\n    try {\n      const regexpAst = getRegExpAst(pattern)\n      const startAnchorVisitor = new StartAnchorFinder()\n      startAnchorVisitor.visit(regexpAst)\n\n      return startAnchorVisitor.found\n    } catch (e) {\n      // old behavior in case of runtime exceptions with regexp-to-ast.\n      /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n      return start_of_input.test(pattern.source)\n    }\n  })\n\n  const errors = map(invalidRegex, (currType) => {\n    return {\n      message:\n        \"Unexpected RegExp Anchor Error:\\n\" +\n        \"\\tToken Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n        \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n        \"\\tfor details.\",\n      type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n      tokenTypes: [currType]\n    }\n  })\n\n  return errors\n}\n\nexport function findUnsupportedFlags(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  const invalidFlags = filter(tokenTypes, (currType) => {\n    const pattern = currType[PATTERN]\n    return pattern instanceof RegExp && (pattern.multiline || pattern.global)\n  })\n\n  const errors = map(invalidFlags, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n      type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n      tokenTypes: [currType]\n    }\n  })\n\n  return errors\n}\n\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  const found: TokenType[] = []\n  let identicalPatterns = map(tokenTypes, (outerType: any) => {\n    return reduce(\n      tokenTypes,\n      (result, innerType) => {\n        if (\n          outerType.PATTERN.source === (innerType.PATTERN as RegExp).source &&\n          !includes(found, innerType) &&\n          innerType.PATTERN !== Lexer.NA\n        ) {\n          // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n          // in essence we are creating Equivalence classes on equality relation.\n          found.push(innerType)\n          result.push(innerType)\n          return result\n        }\n        return result\n      },\n      [] as TokenType[]\n    )\n  })\n\n  identicalPatterns = compact(identicalPatterns)\n\n  const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n    return currIdenticalSet.length > 1\n  })\n\n  const errors = map(duplicatePatterns, (setOfIdentical: any) => {\n    const tokenTypeNames = map(setOfIdentical, (currType: any) => {\n      return currType.name\n    })\n\n    const dupPatternSrc = (<any>first(setOfIdentical)).PATTERN\n    return {\n      message:\n        `The same RegExp pattern ->${dupPatternSrc}<-` +\n        `has been used in all of the following Token Types: ${tokenTypeNames.join(\n          \", \"\n        )} <-`,\n      type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n      tokenTypes: setOfIdentical\n    }\n  })\n\n  return errors\n}\n\nexport function findInvalidGroupType(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  const invalidTypes = filter(tokenTypes, (clazz: any) => {\n    if (!has(clazz, \"GROUP\")) {\n      return false\n    }\n    const group = clazz.GROUP\n\n    return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group)\n  })\n\n  const errors = map(invalidTypes, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n      type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n      tokenTypes: [currType]\n    }\n  })\n\n  return errors\n}\n\nexport function findModesThatDoNotExist(\n  tokenTypes: TokenType[],\n  validModes: string[]\n): ILexerDefinitionError[] {\n  const invalidModes = filter(tokenTypes, (clazz: any) => {\n    return (\n      clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE)\n    )\n  })\n\n  const errors = map(invalidModes, (tokType) => {\n    const msg =\n      `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n      `which does not exist`\n    return {\n      message: msg,\n      type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n      tokenTypes: [tokType]\n    }\n  })\n\n  return errors\n}\n\nexport function findUnreachablePatterns(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  const errors: ILexerDefinitionError[] = []\n\n  const canBeTested = reduce(\n    tokenTypes,\n    (result, tokType, idx) => {\n      const pattern = tokType.PATTERN\n\n      if (pattern === Lexer.NA) {\n        return result\n      }\n\n      // a more comprehensive validation for all forms of regExps would require\n      // deeper regExp analysis capabilities\n      if (isString(pattern)) {\n        result.push({ str: pattern, idx, tokenType: tokType })\n      } else if (isRegExp(pattern) && noMetaChar(pattern)) {\n        result.push({ str: pattern.source, idx, tokenType: tokType })\n      }\n      return result\n    },\n    [] as { str: string; idx: number; tokenType: TokenType }[]\n  )\n\n  forEach(tokenTypes, (tokType, testIdx) => {\n    forEach(canBeTested, ({ str, idx, tokenType }) => {\n      if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n        const msg =\n          `Token: ->${tokenType.name}<- can never be matched.\\n` +\n          `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n          `in the lexer's definition.\\n` +\n          `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`\n        errors.push({\n          message: msg,\n          type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n          tokenTypes: [tokType, tokenType]\n        })\n      }\n    })\n  })\n\n  return errors\n}\n\nfunction testTokenType(str: string, pattern: any): boolean {\n  /* istanbul ignore else */\n  if (isRegExp(pattern)) {\n    const regExpArray = pattern.exec(str)\n    return regExpArray !== null && regExpArray.index === 0\n  } else if (isFunction(pattern)) {\n    // maintain the API of custom patterns\n    return pattern(str, 0, [], {})\n  } else if (has(pattern, \"exec\")) {\n    // maintain the API of custom patterns\n    return pattern.exec(str, 0, [], {})\n  } else if (typeof pattern === \"string\") {\n    return pattern === str\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nfunction noMetaChar(regExp: RegExp): boolean {\n  //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n  const metaChars = [\n    \".\",\n    \"\\\\\",\n    \"[\",\n    \"]\",\n    \"|\",\n    \"^\",\n    \"$\",\n    \"(\",\n    \")\",\n    \"?\",\n    \"*\",\n    \"+\",\n    \"{\"\n  ]\n  return (\n    find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined\n  )\n}\n\nexport function addStartOfInput(pattern: RegExp): RegExp {\n  const flags = pattern.ignoreCase ? \"i\" : \"\"\n  // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n  // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n  return new RegExp(`^(?:${pattern.source})`, flags)\n}\n\nexport function addStickyFlag(pattern: RegExp): RegExp {\n  const flags = pattern.ignoreCase ? \"iy\" : \"y\"\n  // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n  // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n  return new RegExp(`${pattern.source}`, flags)\n}\n\nexport function performRuntimeChecks(\n  lexerDefinition: IMultiModeLexerDefinition,\n  trackLines: boolean,\n  lineTerminatorCharacters: (number | string)[]\n): ILexerDefinitionError[] {\n  const errors: ILexerDefinitionError[] = []\n\n  // some run time checks to help the end users.\n  if (!has(lexerDefinition, DEFAULT_MODE)) {\n    errors.push({\n      message:\n        \"A MultiMode Lexer cannot be initialized without a <\" +\n        DEFAULT_MODE +\n        \"> property in its definition\\n\",\n      type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\n    })\n  }\n  if (!has(lexerDefinition, MODES)) {\n    errors.push({\n      message:\n        \"A MultiMode Lexer cannot be initialized without a <\" +\n        MODES +\n        \"> property in its definition\\n\",\n      type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\n    })\n  }\n\n  if (\n    has(lexerDefinition, MODES) &&\n    has(lexerDefinition, DEFAULT_MODE) &&\n    !has(lexerDefinition.modes, lexerDefinition.defaultMode)\n  ) {\n    errors.push({\n      message:\n        `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n        `which does not exist\\n`,\n      type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\n    })\n  }\n\n  if (has(lexerDefinition, MODES)) {\n    forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n      forEach(currModeValue, (currTokType, currIdx) => {\n        if (isUndefined(currTokType)) {\n          errors.push({\n            message:\n              `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n              `<${currModeName}> at index: <${currIdx}>\\n`,\n            type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\n          })\n        } else if (has(currTokType, \"LONGER_ALT\")) {\n          const longerAlt = isArray(currTokType.LONGER_ALT)\n            ? currTokType.LONGER_ALT\n            : [currTokType.LONGER_ALT]\n          forEach(longerAlt, (currLongerAlt) => {\n            if (\n              !isUndefined(currLongerAlt) &&\n              !includes(currModeValue, currLongerAlt)\n            ) {\n              errors.push({\n                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\n              })\n            }\n          })\n        }\n      })\n    })\n  }\n\n  return errors\n}\n\nexport function performWarningRuntimeChecks(\n  lexerDefinition: IMultiModeLexerDefinition,\n  trackLines: boolean,\n  lineTerminatorCharacters: (number | string)[]\n): ILexerDefinitionError[] {\n  const warnings = []\n  let hasAnyLineBreak = false\n  const allTokenTypes = compact(flatten(values(lexerDefinition.modes)))\n\n  const concreteTokenTypes = reject(\n    allTokenTypes,\n    (currType) => currType[PATTERN] === Lexer.NA\n  )\n  const terminatorCharCodes = getCharCodes(lineTerminatorCharacters)\n  if (trackLines) {\n    forEach(concreteTokenTypes, (tokType) => {\n      const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes)\n      if (currIssue !== false) {\n        const message = buildLineBreakIssueMessage(tokType, currIssue)\n        const warningDescriptor = {\n          message,\n          type: currIssue.issue,\n          tokenType: tokType\n        }\n        warnings.push(warningDescriptor)\n      } else {\n        // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n        if (has(tokType, \"LINE_BREAKS\")) {\n          if (tokType.LINE_BREAKS === true) {\n            hasAnyLineBreak = true\n          }\n        } else {\n          if (\n            canMatchCharCode(terminatorCharCodes, tokType.PATTERN as RegExp)\n          ) {\n            hasAnyLineBreak = true\n          }\n        }\n      }\n    })\n  }\n\n  if (trackLines && !hasAnyLineBreak) {\n    warnings.push({\n      message:\n        \"Warning: No LINE_BREAKS Found.\\n\" +\n        \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n        \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n        \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n        \"\\tfor details.\",\n      type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS\n    })\n  }\n  return warnings\n}\n\nexport function cloneEmptyGroups(emptyGroups: {\n  [groupName: string]: IToken\n}): { [groupName: string]: IToken } {\n  const clonedResult: any = {}\n  const groupKeys = keys(emptyGroups)\n\n  forEach(groupKeys, (currKey) => {\n    const currGroupValue = emptyGroups[currKey]\n\n    /* istanbul ignore else */\n    if (isArray(currGroupValue)) {\n      clonedResult[currKey] = []\n    } else {\n      throw Error(\"non exhaustive match\")\n    }\n  })\n\n  return clonedResult\n}\n\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType: TokenType): boolean {\n  const pattern = tokenType.PATTERN\n  /* istanbul ignore else */\n  if (isRegExp(pattern)) {\n    return false\n  } else if (isFunction(pattern)) {\n    // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n    return true\n  } else if (has(pattern, \"exec\")) {\n    // ICustomPattern\n    return true\n  } else if (isString(pattern)) {\n    return false\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nexport function isShortPattern(pattern: any): number | false {\n  if (isString(pattern) && pattern.length === 1) {\n    return pattern.charCodeAt(0)\n  } else {\n    return false\n  }\n}\n\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester: ILineTerminatorsTester = {\n  // implements /\\n|\\r\\n?/g.test\n  test: function (text) {\n    const len = text.length\n    for (let i = this.lastIndex; i < len; i++) {\n      const c = text.charCodeAt(i)\n      if (c === 10) {\n        this.lastIndex = i + 1\n        return true\n      } else if (c === 13) {\n        if (text.charCodeAt(i + 1) === 10) {\n          this.lastIndex = i + 2\n        } else {\n          this.lastIndex = i + 1\n        }\n        return true\n      }\n    }\n    return false\n  },\n\n  lastIndex: 0\n}\n\nfunction checkLineBreaksIssues(\n  tokType: TokenType,\n  lineTerminatorCharCodes: number[]\n):\n  | {\n      issue:\n        | LexerDefinitionErrorType.IDENTIFY_TERMINATOR\n        | LexerDefinitionErrorType.CUSTOM_LINE_BREAK\n      errMsg?: string\n    }\n  | false {\n  if (has(tokType, \"LINE_BREAKS\")) {\n    // if the user explicitly declared the line_breaks option we will respect their choice\n    // and assume it is correct.\n    return false\n  } else {\n    /* istanbul ignore else */\n    if (isRegExp(tokType.PATTERN)) {\n      try {\n        // TODO: why is the casting suddenly needed?\n        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN as RegExp)\n      } catch (e) {\n        /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n        return {\n          issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n          errMsg: (e as Error).message\n        }\n      }\n      return false\n    } else if (isString(tokType.PATTERN)) {\n      // string literal patterns can always be analyzed to detect line terminator usage\n      return false\n    } else if (isCustomPattern(tokType)) {\n      // custom token types\n      return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK }\n    } else {\n      throw Error(\"non exhaustive match\")\n    }\n  }\n}\n\nexport function buildLineBreakIssueMessage(\n  tokType: TokenType,\n  details: {\n    issue:\n      | LexerDefinitionErrorType.IDENTIFY_TERMINATOR\n      | LexerDefinitionErrorType.CUSTOM_LINE_BREAK\n    errMsg?: string\n  }\n): string {\n  /* istanbul ignore else */\n  if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n    return (\n      \"Warning: unable to identify line terminator usage in pattern.\\n\" +\n      `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n      `\\t Root cause: ${details.errMsg}.\\n` +\n      \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\"\n    )\n  } else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n    return (\n      \"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n      `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n      \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\"\n    )\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nfunction getCharCodes(charsOrCodes: (number | string)[]): number[] {\n  const charCodes = map(charsOrCodes, (numOrString) => {\n    if (isString(numOrString)) {\n      return numOrString.charCodeAt(0)\n    } else {\n      return numOrString\n    }\n  })\n\n  return charCodes\n}\n\nfunction addToMapOfArrays<T>(\n  map: Record<number, T[]>,\n  key: number,\n  value: T\n): void {\n  if (map[key] === undefined) {\n    map[key] = [value]\n  } else {\n    map[key].push(value)\n  }\n}\n\nexport const minOptimizationVal = 256\n\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap: number[] = []\nexport function charCodeToOptimizedIndex(charCode: number): number {\n  return charCode < minOptimizationVal\n    ? charCode\n    : charCodeToOptimizedIdxMap[charCode]\n}\n\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n  if (isEmpty(charCodeToOptimizedIdxMap)) {\n    charCodeToOptimizedIdxMap = new Array(65536)\n    for (let i = 0; i < 65536; i++) {\n      charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i\n    }\n  }\n}\n", "/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n", "import isEmpty from \"lodash/isEmpty\"\nimport compact from \"lodash/compact\"\nimport isArray from \"lodash/isArray\"\nimport flatten from \"lodash/flatten\"\nimport difference from \"lodash/difference\"\nimport map from \"lodash/map\"\nimport forEach from \"lodash/forEach\"\nimport has from \"lodash/has\"\nimport includes from \"lodash/includes\"\nimport clone from \"lodash/clone\"\nimport { IToken, TokenType } from \"@chevrotain/types\"\n\nexport function tokenStructuredMatcher(\n  tokInstance: IToken,\n  tokConstructor: TokenType\n) {\n  const instanceType = tokInstance.tokenTypeIdx\n  if (instanceType === tokConstructor.tokenTypeIdx) {\n    return true\n  } else {\n    return (\n      tokConstructor.isParent === true &&\n      tokConstructor.categoryMatchesMap![instanceType] === true\n    )\n  }\n}\n\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(\n  token: IToken,\n  tokType: TokenType\n) {\n  return token.tokenTypeIdx === tokType.tokenTypeIdx\n}\n\nexport let tokenShortNameIdx = 1\nexport const tokenIdxToClass: { [tokenIdx: number]: TokenType } = {}\n\nexport function augmentTokenTypes(tokenTypes: TokenType[]): void {\n  // collect the parent Token Types as well.\n  const tokenTypesAndParents = expandCategories(tokenTypes)\n\n  // add required tokenType and categoryMatches properties\n  assignTokenDefaultProps(tokenTypesAndParents)\n\n  // fill up the categoryMatches\n  assignCategoriesMapProp(tokenTypesAndParents)\n  assignCategoriesTokensProp(tokenTypesAndParents)\n\n  forEach(tokenTypesAndParents, (tokType) => {\n    tokType.isParent = tokType.categoryMatches!.length > 0\n  })\n}\n\nexport function expandCategories(tokenTypes: TokenType[]): TokenType[] {\n  let result = clone(tokenTypes)\n\n  let categories = tokenTypes\n  let searching = true\n  while (searching) {\n    categories = compact(\n      flatten(map(categories, (currTokType) => currTokType.CATEGORIES))\n    )\n\n    const newCategories = difference(categories, result)\n\n    result = result.concat(newCategories)\n\n    if (isEmpty(newCategories)) {\n      searching = false\n    } else {\n      categories = newCategories\n    }\n  }\n  return result\n}\n\nexport function assignTokenDefaultProps(tokenTypes: TokenType[]): void {\n  forEach(tokenTypes, (currTokType) => {\n    if (!hasShortKeyProperty(currTokType)) {\n      tokenIdxToClass[tokenShortNameIdx] = currTokType\n      ;(<any>currTokType).tokenTypeIdx = tokenShortNameIdx++\n    }\n\n    // CATEGORIES? : TokenType | TokenType[]\n    if (\n      hasCategoriesProperty(currTokType) &&\n      !isArray(currTokType.CATEGORIES)\n      // &&\n      // !isUndefined(currTokType.CATEGORIES.PATTERN)\n    ) {\n      currTokType.CATEGORIES = [currTokType.CATEGORIES as unknown as TokenType]\n    }\n\n    if (!hasCategoriesProperty(currTokType)) {\n      currTokType.CATEGORIES = []\n    }\n\n    if (!hasExtendingTokensTypesProperty(currTokType)) {\n      currTokType.categoryMatches = []\n    }\n\n    if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n      currTokType.categoryMatchesMap = {}\n    }\n  })\n}\n\nexport function assignCategoriesTokensProp(tokenTypes: TokenType[]): void {\n  forEach(tokenTypes, (currTokType) => {\n    // avoid duplications\n    currTokType.categoryMatches = []\n    forEach(currTokType.categoryMatchesMap!, (val, key) => {\n      currTokType.categoryMatches!.push(\n        tokenIdxToClass[key as unknown as number].tokenTypeIdx!\n      )\n    })\n  })\n}\n\nexport function assignCategoriesMapProp(tokenTypes: TokenType[]): void {\n  forEach(tokenTypes, (currTokType) => {\n    singleAssignCategoriesToksMap([], currTokType)\n  })\n}\n\nexport function singleAssignCategoriesToksMap(\n  path: TokenType[],\n  nextNode: TokenType\n): void {\n  forEach(path, (pathNode) => {\n    nextNode.categoryMatchesMap![pathNode.tokenTypeIdx!] = true\n  })\n\n  forEach(nextNode.CATEGORIES, (nextCategory) => {\n    const newPath = path.concat(nextNode)\n    // avoids infinite loops due to cyclic categories.\n    if (!includes(newPath, nextCategory)) {\n      singleAssignCategoriesToksMap(newPath, nextCategory)\n    }\n  })\n}\n\nexport function hasShortKeyProperty(tokType: TokenType): boolean {\n  return has(tokType, \"tokenTypeIdx\")\n}\n\nexport function hasCategoriesProperty(tokType: TokenType): boolean {\n  return has(tokType, \"CATEGORIES\")\n}\n\nexport function hasExtendingTokensTypesProperty(tokType: TokenType): boolean {\n  return has(tokType, \"categoryMatches\")\n}\n\nexport function hasExtendingTokensTypesMapProperty(\n  tokType: TokenType\n): boolean {\n  return has(tokType, \"categoryMatchesMap\")\n}\n\nexport function isTokenType(tokType: TokenType): boolean {\n  return has(tokType, \"tokenTypeIdx\")\n}\n", "import { ILexerErrorMessageProvider, IToken } from \"@chevrotain/types\"\n\nexport const defaultLexerErrorProvider: ILexerErrorMessageProvider = {\n  buildUnableToPopLexerModeMessage(token: IToken): string {\n    return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`\n  },\n\n  buildUnexpectedCharactersMessage(\n    fullText: string,\n    startOffset: number,\n    length: number,\n    line?: number,\n    column?: number\n  ): string {\n    return (\n      `unexpected character: ->${fullText.charAt(\n        startOffset\n      )}<- at offset: ${startOffset},` + ` skipped ${length} characters.`\n    )\n  }\n}\n", "import {\n  analyzeTokenTypes,\n  charCodeToOptimizedIndex,\n  cloneEmptyGroups,\n  DEFAULT_MODE,\n  IAnalyzeResult,\n  IPatternConfig,\n  LineTerminatorOptimizedTester,\n  performRuntimeChecks,\n  performWarningRuntimeChecks,\n  SUPPORT_STICKY,\n  validatePatterns\n} from \"./lexer\"\nimport noop from \"lodash/noop\"\nimport isEmpty from \"lodash/isEmpty\"\nimport isArray from \"lodash/isArray\"\nimport last from \"lodash/last\"\nimport reject from \"lodash/reject\"\nimport map from \"lodash/map\"\nimport forEach from \"lodash/forEach\"\nimport keys from \"lodash/keys\"\nimport isUndefined from \"lodash/isUndefined\"\nimport identity from \"lodash/identity\"\nimport assign from \"lodash/assign\"\nimport reduce from \"lodash/reduce\"\nimport clone from \"lodash/clone\"\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\"\nimport { augmentTokenTypes } from \"./tokens\"\nimport {\n  CustomPatternMatcherFunc,\n  CustomPatternMatcherReturn,\n  ILexerConfig,\n  ILexerDefinitionError,\n  ILexingError,\n  IMultiModeLexerDefinition,\n  IToken,\n  TokenType\n} from \"@chevrotain/types\"\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public\"\nimport { clearRegExpParserCache } from \"./reg_exp_parser\"\n\nexport interface ILexingResult {\n  tokens: IToken[]\n  groups: { [groupName: string]: IToken[] }\n  errors: ILexingError[]\n}\n\nexport enum LexerDefinitionErrorType {\n  MISSING_PATTERN,\n  INVALID_PATTERN,\n  EOI_ANCHOR_FOUND,\n  UNSUPPORTED_FLAGS_FOUND,\n  DUPLICATE_PATTERNS_FOUND,\n  INVALID_GROUP_TYPE_FOUND,\n  PUSH_MODE_DOES_NOT_EXIST,\n  MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n  MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n  MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n  LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n  SOI_ANCHOR_FOUND,\n  EMPTY_MATCH_PATTERN,\n  NO_LINE_BREAKS_FLAGS,\n  UNREACHABLE_PATTERN,\n  IDENTIFY_TERMINATOR,\n  CUSTOM_LINE_BREAK,\n  MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\n}\n\nexport interface IRegExpExec {\n  exec: CustomPatternMatcherFunc\n}\n\nconst DEFAULT_LEXER_CONFIG: Required<ILexerConfig> = {\n  deferDefinitionErrorsHandling: false,\n  positionTracking: \"full\",\n  lineTerminatorsPattern: /\\n|\\r\\n?/g,\n  lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n  ensureOptimizations: false,\n  safeMode: false,\n  errorMessageProvider: defaultLexerErrorProvider,\n  traceInitPerf: false,\n  skipValidations: false,\n  recoveryEnabled: true\n}\n\nObject.freeze(DEFAULT_LEXER_CONFIG)\n\nexport class Lexer {\n  public static SKIPPED =\n    \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\"\n\n  public static NA = /NOT_APPLICABLE/\n  public lexerDefinitionErrors: ILexerDefinitionError[] = []\n  public lexerDefinitionWarning: ILexerDefinitionError[] = []\n\n  protected patternIdxToConfig: Record<string, IPatternConfig[]> = {}\n  protected charCodeToPatternIdxToConfig: {\n    [modeName: string]: { [charCode: number]: IPatternConfig[] }\n  } = {}\n\n  protected modes: string[] = []\n  protected defaultMode!: string\n  protected emptyGroups: { [groupName: string]: IToken } = {}\n\n  private config: Required<ILexerConfig>\n  private trackStartLines: boolean = true\n  private trackEndLines: boolean = true\n  private hasCustom: boolean = false\n  private canModeBeOptimized: Record<string, boolean> = {}\n\n  private traceInitPerf!: boolean | number\n  private traceInitMaxIdent!: number\n  private traceInitIndent: number\n\n  constructor(\n    protected lexerDefinition: TokenType[] | IMultiModeLexerDefinition,\n    config: ILexerConfig = DEFAULT_LEXER_CONFIG\n  ) {\n    if (typeof config === \"boolean\") {\n      throw Error(\n        \"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n          \"a boolean 2nd argument is no longer supported\"\n      )\n    }\n\n    // todo: defaults func?\n    this.config = assign({}, DEFAULT_LEXER_CONFIG, config) as any\n\n    const traceInitVal = this.config.traceInitPerf\n    if (traceInitVal === true) {\n      this.traceInitMaxIdent = Infinity\n      this.traceInitPerf = true\n    } else if (typeof traceInitVal === \"number\") {\n      this.traceInitMaxIdent = traceInitVal\n      this.traceInitPerf = true\n    }\n    this.traceInitIndent = -1\n\n    this.TRACE_INIT(\"Lexer Constructor\", () => {\n      let actualDefinition!: IMultiModeLexerDefinition\n      let hasOnlySingleMode = true\n      this.TRACE_INIT(\"Lexer Config handling\", () => {\n        if (\n          this.config.lineTerminatorsPattern ===\n          DEFAULT_LEXER_CONFIG.lineTerminatorsPattern\n        ) {\n          // optimized built-in implementation for the defaults definition of lineTerminators\n          this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester\n        } else {\n          if (\n            this.config.lineTerminatorCharacters ===\n            DEFAULT_LEXER_CONFIG.lineTerminatorCharacters\n          ) {\n            throw Error(\n              \"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\"\n            )\n          }\n        }\n\n        if (config.safeMode && config.ensureOptimizations) {\n          throw Error(\n            '\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.'\n          )\n        }\n\n        this.trackStartLines = /full|onlyStart/i.test(\n          this.config.positionTracking\n        )\n        this.trackEndLines = /full/i.test(this.config.positionTracking)\n\n        // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n        if (isArray(lexerDefinition)) {\n          actualDefinition = {\n            modes: { defaultMode: clone(lexerDefinition) },\n            defaultMode: DEFAULT_MODE\n          }\n        } else {\n          // no conversion needed, input should already be a IMultiModeLexerDefinition\n          hasOnlySingleMode = false\n          actualDefinition = clone(<IMultiModeLexerDefinition>lexerDefinition)\n        }\n      })\n\n      if (this.config.skipValidations === false) {\n        this.TRACE_INIT(\"performRuntimeChecks\", () => {\n          this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(\n            performRuntimeChecks(\n              actualDefinition,\n              this.trackStartLines,\n              this.config.lineTerminatorCharacters\n            )\n          )\n        })\n\n        this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n          this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(\n            performWarningRuntimeChecks(\n              actualDefinition,\n              this.trackStartLines,\n              this.config.lineTerminatorCharacters\n            )\n          )\n        })\n      }\n\n      // for extra robustness to avoid throwing an none informative error message\n      actualDefinition.modes = actualDefinition.modes\n        ? actualDefinition.modes\n        : {}\n\n      // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n      // this transformation is to increase robustness in the case of partially invalid lexer definition.\n      forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n        actualDefinition.modes[currModeName] = reject<TokenType>(\n          currModeValue,\n          (currTokType) => isUndefined(currTokType)\n        )\n      })\n\n      const allModeNames = keys(actualDefinition.modes)\n\n      forEach(\n        actualDefinition.modes,\n        (currModDef: TokenType[], currModName) => {\n          this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n            this.modes.push(currModName)\n\n            if (this.config.skipValidations === false) {\n              this.TRACE_INIT(`validatePatterns`, () => {\n                this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(\n                  validatePatterns(currModDef, allModeNames)\n                )\n              })\n            }\n\n            // If definition errors were encountered, the analysis phase may fail unexpectedly/\n            // Considering a lexer with definition errors may never be used, there is no point\n            // to performing the analysis anyhow...\n            if (isEmpty(this.lexerDefinitionErrors)) {\n              augmentTokenTypes(currModDef)\n\n              let currAnalyzeResult!: IAnalyzeResult\n              this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                  lineTerminatorCharacters:\n                    this.config.lineTerminatorCharacters,\n                  positionTracking: config.positionTracking,\n                  ensureOptimizations: config.ensureOptimizations,\n                  safeMode: config.safeMode,\n                  tracer: this.TRACE_INIT\n                })\n              })\n\n              this.patternIdxToConfig[currModName] =\n                currAnalyzeResult.patternIdxToConfig\n\n              this.charCodeToPatternIdxToConfig[currModName] =\n                currAnalyzeResult.charCodeToPatternIdxToConfig\n\n              this.emptyGroups = assign(\n                {},\n                this.emptyGroups,\n                currAnalyzeResult.emptyGroups\n              ) as any\n\n              this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom\n\n              this.canModeBeOptimized[currModName] =\n                currAnalyzeResult.canBeOptimized\n            }\n          })\n        }\n      )\n\n      this.defaultMode = actualDefinition.defaultMode\n\n      if (\n        !isEmpty(this.lexerDefinitionErrors) &&\n        !this.config.deferDefinitionErrorsHandling\n      ) {\n        const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n          return error.message\n        })\n        const allErrMessagesString = allErrMessages.join(\n          \"-----------------------\\n\"\n        )\n        throw new Error(\n          \"Errors detected in definition of Lexer:\\n\" + allErrMessagesString\n        )\n      }\n\n      // Only print warning if there are no errors, This will avoid pl\n      forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n        PRINT_WARNING(warningDescriptor.message)\n      })\n\n      this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n        // Choose the relevant internal implementations for this specific parser.\n        // These implementations should be in-lined by the JavaScript engine\n        // to provide optimal performance in each scenario.\n        if (SUPPORT_STICKY) {\n          this.chopInput = <any>identity\n          this.match = this.matchWithTest\n        } else {\n          this.updateLastIndex = noop\n          this.match = this.matchWithExec\n        }\n\n        if (hasOnlySingleMode) {\n          this.handleModes = noop\n        }\n\n        if (this.trackStartLines === false) {\n          this.computeNewColumn = identity\n        }\n\n        if (this.trackEndLines === false) {\n          this.updateTokenEndLineColumnLocation = noop\n        }\n\n        if (/full/i.test(this.config.positionTracking)) {\n          this.createTokenInstance = this.createFullToken\n        } else if (/onlyStart/i.test(this.config.positionTracking)) {\n          this.createTokenInstance = this.createStartOnlyToken\n        } else if (/onlyOffset/i.test(this.config.positionTracking)) {\n          this.createTokenInstance = this.createOffsetOnlyToken\n        } else {\n          throw Error(\n            `Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`\n          )\n        }\n\n        if (this.hasCustom) {\n          this.addToken = this.addTokenUsingPush\n          this.handlePayload = this.handlePayloadWithCustom\n        } else {\n          this.addToken = this.addTokenUsingMemberAccess\n          this.handlePayload = this.handlePayloadNoCustom\n        }\n      })\n\n      this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n        const unOptimizedModes = reduce(\n          this.canModeBeOptimized,\n          (cannotBeOptimized, canBeOptimized, modeName) => {\n            if (canBeOptimized === false) {\n              cannotBeOptimized.push(modeName)\n            }\n            return cannotBeOptimized\n          },\n          [] as string[]\n        )\n\n        if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n          throw Error(\n            `Lexer Modes: < ${unOptimizedModes.join(\n              \", \"\n            )} > cannot be optimized.\\n` +\n              '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n              \"\\t Or inspect the console log for details on how to resolve these issues.\"\n          )\n        }\n      })\n\n      this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n        clearRegExpParserCache()\n      })\n\n      this.TRACE_INIT(\"toFastProperties\", () => {\n        toFastProperties(this)\n      })\n    })\n  }\n\n  public tokenize(\n    text: string,\n    initialMode: string = this.defaultMode\n  ): ILexingResult {\n    if (!isEmpty(this.lexerDefinitionErrors)) {\n      const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n        return error.message\n      })\n      const allErrMessagesString = allErrMessages.join(\n        \"-----------------------\\n\"\n      )\n      throw new Error(\n        \"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n          allErrMessagesString\n      )\n    }\n\n    return this.tokenizeInternal(text, initialMode)\n  }\n\n  // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n  // This is intentional due to performance considerations.\n  // this method also used quite a bit of `!` none null assertions because it is too optimized\n  // for `tsc` to always understand it is \"safe\"\n  private tokenizeInternal(text: string, initialMode: string): ILexingResult {\n    let i,\n      j,\n      k,\n      matchAltImage,\n      longerAlt,\n      matchedImage: string | null,\n      payload,\n      altPayload,\n      imageLength,\n      group,\n      tokType,\n      newToken: IToken,\n      errLength,\n      droppedChar,\n      msg,\n      match\n    const orgText = text\n    const orgLength = orgText.length\n    let offset = 0\n    let matchedTokensIndex = 0\n    // initializing the tokensArray to the \"guessed\" size.\n    // guessing too little will still reduce the number of array re-sizes on pushes.\n    // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n    // but would still have a faster runtime by avoiding (All but one) array resizing.\n    const guessedNumberOfTokens = this.hasCustom\n      ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n      : Math.floor(text.length / 10)\n    const matchedTokens = new Array(guessedNumberOfTokens)\n    const errors: ILexingError[] = []\n    let line = this.trackStartLines ? 1 : undefined\n    let column = this.trackStartLines ? 1 : undefined\n    const groups: any = cloneEmptyGroups(this.emptyGroups)\n    const trackLines = this.trackStartLines\n    const lineTerminatorPattern = this.config.lineTerminatorsPattern\n\n    let currModePatternsLength = 0\n    let patternIdxToConfig: IPatternConfig[] = []\n    let currCharCodeToPatternIdxToConfig: {\n      [charCode: number]: IPatternConfig[]\n    } = []\n\n    const modeStack: string[] = []\n\n    const emptyArray: IPatternConfig[] = []\n    Object.freeze(emptyArray)\n    let getPossiblePatterns!: (charCode: number) => IPatternConfig[]\n\n    function getPossiblePatternsSlow() {\n      return patternIdxToConfig\n    }\n\n    function getPossiblePatternsOptimized(charCode: number): IPatternConfig[] {\n      const optimizedCharIdx = charCodeToOptimizedIndex(charCode)\n      const possiblePatterns =\n        currCharCodeToPatternIdxToConfig[optimizedCharIdx]\n      if (possiblePatterns === undefined) {\n        return emptyArray\n      } else {\n        return possiblePatterns\n      }\n    }\n\n    const pop_mode = (popToken: IToken) => {\n      // TODO: perhaps avoid this error in the edge case there is no more input?\n      if (\n        modeStack.length === 1 &&\n        // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n        // So no error should occur.\n        popToken.tokenType.PUSH_MODE === undefined\n      ) {\n        // if we try to pop the last mode there lexer will no longer have ANY mode.\n        // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n        const msg =\n          this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(\n            popToken\n          )\n\n        errors.push({\n          offset: popToken.startOffset,\n          line: popToken.startLine,\n          column: popToken.startColumn,\n          length: popToken.image.length,\n          message: msg\n        })\n      } else {\n        modeStack.pop()\n        const newMode = last(modeStack)!\n        patternIdxToConfig = this.patternIdxToConfig[newMode]\n        currCharCodeToPatternIdxToConfig =\n          this.charCodeToPatternIdxToConfig[newMode]\n        currModePatternsLength = patternIdxToConfig.length\n        const modeCanBeOptimized =\n          this.canModeBeOptimized[newMode] && this.config.safeMode === false\n\n        if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n          getPossiblePatterns = getPossiblePatternsOptimized\n        } else {\n          getPossiblePatterns = getPossiblePatternsSlow\n        }\n      }\n    }\n\n    function push_mode(this: Lexer, newMode: string) {\n      modeStack.push(newMode)\n      currCharCodeToPatternIdxToConfig =\n        this.charCodeToPatternIdxToConfig[newMode]\n\n      patternIdxToConfig = this.patternIdxToConfig[newMode]\n      currModePatternsLength = patternIdxToConfig.length\n\n      currModePatternsLength = patternIdxToConfig.length\n      const modeCanBeOptimized =\n        this.canModeBeOptimized[newMode] && this.config.safeMode === false\n\n      if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n        getPossiblePatterns = getPossiblePatternsOptimized\n      } else {\n        getPossiblePatterns = getPossiblePatternsSlow\n      }\n    }\n\n    // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n    // seem to matter performance wise.\n    push_mode.call(this, initialMode)\n\n    let currConfig!: IPatternConfig\n\n    const recoveryEnabled = this.config.recoveryEnabled\n\n    while (offset < orgLength) {\n      matchedImage = null\n\n      const nextCharCode = orgText.charCodeAt(offset)\n      const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode)\n      const chosenPatternsLength = chosenPatternIdxToConfig.length\n\n      for (i = 0; i < chosenPatternsLength; i++) {\n        currConfig = chosenPatternIdxToConfig[i]\n        const currPattern = currConfig.pattern\n        payload = null\n\n        // manually in-lined because > 600 chars won't be in-lined in V8\n        const singleCharCode = currConfig.short\n        if (singleCharCode !== false) {\n          if (nextCharCode === singleCharCode) {\n            // single character string\n            matchedImage = currPattern as string\n          }\n        } else if (currConfig.isCustom === true) {\n          match = (currPattern as IRegExpExec).exec(\n            orgText,\n            offset,\n            matchedTokens,\n            groups\n          )\n          if (match !== null) {\n            matchedImage = match[0]\n            if ((match as CustomPatternMatcherReturn).payload !== undefined) {\n              payload = (match as CustomPatternMatcherReturn).payload\n            }\n          } else {\n            matchedImage = null\n          }\n        } else {\n          this.updateLastIndex(currPattern as RegExp, offset)\n          matchedImage = this.match(currPattern as RegExp, text, offset)\n        }\n\n        if (matchedImage !== null) {\n          // even though this pattern matched we must try a another longer alternative.\n          // this can be used to prioritize keywords over identifiers\n          longerAlt = currConfig.longerAlt\n          if (longerAlt !== undefined) {\n            // TODO: micro optimize, avoid extra prop access\n            // by saving/linking longerAlt on the original config?\n            const longerAltLength = longerAlt.length\n            for (k = 0; k < longerAltLength; k++) {\n              const longerAltConfig = patternIdxToConfig[longerAlt[k]]\n              const longerAltPattern = longerAltConfig.pattern\n              altPayload = null\n\n              // single Char can never be a longer alt so no need to test it.\n              // manually in-lined because > 600 chars won't be in-lined in V8\n              if (longerAltConfig.isCustom === true) {\n                match = (longerAltPattern as IRegExpExec).exec(\n                  orgText,\n                  offset,\n                  matchedTokens,\n                  groups\n                )\n                if (match !== null) {\n                  matchAltImage = match[0]\n                  if (\n                    (match as CustomPatternMatcherReturn).payload !== undefined\n                  ) {\n                    altPayload = (match as CustomPatternMatcherReturn).payload\n                  }\n                } else {\n                  matchAltImage = null\n                }\n              } else {\n                this.updateLastIndex(longerAltPattern as RegExp, offset)\n                matchAltImage = this.match(\n                  longerAltPattern as RegExp,\n                  text,\n                  offset\n                )\n              }\n\n              if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                matchedImage = matchAltImage\n                payload = altPayload\n                currConfig = longerAltConfig\n                // Exit the loop early after matching one of the longer alternatives\n                // The first matched alternative takes precedence\n                break\n              }\n            }\n          }\n          break\n        }\n      }\n\n      // successful match\n      if (matchedImage !== null) {\n        imageLength = matchedImage.length\n        group = currConfig.group\n        if (group !== undefined) {\n          tokType = currConfig.tokenTypeIdx\n          // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n          // createFullToken method\n          newToken = this.createTokenInstance(\n            matchedImage,\n            offset,\n            tokType,\n            currConfig.tokenType,\n            line,\n            column,\n            imageLength\n          )\n\n          this.handlePayload(newToken, payload)\n\n          // TODO: optimize NOOP in case there are no special groups?\n          if (group === false) {\n            matchedTokensIndex = this.addToken(\n              matchedTokens,\n              matchedTokensIndex,\n              newToken\n            )\n          } else {\n            groups[group].push(newToken)\n          }\n        }\n        text = this.chopInput(text, imageLength)\n        offset = offset + imageLength\n\n        // TODO: with newlines the column may be assigned twice\n        column = this.computeNewColumn(column!, imageLength)\n\n        if (trackLines === true && currConfig.canLineTerminator === true) {\n          let numOfLTsInMatch = 0\n          let foundTerminator\n          let lastLTEndOffset: number\n          lineTerminatorPattern.lastIndex = 0\n          do {\n            foundTerminator = lineTerminatorPattern.test(matchedImage)\n            if (foundTerminator === true) {\n              lastLTEndOffset = lineTerminatorPattern.lastIndex - 1\n              numOfLTsInMatch++\n            }\n          } while (foundTerminator === true)\n\n          if (numOfLTsInMatch !== 0) {\n            line = line! + numOfLTsInMatch\n            column = imageLength - lastLTEndOffset!\n            this.updateTokenEndLineColumnLocation(\n              newToken!,\n              group!,\n              lastLTEndOffset!,\n              numOfLTsInMatch,\n              line,\n              column,\n              imageLength\n            )\n          }\n        }\n        // will be NOOP if no modes present\n        this.handleModes(currConfig, pop_mode, push_mode, newToken!)\n      } else {\n        // error recovery, drop characters until we identify a valid token's start point\n        const errorStartOffset = offset\n        const errorLine = line\n        const errorColumn = column\n        let foundResyncPoint = recoveryEnabled === false\n\n        while (foundResyncPoint === false && offset < orgLength) {\n          // Identity Func (when sticky flag is enabled)\n          text = this.chopInput(text, 1)\n          offset++\n          for (j = 0; j < currModePatternsLength; j++) {\n            const currConfig = patternIdxToConfig[j]\n            const currPattern = currConfig.pattern\n\n            // manually in-lined because > 600 chars won't be in-lined in V8\n            const singleCharCode = currConfig.short\n            if (singleCharCode !== false) {\n              if (orgText.charCodeAt(offset) === singleCharCode) {\n                // single character string\n                foundResyncPoint = true\n              }\n            } else if (currConfig.isCustom === true) {\n              foundResyncPoint =\n                (currPattern as IRegExpExec).exec(\n                  orgText,\n                  offset,\n                  matchedTokens,\n                  groups\n                ) !== null\n            } else {\n              this.updateLastIndex(currPattern as RegExp, offset)\n              foundResyncPoint = (currPattern as RegExp).exec(text) !== null\n            }\n\n            if (foundResyncPoint === true) {\n              break\n            }\n          }\n        }\n\n        errLength = offset - errorStartOffset\n        // at this point we either re-synced or reached the end of the input text\n        msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(\n          orgText,\n          errorStartOffset,\n          errLength,\n          errorLine,\n          errorColumn\n        )\n        errors.push({\n          offset: errorStartOffset,\n          line: errorLine,\n          column: errorColumn,\n          length: errLength,\n          message: msg\n        })\n\n        if (recoveryEnabled === false) {\n          break\n        }\n      }\n    }\n\n    // if we do have custom patterns which push directly into the\n    // TODO: custom tokens should not push directly??\n    if (!this.hasCustom) {\n      // if we guessed a too large size for the tokens array this will shrink it to the right size.\n      matchedTokens.length = matchedTokensIndex\n    }\n\n    return {\n      tokens: matchedTokens,\n      groups: groups,\n      errors: errors\n    }\n  }\n\n  private handleModes(\n    config: IPatternConfig,\n    pop_mode: (tok: IToken) => void,\n    push_mode: (this: Lexer, pushMode: string) => void,\n    newToken: IToken\n  ) {\n    if (config.pop === true) {\n      // need to save the PUSH_MODE property as if the mode is popped\n      // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n      const pushMode = config.push\n      pop_mode(newToken)\n      if (pushMode !== undefined) {\n        push_mode.call(this, pushMode)\n      }\n    } else if (config.push !== undefined) {\n      push_mode.call(this, config.push)\n    }\n  }\n\n  private chopInput(text: string, length: number): string {\n    return text.substring(length)\n  }\n\n  private updateLastIndex(regExp: RegExp, newLastIndex: number): void {\n    regExp.lastIndex = newLastIndex\n  }\n\n  // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n  private updateTokenEndLineColumnLocation(\n    newToken: IToken,\n    group: string | false,\n    lastLTIdx: number,\n    numOfLTsInMatch: number,\n    line: number,\n    column: number,\n    imageLength: number\n  ): void {\n    let lastCharIsLT, fixForEndingInLT\n    if (group !== undefined) {\n      // a none skipped multi line Token, need to update endLine/endColumn\n      lastCharIsLT = lastLTIdx === imageLength - 1\n      fixForEndingInLT = lastCharIsLT ? -1 : 0\n      if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n        // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n        newToken.endLine = line + fixForEndingInLT\n        // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n        // inclusive to exclusive range.\n        newToken.endColumn = column - 1 + -fixForEndingInLT\n      }\n      // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n    }\n  }\n\n  private computeNewColumn(oldColumn: number, imageLength: number) {\n    return oldColumn + imageLength\n  }\n\n  // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n  /* istanbul ignore next - place holder */\n  private createTokenInstance!: (...args: any[]) => IToken\n\n  private createOffsetOnlyToken(\n    image: string,\n    startOffset: number,\n    tokenTypeIdx: number,\n    tokenType: TokenType\n  ) {\n    return {\n      image,\n      startOffset,\n      tokenTypeIdx,\n      tokenType\n    }\n  }\n\n  private createStartOnlyToken(\n    image: string,\n    startOffset: number,\n    tokenTypeIdx: number,\n    tokenType: TokenType,\n    startLine: number,\n    startColumn: number\n  ) {\n    return {\n      image,\n      startOffset,\n      startLine,\n      startColumn,\n      tokenTypeIdx,\n      tokenType\n    }\n  }\n\n  private createFullToken(\n    image: string,\n    startOffset: number,\n    tokenTypeIdx: number,\n    tokenType: TokenType,\n    startLine: number,\n    startColumn: number,\n    imageLength: number\n  ): IToken {\n    return {\n      image,\n      startOffset,\n      endOffset: startOffset + imageLength - 1,\n      startLine,\n      endLine: startLine,\n      startColumn,\n      endColumn: startColumn + imageLength - 1,\n      tokenTypeIdx,\n      tokenType\n    }\n  }\n\n  // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n  /* istanbul ignore next - place holder */\n  private addToken!: (\n    tokenVector: IToken[],\n    index: number,\n    tokenToAdd: IToken\n  ) => number\n\n  private addTokenUsingPush(\n    tokenVector: IToken[],\n    index: number,\n    tokenToAdd: IToken\n  ): number {\n    tokenVector.push(tokenToAdd)\n    return index\n  }\n\n  private addTokenUsingMemberAccess(\n    tokenVector: IToken[],\n    index: number,\n    tokenToAdd: IToken\n  ): number {\n    tokenVector[index] = tokenToAdd\n    index++\n    return index\n  }\n\n  // Place holder, will be replaced by the correct variant according to the hasCustom flag option at runtime.\n  private handlePayload: (token: IToken, payload: any) => void\n\n  private handlePayloadNoCustom(token: IToken, payload: any): void {}\n\n  private handlePayloadWithCustom(token: IToken, payload: any): void {\n    if (payload !== null) {\n      token.payload = payload\n    }\n  }\n\n  // place holder to be replaced with chosen alternative at runtime\n  private match!: (\n    pattern: RegExp,\n    text: string,\n    offset: number\n  ) => string | null\n\n  private matchWithTest(\n    pattern: RegExp,\n    text: string,\n    offset: number\n  ): string | null {\n    const found = pattern.test(text)\n    if (found === true) {\n      return text.substring(offset, pattern.lastIndex)\n    }\n    return null\n  }\n\n  private matchWithExec(pattern: RegExp, text: string): string | null {\n    const regExpArray = pattern.exec(text)\n    return regExpArray !== null ? regExpArray[0] : null\n  }\n\n  // Duplicated from the parser's perf trace trait to allow future extraction\n  // of the lexer to a separate package.\n  TRACE_INIT = <T>(phaseDesc: string, phaseImpl: () => T): T => {\n    // No need to optimize this using NOOP pattern because\n    // It is not called in a hot spot...\n    if (this.traceInitPerf === true) {\n      this.traceInitIndent++\n      const indent = new Array(this.traceInitIndent + 1).join(\"\\t\")\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        console.log(`${indent}--> <${phaseDesc}>`)\n      }\n      const { time, value } = timer(phaseImpl)\n      /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n      const traceMethod = time > 10 ? console.warn : console.log\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`)\n      }\n      this.traceInitIndent--\n      return value\n    } else {\n      return phaseImpl()\n    }\n  }\n}\n", "import isString from \"lodash/isString\"\nimport has from \"lodash/has\"\nimport isUndefined from \"lodash/isUndefined\"\nimport { Lexer } from \"./lexer_public\"\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens\"\nimport { IToken, ITokenConfig, TokenType } from \"@chevrotain/types\"\n\nexport function tokenLabel(tokType: TokenType): string {\n  if (hasTokenLabel(tokType)) {\n    return tokType.LABEL\n  } else {\n    return tokType.name\n  }\n}\n\nexport function tokenName(tokType: TokenType): string {\n  return tokType.name\n}\n\nexport function hasTokenLabel(\n  obj: TokenType\n): obj is TokenType & Pick<Required<TokenType>, \"LABEL\"> {\n  return isString(obj.LABEL) && obj.LABEL !== \"\"\n}\n\nconst PARENT = \"parent\"\nconst CATEGORIES = \"categories\"\nconst LABEL = \"label\"\nconst GROUP = \"group\"\nconst PUSH_MODE = \"push_mode\"\nconst POP_MODE = \"pop_mode\"\nconst LONGER_ALT = \"longer_alt\"\nconst LINE_BREAKS = \"line_breaks\"\nconst START_CHARS_HINT = \"start_chars_hint\"\n\nexport function createToken(config: ITokenConfig): TokenType {\n  return createTokenInternal(config)\n}\n\nfunction createTokenInternal(config: ITokenConfig): TokenType {\n  const pattern = config.pattern\n\n  const tokenType: TokenType = <any>{}\n  tokenType.name = config.name\n\n  if (!isUndefined(pattern)) {\n    tokenType.PATTERN = pattern\n  }\n\n  if (has(config, PARENT)) {\n    throw (\n      \"The parent property is no longer supported.\\n\" +\n      \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\"\n    )\n  }\n\n  if (has(config, CATEGORIES)) {\n    // casting to ANY as this will be fixed inside `augmentTokenTypes``\n    tokenType.CATEGORIES = <any>config[CATEGORIES]\n  }\n\n  augmentTokenTypes([tokenType])\n\n  if (has(config, LABEL)) {\n    tokenType.LABEL = config[LABEL]\n  }\n\n  if (has(config, GROUP)) {\n    tokenType.GROUP = config[GROUP]\n  }\n\n  if (has(config, POP_MODE)) {\n    tokenType.POP_MODE = config[POP_MODE]\n  }\n\n  if (has(config, PUSH_MODE)) {\n    tokenType.PUSH_MODE = config[PUSH_MODE]\n  }\n\n  if (has(config, LONGER_ALT)) {\n    tokenType.LONGER_ALT = config[LONGER_ALT]\n  }\n\n  if (has(config, LINE_BREAKS)) {\n    tokenType.LINE_BREAKS = config[LINE_BREAKS]\n  }\n\n  if (has(config, START_CHARS_HINT)) {\n    tokenType.START_CHARS_HINT = config[START_CHARS_HINT]\n  }\n\n  return tokenType\n}\n\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA })\naugmentTokenTypes([EOF])\n\nexport function createTokenInstance(\n  tokType: TokenType,\n  image: string,\n  startOffset: number,\n  endOffset: number,\n  startLine: number,\n  endLine: number,\n  startColumn: number,\n  endColumn: number\n): IToken {\n  return {\n    image,\n    startOffset,\n    endOffset,\n    startLine,\n    endLine,\n    startColumn,\n    endColumn,\n    tokenTypeIdx: (<any>tokType).tokenTypeIdx,\n    tokenType: tokType\n  }\n}\n\nexport function tokenMatcher(token: IToken, tokType: TokenType): boolean {\n  return tokenStructuredMatcher(token, tokType)\n}\n", "import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public\"\nimport first from \"lodash/first\"\nimport map from \"lodash/map\"\nimport reduce from \"lodash/reduce\"\nimport { Alternation, NonTerminal, Rule, Terminal } from \"@chevrotain/gast\"\nimport { getProductionDslName } from \"@chevrotain/gast\"\nimport {\n  IParserErrorMessageProvider,\n  IProductionWithOccurrence,\n  TokenType\n} from \"@chevrotain/types\"\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IGrammarValidatorErrorMessageProvider\n} from \"./grammar/types\"\n\nexport const defaultParserErrorProvider: IParserErrorMessageProvider = {\n  buildMismatchTokenMessage({ expected, actual, previous, ruleName }): string {\n    const hasLabel = hasTokenLabel(expected)\n    const expectedMsg = hasLabel\n      ? `--> ${tokenLabel(expected)} <--`\n      : `token of type --> ${expected.name} <--`\n\n    const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`\n\n    return msg\n  },\n\n  buildNotAllInputParsedMessage({ firstRedundant, ruleName }): string {\n    return \"Redundant input, expecting EOF but found: \" + firstRedundant.image\n  },\n\n  buildNoViableAltMessage({\n    expectedPathsPerAlt,\n    actual,\n    previous,\n    customUserDescription,\n    ruleName\n  }): string {\n    const errPrefix = \"Expecting: \"\n    // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n    const actualText = first(actual)!.image\n    const errSuffix = \"\\nbut found: '\" + actualText + \"'\"\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix\n    } else {\n      const allLookAheadPaths = reduce(\n        expectedPathsPerAlt,\n        (result, currAltPaths) => result.concat(currAltPaths),\n        [] as TokenType[][]\n      )\n      const nextValidTokenSequences = map(\n        allLookAheadPaths,\n        (currPath) =>\n          `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\n            \", \"\n          )}]`\n      )\n      const nextValidSequenceItems = map(\n        nextValidTokenSequences,\n        (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`\n      )\n      const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\n        \"\\n\"\n      )}`\n\n      return errPrefix + calculatedDescription + errSuffix\n    }\n  },\n\n  buildEarlyExitMessage({\n    expectedIterationPaths,\n    actual,\n    customUserDescription,\n    ruleName\n  }): string {\n    const errPrefix = \"Expecting: \"\n    // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n    const actualText = first(actual)!.image\n    const errSuffix = \"\\nbut found: '\" + actualText + \"'\"\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix\n    } else {\n      const nextValidTokenSequences = map(\n        expectedIterationPaths,\n        (currPath) =>\n          `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\n            \",\"\n          )}]`\n      )\n      const calculatedDescription =\n        `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n        `<${nextValidTokenSequences.join(\" ,\")}>`\n\n      return errPrefix + calculatedDescription + errSuffix\n    }\n  }\n}\n\nObject.freeze(defaultParserErrorProvider)\n\nexport const defaultGrammarResolverErrorProvider: IGrammarResolverErrorMessageProvider =\n  {\n    buildRuleNotFoundError(\n      topLevelRule: Rule,\n      undefinedRule: NonTerminal\n    ): string {\n      const msg =\n        \"Invalid grammar, reference to a rule which is not defined: ->\" +\n        undefinedRule.nonTerminalName +\n        \"<-\\n\" +\n        \"inside top level rule: ->\" +\n        topLevelRule.name +\n        \"<-\"\n      return msg\n    }\n  }\n\nexport const defaultGrammarValidatorErrorProvider: IGrammarValidatorErrorMessageProvider =\n  {\n    buildDuplicateFoundError(\n      topLevelRule: Rule,\n      duplicateProds: IProductionWithOccurrence[]\n    ): string {\n      function getExtraProductionArgument(\n        prod: IProductionWithOccurrence\n      ): string {\n        if (prod instanceof Terminal) {\n          return prod.terminalType.name\n        } else if (prod instanceof NonTerminal) {\n          return prod.nonTerminalName\n        } else {\n          return \"\"\n        }\n      }\n\n      const topLevelName = topLevelRule.name\n      const duplicateProd = first(duplicateProds)!\n      const index = duplicateProd.idx\n      const dslName = getProductionDslName(duplicateProd)\n      const extraArgument = getExtraProductionArgument(duplicateProd)\n\n      const hasExplicitIndex = index > 0\n      let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${\n        extraArgument ? `with argument: ->${extraArgument}<-` : \"\"\n      }\n                  appears more than once (${\n                    duplicateProds.length\n                  } times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `\n\n      // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n      msg = msg.replace(/[ \\t]+/g, \" \")\n      msg = msg.replace(/\\s\\s+/g, \"\\n\")\n\n      return msg\n    },\n\n    buildNamespaceConflictError(rule: Rule): string {\n      const errMsg =\n        `Namespace conflict found in grammar.\\n` +\n        `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n        `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n        `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n        `and Non-Terminal names start with a lower case letter.`\n\n      return errMsg\n    },\n\n    buildAlternationPrefixAmbiguityError(options: {\n      topLevelRule: Rule\n      prefixPath: TokenType[]\n      ambiguityIndices: number[]\n      alternation: Alternation\n    }): string {\n      const pathMsg = map(options.prefixPath, (currTok) =>\n        tokenLabel(currTok)\n      ).join(\", \")\n      const occurrence =\n        options.alternation.idx === 0 ? \"\" : options.alternation.idx\n      const errMsg =\n        `Ambiguous alternatives: <${options.ambiguityIndices.join(\n          \" ,\"\n        )}> due to common lookahead prefix\\n` +\n        `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n        `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n        `For Further details.`\n\n      return errMsg\n    },\n\n    buildAlternationAmbiguityError(options: {\n      topLevelRule: Rule\n      prefixPath: TokenType[]\n      ambiguityIndices: number[]\n      alternation: Alternation\n    }): string {\n      const pathMsg = map(options.prefixPath, (currtok) =>\n        tokenLabel(currtok)\n      ).join(\", \")\n      const occurrence =\n        options.alternation.idx === 0 ? \"\" : options.alternation.idx\n      let currMessage =\n        `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\n          \" ,\"\n        )}> in <OR${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`\n\n      currMessage =\n        currMessage +\n        `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n        `For Further details.`\n      return currMessage\n    },\n\n    buildEmptyRepetitionError(options: {\n      topLevelRule: Rule\n      repetition: IProductionWithOccurrence\n    }): string {\n      let dslName = getProductionDslName(options.repetition)\n      if (options.repetition.idx !== 0) {\n        dslName += options.repetition.idx\n      }\n\n      const errMsg =\n        `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n        `This could lead to an infinite loop.`\n\n      return errMsg\n    },\n\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options: {\n      tokenType: TokenType\n      expectedPattern: RegExp\n    }): string {\n      /* istanbul ignore next */\n      return \"deprecated\"\n    },\n\n    buildEmptyAlternationError(options: {\n      topLevelRule: Rule\n      alternation: Alternation\n      emptyChoiceIdx: number\n    }): string {\n      const errMsg =\n        `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n        ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n        `Only the last alternative may be an empty alternative.`\n\n      return errMsg\n    },\n\n    buildTooManyAlternativesError(options: {\n      topLevelRule: Rule\n      alternation: Alternation\n    }): string {\n      const errMsg =\n        `An Alternation cannot have more than 256 alternatives:\\n` +\n        `<OR${options.alternation.idx}> inside <${\n          options.topLevelRule.name\n        }> Rule.\\n has ${\n          options.alternation.definition.length + 1\n        } alternatives.`\n\n      return errMsg\n    },\n\n    buildLeftRecursionError(options: {\n      topLevelRule: Rule\n      leftRecursionPath: Rule[]\n    }): string {\n      const ruleName = options.topLevelRule.name\n      const pathNames = map(\n        options.leftRecursionPath,\n        (currRule) => currRule.name\n      )\n      const leftRecursivePath = `${ruleName} --> ${pathNames\n        .concat([ruleName])\n        .join(\" --> \")}`\n      const errMsg =\n        `Left Recursion found in grammar.\\n` +\n        `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n        `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n        ` To fix this refactor your grammar to remove the left recursion.\\n` +\n        `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`\n\n      return errMsg\n    },\n\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options: {\n      topLevelRule: Rule\n      expectedPattern: RegExp\n    }): string {\n      /* istanbul ignore next */\n      return \"deprecated\"\n    },\n\n    buildDuplicateRuleNameError(options: {\n      topLevelRule: Rule | string\n      grammarName: string\n    }): string {\n      let ruleName\n      if (options.topLevelRule instanceof Rule) {\n        ruleName = options.topLevelRule.name\n      } else {\n        ruleName = options.topLevelRule\n      }\n\n      const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`\n\n      return errMsg\n    }\n  }\n", "import {\n  IParserUnresolvedRefDefinitionError,\n  ParserDefinitionErrorType\n} from \"../parser/parser\"\nimport forEach from \"lodash/forEach\"\nimport values from \"lodash/values\"\nimport { NonTerminal, Rule } from \"@chevrotain/gast\"\nimport { GAstVisitor } from \"@chevrotain/gast\"\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IParserDefinitionError\n} from \"./types\"\n\nexport function resolveGrammar(\n  topLevels: Record<string, Rule>,\n  errMsgProvider: IGrammarResolverErrorMessageProvider\n): IParserDefinitionError[] {\n  const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider)\n  refResolver.resolveRefs()\n  return refResolver.errors\n}\n\nexport class GastRefResolverVisitor extends GAstVisitor {\n  public errors: IParserUnresolvedRefDefinitionError[] = []\n  private currTopLevel: Rule\n\n  constructor(\n    private nameToTopRule: Record<string, Rule>,\n    private errMsgProvider: IGrammarResolverErrorMessageProvider\n  ) {\n    super()\n  }\n\n  public resolveRefs(): void {\n    forEach(values(this.nameToTopRule), (prod) => {\n      this.currTopLevel = prod\n      prod.accept(this)\n    })\n  }\n\n  public visitNonTerminal(node: NonTerminal): void {\n    const ref = this.nameToTopRule[node.nonTerminalName]\n\n    if (!ref) {\n      const msg = this.errMsgProvider.buildRuleNotFoundError(\n        this.currTopLevel,\n        node\n      )\n      this.errors.push({\n        message: msg,\n        type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n        ruleName: this.currTopLevel.name,\n        unresolvedRefName: node.nonTerminalName\n      })\n    } else {\n      node.referencedRule = ref\n    }\n  }\n}\n", "/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n", "var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n", "var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n", "var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n", "var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n", "var baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nmodule.exports = dropRight;\n", "import { RestWalker } from \"./rest\"\nimport _first from \"lodash/first\"\nimport isEmpty from \"lodash/isEmpty\"\nimport dropRight from \"lodash/dropRight\"\nimport drop from \"lodash/drop\"\nimport last from \"lodash/last\"\nimport forEach from \"lodash/forEach\"\nimport clone from \"lodash/clone\"\nimport { first } from \"./first\"\nimport { TokenMatcher } from \"../parser/parser\"\nimport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"@chevrotain/gast\"\nimport {\n  IGrammarPath,\n  IProduction,\n  ISyntacticContentAssistPath,\n  IToken,\n  ITokenGrammarPath,\n  TokenType\n} from \"@chevrotain/types\"\n\nexport abstract class AbstractNextPossibleTokensWalker extends RestWalker {\n  protected possibleTokTypes: TokenType[] = []\n  protected ruleStack: string[]\n  protected occurrenceStack: number[]\n\n  protected nextProductionName = \"\"\n  protected nextProductionOccurrence = 0\n  protected found = false\n  protected isAtEndOfPath = false\n\n  constructor(protected topProd: Rule, protected path: IGrammarPath) {\n    super()\n  }\n\n  startWalking(): TokenType[] {\n    this.found = false\n\n    if (this.path.ruleStack[0] !== this.topProd.name) {\n      throw Error(\"The path does not start with the walker's top Rule!\")\n    }\n\n    // immutable for the win\n    this.ruleStack = clone(this.path.ruleStack).reverse() // intelij bug requires assertion\n    this.occurrenceStack = clone(this.path.occurrenceStack).reverse() // intelij bug requires assertion\n\n    // already verified that the first production is valid, we now seek the 2nd production\n    this.ruleStack.pop()\n    this.occurrenceStack.pop()\n\n    this.updateExpectedNext()\n    this.walk(this.topProd)\n\n    return this.possibleTokTypes\n  }\n\n  walk(\n    prod: { definition: IProduction[] },\n    prevRest: IProduction[] = []\n  ): void {\n    // stop scanning once we found the path\n    if (!this.found) {\n      super.walk(prod, prevRest)\n    }\n  }\n\n  walkProdRef(\n    refProd: NonTerminal,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // found the next production, need to keep walking in it\n    if (\n      refProd.referencedRule.name === this.nextProductionName &&\n      refProd.idx === this.nextProductionOccurrence\n    ) {\n      const fullRest = currRest.concat(prevRest)\n      this.updateExpectedNext()\n      this.walk(refProd.referencedRule, <any>fullRest)\n    }\n  }\n\n  updateExpectedNext(): void {\n    // need to consume the Terminal\n    if (isEmpty(this.ruleStack)) {\n      // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n      // really seeking is the last Terminal...\n      this.nextProductionName = \"\"\n      this.nextProductionOccurrence = 0\n      this.isAtEndOfPath = true\n    } else {\n      this.nextProductionName = this.ruleStack.pop()!\n      this.nextProductionOccurrence = this.occurrenceStack.pop()!\n    }\n  }\n}\n\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n  private nextTerminalName = \"\"\n  private nextTerminalOccurrence = 0\n\n  constructor(topProd: Rule, protected path: ITokenGrammarPath) {\n    super(topProd, path)\n    this.nextTerminalName = this.path.lastTok.name\n    this.nextTerminalOccurrence = this.path.lastTokOccurrence\n  }\n\n  walkTerminal(\n    terminal: Terminal,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (\n      this.isAtEndOfPath &&\n      terminal.terminalType.name === this.nextTerminalName &&\n      terminal.idx === this.nextTerminalOccurrence &&\n      !this.found\n    ) {\n      const fullRest = currRest.concat(prevRest)\n      const restProd = new Alternative({ definition: fullRest })\n      this.possibleTokTypes = first(restProd)\n      this.found = true\n    }\n  }\n}\n\nexport type AlternativesFirstTokens = TokenType[][]\n\nexport interface IFirstAfterRepetition {\n  token: TokenType | undefined\n  occurrence: number | undefined\n  isEndOfRule: boolean | undefined\n}\n\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n  protected result: IFirstAfterRepetition = {\n    token: undefined,\n    occurrence: undefined,\n    isEndOfRule: undefined\n  }\n\n  constructor(protected topRule: Rule, protected occurrence: number) {\n    super()\n  }\n\n  startWalking(): IFirstAfterRepetition {\n    this.walk(this.topRule)\n    return this.result\n  }\n}\n\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkMany(\n    manyProd: Repetition,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (manyProd.idx === this.occurrence) {\n      const firstAfterMany = _first(currRest.concat(prevRest))\n      this.result.isEndOfRule = firstAfterMany === undefined\n      if (firstAfterMany instanceof Terminal) {\n        this.result.token = firstAfterMany.terminalType\n        this.result.occurrence = firstAfterMany.idx\n      }\n    } else {\n      super.walkMany(manyProd, currRest, prevRest)\n    }\n  }\n}\n\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkManySep(\n    manySepProd: RepetitionWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (manySepProd.idx === this.occurrence) {\n      const firstAfterManySep = _first(currRest.concat(prevRest))\n      this.result.isEndOfRule = firstAfterManySep === undefined\n      if (firstAfterManySep instanceof Terminal) {\n        this.result.token = firstAfterManySep.terminalType\n        this.result.occurrence = firstAfterManySep.idx\n      }\n    } else {\n      super.walkManySep(manySepProd, currRest, prevRest)\n    }\n  }\n}\n\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkAtLeastOne(\n    atLeastOneProd: RepetitionMandatory,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (atLeastOneProd.idx === this.occurrence) {\n      const firstAfterAtLeastOne = _first(currRest.concat(prevRest))\n      this.result.isEndOfRule = firstAfterAtLeastOne === undefined\n      if (firstAfterAtLeastOne instanceof Terminal) {\n        this.result.token = firstAfterAtLeastOne.terminalType\n        this.result.occurrence = firstAfterAtLeastOne.idx\n      }\n    } else {\n      super.walkAtLeastOne(atLeastOneProd, currRest, prevRest)\n    }\n  }\n}\n\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkAtLeastOneSep(\n    atleastOneSepProd: RepetitionMandatoryWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (atleastOneSepProd.idx === this.occurrence) {\n      const firstAfterfirstAfterAtLeastOneSep = _first(\n        currRest.concat(prevRest)\n      )\n      this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined\n      if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n        this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType\n        this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx\n      }\n    } else {\n      super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest)\n    }\n  }\n}\n\nexport interface PartialPathAndSuffixes {\n  partialPath: TokenType[]\n  suffixDef: IProduction[]\n}\n\nexport function possiblePathsFrom(\n  targetDef: IProduction[],\n  maxLength: number,\n  currPath: TokenType[] = []\n): PartialPathAndSuffixes[] {\n  // avoid side effects\n  currPath = clone(currPath)\n  let result: PartialPathAndSuffixes[] = []\n  let i = 0\n\n  // TODO: avoid inner funcs\n  function remainingPathWith(nextDef: IProduction[]) {\n    return nextDef.concat(drop(targetDef, i + 1))\n  }\n\n  // TODO: avoid inner funcs\n  function getAlternativesForProd(definition: IProduction[]) {\n    const alternatives = possiblePathsFrom(\n      remainingPathWith(definition),\n      maxLength,\n      currPath\n    )\n    return result.concat(alternatives)\n  }\n\n  /**\n   * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n   * following (rest) of the targetDef.\n   *\n   * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n   * the optional production.\n   */\n  while (currPath.length < maxLength && i < targetDef.length) {\n    const prod = targetDef[i]\n\n    /* istanbul ignore else */\n    if (prod instanceof Alternative) {\n      return getAlternativesForProd(prod.definition)\n    } else if (prod instanceof NonTerminal) {\n      return getAlternativesForProd(prod.definition)\n    } else if (prod instanceof Option) {\n      result = getAlternativesForProd(prod.definition)\n    } else if (prod instanceof RepetitionMandatory) {\n      const newDef = prod.definition.concat([\n        new Repetition({\n          definition: prod.definition\n        })\n      ])\n      return getAlternativesForProd(newDef)\n    } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n      const newDef = [\n        new Alternative({ definition: prod.definition }),\n        new Repetition({\n          definition: [new Terminal({ terminalType: prod.separator })].concat(\n            <any>prod.definition\n          )\n        })\n      ]\n      return getAlternativesForProd(newDef)\n    } else if (prod instanceof RepetitionWithSeparator) {\n      const newDef = prod.definition.concat([\n        new Repetition({\n          definition: [new Terminal({ terminalType: prod.separator })].concat(\n            <any>prod.definition\n          )\n        })\n      ])\n      result = getAlternativesForProd(newDef)\n    } else if (prod instanceof Repetition) {\n      const newDef = prod.definition.concat([\n        new Repetition({\n          definition: prod.definition\n        })\n      ])\n      result = getAlternativesForProd(newDef)\n    } else if (prod instanceof Alternation) {\n      forEach(prod.definition, (currAlt) => {\n        // TODO: this is a limited check for empty alternatives\n        //   It would prevent a common case of infinite loops during parser initialization.\n        //   However **in-directly** empty alternatives may still cause issues.\n        if (isEmpty(currAlt.definition) === false) {\n          result = getAlternativesForProd(currAlt.definition)\n        }\n      })\n      return result\n    } else if (prod instanceof Terminal) {\n      currPath.push(prod.terminalType)\n    } else {\n      throw Error(\"non exhaustive match\")\n    }\n\n    i++\n  }\n  result.push({\n    partialPath: currPath,\n    suffixDef: drop(targetDef, i)\n  })\n\n  return result\n}\n\ninterface IPathToExamine {\n  idx: number\n  def: IProduction[]\n  ruleStack: string[]\n  occurrenceStack: number[]\n}\n\nexport function nextPossibleTokensAfter(\n  initialDef: IProduction[],\n  tokenVector: IToken[],\n  tokMatcher: TokenMatcher,\n  maxLookAhead: number\n): ISyntacticContentAssistPath[] {\n  const EXIT_NON_TERMINAL: any = \"EXIT_NONE_TERMINAL\"\n  // to avoid creating a new Array each time.\n  const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL]\n  const EXIT_ALTERNATIVE: any = \"EXIT_ALTERNATIVE\"\n  let foundCompletePath = false\n\n  const tokenVectorLength = tokenVector.length\n  const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1\n\n  const result: ISyntacticContentAssistPath[] = []\n\n  const possiblePaths: IPathToExamine[] = []\n  possiblePaths.push({\n    idx: -1,\n    def: initialDef,\n    ruleStack: [],\n    occurrenceStack: []\n  })\n\n  while (!isEmpty(possiblePaths)) {\n    const currPath = possiblePaths.pop()!\n\n    // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n    if (currPath === EXIT_ALTERNATIVE) {\n      if (\n        foundCompletePath &&\n        last(possiblePaths)!.idx <= minimalAlternativesIndex\n      ) {\n        // remove irrelevant alternative\n        possiblePaths.pop()\n      }\n      continue\n    }\n\n    const currDef = currPath.def\n    const currIdx = currPath.idx\n    const currRuleStack = currPath.ruleStack\n    const currOccurrenceStack = currPath.occurrenceStack\n\n    // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n    if (isEmpty(currDef)) {\n      continue\n    }\n\n    const prod = currDef[0]\n    /* istanbul ignore else */\n    if (prod === EXIT_NON_TERMINAL) {\n      const nextPath = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: dropRight(currRuleStack),\n        occurrenceStack: dropRight(currOccurrenceStack)\n      }\n      possiblePaths.push(nextPath)\n    } else if (prod instanceof Terminal) {\n      /* istanbul ignore else */\n      if (currIdx < tokenVectorLength - 1) {\n        const nextIdx = currIdx + 1\n        const actualToken = tokenVector[nextIdx]\n        if (tokMatcher!(actualToken, prod.terminalType)) {\n          const nextPath = {\n            idx: nextIdx,\n            def: drop(currDef),\n            ruleStack: currRuleStack,\n            occurrenceStack: currOccurrenceStack\n          }\n          possiblePaths.push(nextPath)\n        }\n        // end of the line\n      } else if (currIdx === tokenVectorLength - 1) {\n        // IGNORE ABOVE ELSE\n        result.push({\n          nextTokenType: prod.terminalType,\n          nextTokenOccurrence: prod.idx,\n          ruleStack: currRuleStack,\n          occurrenceStack: currOccurrenceStack\n        })\n        foundCompletePath = true\n      } else {\n        throw Error(\"non exhaustive match\")\n      }\n    } else if (prod instanceof NonTerminal) {\n      const newRuleStack = clone(currRuleStack)\n      newRuleStack.push(prod.nonTerminalName)\n\n      const newOccurrenceStack = clone(currOccurrenceStack)\n      newOccurrenceStack.push(prod.idx)\n\n      const nextPath = {\n        idx: currIdx,\n        def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n        ruleStack: newRuleStack,\n        occurrenceStack: newOccurrenceStack\n      }\n      possiblePaths.push(nextPath)\n    } else if (prod instanceof Option) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      const nextPathWithout = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPathWithout)\n      // required marker to avoid backtracking paths whose higher priority alternatives already matched\n      possiblePaths.push(EXIT_ALTERNATIVE)\n\n      const nextPathWith = {\n        idx: currIdx,\n        def: prod.definition.concat(drop(currDef)),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPathWith)\n    } else if (prod instanceof RepetitionMandatory) {\n      // TODO:(THE NEW operators here take a while...) (convert once?)\n      const secondIteration = new Repetition({\n        definition: prod.definition,\n        idx: prod.idx\n      })\n      const nextDef = prod.definition.concat([secondIteration], drop(currDef))\n      const nextPath = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPath)\n    } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n      // TODO:(THE NEW operators here take a while...) (convert once?)\n      const separatorGast = new Terminal({\n        terminalType: prod.separator\n      })\n      const secondIteration = new Repetition({\n        definition: [<any>separatorGast].concat(prod.definition),\n        idx: prod.idx\n      })\n      const nextDef = prod.definition.concat([secondIteration], drop(currDef))\n      const nextPath = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPath)\n    } else if (prod instanceof RepetitionWithSeparator) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      const nextPathWithout = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPathWithout)\n      // required marker to avoid backtracking paths whose higher priority alternatives already matched\n      possiblePaths.push(EXIT_ALTERNATIVE)\n\n      const separatorGast = new Terminal({\n        terminalType: prod.separator\n      })\n      const nthRepetition = new Repetition({\n        definition: [<any>separatorGast].concat(prod.definition),\n        idx: prod.idx\n      })\n      const nextDef = prod.definition.concat([nthRepetition], drop(currDef))\n      const nextPathWith = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPathWith)\n    } else if (prod instanceof Repetition) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      const nextPathWithout = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPathWithout)\n      // required marker to avoid backtracking paths whose higher priority alternatives already matched\n      possiblePaths.push(EXIT_ALTERNATIVE)\n\n      // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n      const nthRepetition = new Repetition({\n        definition: prod.definition,\n        idx: prod.idx\n      })\n      const nextDef = prod.definition.concat([nthRepetition], drop(currDef))\n      const nextPathWith = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPathWith)\n    } else if (prod instanceof Alternation) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      for (let i = prod.definition.length - 1; i >= 0; i--) {\n        const currAlt: any = prod.definition[i]\n        const currAltPath = {\n          idx: currIdx,\n          def: currAlt.definition.concat(drop(currDef)),\n          ruleStack: currRuleStack,\n          occurrenceStack: currOccurrenceStack\n        }\n        possiblePaths.push(currAltPath)\n        possiblePaths.push(EXIT_ALTERNATIVE)\n      }\n    } else if (prod instanceof Alternative) {\n      possiblePaths.push({\n        idx: currIdx,\n        def: prod.definition.concat(drop(currDef)),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      })\n    } else if (prod instanceof Rule) {\n      // last because we should only encounter at most a single one of these per invocation.\n      possiblePaths.push(\n        expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack)\n      )\n    } else {\n      throw Error(\"non exhaustive match\")\n    }\n  }\n  return result\n}\n\nfunction expandTopLevelRule(\n  topRule: Rule,\n  currIdx: number,\n  currRuleStack: string[],\n  currOccurrenceStack: number[]\n): IPathToExamine {\n  const newRuleStack = clone(currRuleStack)\n  newRuleStack.push(topRule.name)\n\n  const newCurrOccurrenceStack = clone(currOccurrenceStack)\n  // top rule is always assumed to have been called with occurrence index 1\n  newCurrOccurrenceStack.push(1)\n\n  return {\n    idx: currIdx,\n    def: topRule.definition,\n    ruleStack: newRuleStack,\n    occurrenceStack: newCurrOccurrenceStack\n  }\n}\n", "import isEmpty from \"lodash/isEmpty\"\nimport flatten from \"lodash/flatten\"\nimport every from \"lodash/every\"\nimport map from \"lodash/map\"\nimport forEach from \"lodash/forEach\"\nimport has from \"lodash/has\"\nimport reduce from \"lodash/reduce\"\nimport { possiblePathsFrom } from \"./interpreter\"\nimport { RestWalker } from \"./rest\"\nimport { Predicate, TokenMatcher } from \"../parser/parser\"\nimport {\n  tokenStructuredMatcher,\n  tokenStructuredMatcherNoCategories\n} from \"../../scan/tokens\"\nimport {\n  Alternation,\n  Alternative as AlternativeGAST,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator\n} from \"@chevrotain/gast\"\nimport { GAstVisitor } from \"@chevrotain/gast\"\nimport {\n  IOrAlt,\n  IProduction,\n  IProductionWithOccurrence,\n  LookaheadSequence,\n  LookaheadProductionType,\n  Rule,\n  TokenType,\n  BaseParser\n} from \"@chevrotain/types\"\n\nexport enum PROD_TYPE {\n  OPTION,\n  REPETITION,\n  REPETITION_MANDATORY,\n  REPETITION_MANDATORY_WITH_SEPARATOR,\n  REPETITION_WITH_SEPARATOR,\n  ALTERNATION\n}\n\nexport function getProdType(\n  prod: IProduction | LookaheadProductionType\n): PROD_TYPE {\n  /* istanbul ignore else */\n  if (prod instanceof Option || prod === \"Option\") {\n    return PROD_TYPE.OPTION\n  } else if (prod instanceof Repetition || prod === \"Repetition\") {\n    return PROD_TYPE.REPETITION\n  } else if (\n    prod instanceof RepetitionMandatory ||\n    prod === \"RepetitionMandatory\"\n  ) {\n    return PROD_TYPE.REPETITION_MANDATORY\n  } else if (\n    prod instanceof RepetitionMandatoryWithSeparator ||\n    prod === \"RepetitionMandatoryWithSeparator\"\n  ) {\n    return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR\n  } else if (\n    prod instanceof RepetitionWithSeparator ||\n    prod === \"RepetitionWithSeparator\"\n  ) {\n    return PROD_TYPE.REPETITION_WITH_SEPARATOR\n  } else if (prod instanceof Alternation || prod === \"Alternation\") {\n    return PROD_TYPE.ALTERNATION\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nexport function getLookaheadPaths(options: {\n  occurrence: number\n  rule: Rule\n  prodType: LookaheadProductionType\n  maxLookahead: number\n}): LookaheadSequence[] {\n  const { occurrence, rule, prodType, maxLookahead } = options\n  const type = getProdType(prodType)\n  if (type === PROD_TYPE.ALTERNATION) {\n    return getLookaheadPathsForOr(occurrence, rule, maxLookahead)\n  } else {\n    return getLookaheadPathsForOptionalProd(\n      occurrence,\n      rule,\n      type,\n      maxLookahead\n    )\n  }\n}\n\nexport function buildLookaheadFuncForOr(\n  occurrence: number,\n  ruleGrammar: Rule,\n  maxLookahead: number,\n  hasPredicates: boolean,\n  dynamicTokensEnabled: boolean,\n  laFuncBuilder: Function\n): (orAlts?: IOrAlt<any>[]) => number | undefined {\n  const lookAheadPaths = getLookaheadPathsForOr(\n    occurrence,\n    ruleGrammar,\n    maxLookahead\n  )\n\n  const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n    ? tokenStructuredMatcherNoCategories\n    : tokenStructuredMatcher\n\n  return laFuncBuilder(\n    lookAheadPaths,\n    hasPredicates,\n    tokenMatcher,\n    dynamicTokensEnabled\n  )\n}\n\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(\n  occurrence: number,\n  ruleGrammar: Rule,\n  k: number,\n  dynamicTokensEnabled: boolean,\n  prodType: PROD_TYPE,\n  lookaheadBuilder: (\n    lookAheadSequence: LookaheadSequence,\n    tokenMatcher: TokenMatcher,\n    dynamicTokensEnabled: boolean\n  ) => () => boolean\n): () => boolean {\n  const lookAheadPaths = getLookaheadPathsForOptionalProd(\n    occurrence,\n    ruleGrammar,\n    prodType,\n    k\n  )\n\n  const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n    ? tokenStructuredMatcherNoCategories\n    : tokenStructuredMatcher\n\n  return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled)\n}\n\nexport type Alternative = TokenType[][]\n\nexport function buildAlternativesLookAheadFunc(\n  alts: LookaheadSequence[],\n  hasPredicates: boolean,\n  tokenMatcher: TokenMatcher,\n  dynamicTokensEnabled: boolean\n): (orAlts: IOrAlt<any>[]) => number | undefined {\n  const numOfAlts = alts.length\n  const areAllOneTokenLookahead = every(alts, (currAlt) => {\n    return every(currAlt, (currPath) => {\n      return currPath.length === 1\n    })\n  })\n\n  // This version takes into account the predicates as well.\n  if (hasPredicates) {\n    /**\n     * @returns {number} - The chosen alternative index\n     */\n    return function (\n      this: BaseParser,\n      orAlts: IOrAlt<any>[]\n    ): number | undefined {\n      // unfortunately the predicates must be extracted every single time\n      // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n      // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n      const predicates: (Predicate | undefined)[] = map(\n        orAlts,\n        (currAlt) => currAlt.GATE\n      )\n\n      for (let t = 0; t < numOfAlts; t++) {\n        const currAlt = alts[t]\n        const currNumOfPaths = currAlt.length\n\n        const currPredicate = predicates[t]\n        if (currPredicate !== undefined && currPredicate.call(this) === false) {\n          // if the predicate does not match there is no point in checking the paths\n          continue\n        }\n        nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n          const currPath = currAlt[j]\n          const currPathLength = currPath.length\n          for (let i = 0; i < currPathLength; i++) {\n            const nextToken = this.LA(i + 1)\n            if (tokenMatcher(nextToken, currPath[i]) === false) {\n              // mismatch in current path\n              // try the next pth\n              continue nextPath\n            }\n          }\n          // found a full path that matches.\n          // this will also work for an empty ALT as the loop will be skipped\n          return t\n        }\n        // none of the paths for the current alternative matched\n        // try the next alternative\n      }\n      // none of the alternatives could be matched\n      return undefined\n    }\n  } else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n    const singleTokenAlts = map(alts, (currAlt) => {\n      return flatten(currAlt)\n    })\n\n    const choiceToAlt = reduce(\n      singleTokenAlts,\n      (result, currAlt, idx) => {\n        forEach(currAlt, (currTokType) => {\n          if (!has(result, currTokType.tokenTypeIdx!)) {\n            result[currTokType.tokenTypeIdx!] = idx\n          }\n          forEach(currTokType.categoryMatches!, (currExtendingType) => {\n            if (!has(result, currExtendingType)) {\n              result[currExtendingType] = idx\n            }\n          })\n        })\n        return result\n      },\n      {} as Record<number, number>\n    )\n\n    /**\n     * @returns {number} - The chosen alternative index\n     */\n    return function (this: BaseParser): number {\n      const nextToken = this.LA(1)\n      return choiceToAlt[nextToken.tokenTypeIdx]\n    }\n  } else {\n    // optimized lookahead without needing to check the predicates at all.\n    // this causes code duplication which is intentional to improve performance.\n    /**\n     * @returns {number} - The chosen alternative index\n     */\n    return function (this: BaseParser): number | undefined {\n      for (let t = 0; t < numOfAlts; t++) {\n        const currAlt = alts[t]\n        const currNumOfPaths = currAlt.length\n        nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n          const currPath = currAlt[j]\n          const currPathLength = currPath.length\n          for (let i = 0; i < currPathLength; i++) {\n            const nextToken = this.LA(i + 1)\n            if (tokenMatcher(nextToken, currPath[i]) === false) {\n              // mismatch in current path\n              // try the next pth\n              continue nextPath\n            }\n          }\n          // found a full path that matches.\n          // this will also work for an empty ALT as the loop will be skipped\n          return t\n        }\n        // none of the paths for the current alternative matched\n        // try the next alternative\n      }\n      // none of the alternatives could be matched\n      return undefined\n    }\n  }\n}\n\nexport function buildSingleAlternativeLookaheadFunction(\n  alt: LookaheadSequence,\n  tokenMatcher: TokenMatcher,\n  dynamicTokensEnabled: boolean\n): () => boolean {\n  const areAllOneTokenLookahead = every(alt, (currPath) => {\n    return currPath.length === 1\n  })\n\n  const numOfPaths = alt.length\n\n  // optimized (common) case of all the lookaheads paths requiring only\n  // a single token lookahead.\n  if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n    const singleTokensTypes = flatten(alt)\n\n    if (\n      singleTokensTypes.length === 1 &&\n      isEmpty((<any>singleTokensTypes[0]).categoryMatches)\n    ) {\n      const expectedTokenType = singleTokensTypes[0]\n      const expectedTokenUniqueKey = (<any>expectedTokenType).tokenTypeIdx\n\n      return function (this: BaseParser): boolean {\n        return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey\n      }\n    } else {\n      const choiceToAlt = reduce(\n        singleTokensTypes,\n        (result, currTokType, idx) => {\n          result[currTokType.tokenTypeIdx!] = true\n          forEach(currTokType.categoryMatches!, (currExtendingType) => {\n            result[currExtendingType] = true\n          })\n          return result\n        },\n        [] as boolean[]\n      )\n\n      return function (this: BaseParser): boolean {\n        const nextToken = this.LA(1)\n        return choiceToAlt[nextToken.tokenTypeIdx] === true\n      }\n    }\n  } else {\n    return function (this: BaseParser): boolean {\n      nextPath: for (let j = 0; j < numOfPaths; j++) {\n        const currPath = alt[j]\n        const currPathLength = currPath.length\n        for (let i = 0; i < currPathLength; i++) {\n          const nextToken = this.LA(i + 1)\n          if (tokenMatcher(nextToken, currPath[i]) === false) {\n            // mismatch in current path\n            // try the next pth\n            continue nextPath\n          }\n        }\n        // found a full path that matches.\n        return true\n      }\n\n      // none of the paths matched\n      return false\n    }\n  }\n}\n\nclass RestDefinitionFinderWalker extends RestWalker {\n  private restDef: IProduction[]\n\n  constructor(\n    private topProd: Rule,\n    private targetOccurrence: number,\n    private targetProdType: PROD_TYPE\n  ) {\n    super()\n  }\n\n  startWalking(): IProduction[] {\n    this.walk(this.topProd)\n    return this.restDef\n  }\n\n  private checkIsTarget(\n    node: IProductionWithOccurrence,\n    expectedProdType: PROD_TYPE,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): boolean {\n    if (\n      node.idx === this.targetOccurrence &&\n      this.targetProdType === expectedProdType\n    ) {\n      this.restDef = currRest.concat(prevRest)\n      return true\n    }\n    // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n    return false\n  }\n\n  walkOption(\n    optionProd: Option,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n      super.walkOption(optionProd, currRest, prevRest)\n    }\n  }\n\n  walkAtLeastOne(\n    atLeastOneProd: RepetitionMandatory,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (\n      !this.checkIsTarget(\n        atLeastOneProd,\n        PROD_TYPE.REPETITION_MANDATORY,\n        currRest,\n        prevRest\n      )\n    ) {\n      super.walkOption(atLeastOneProd, currRest, prevRest)\n    }\n  }\n\n  walkAtLeastOneSep(\n    atLeastOneSepProd: RepetitionMandatoryWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (\n      !this.checkIsTarget(\n        atLeastOneSepProd,\n        PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,\n        currRest,\n        prevRest\n      )\n    ) {\n      super.walkOption(atLeastOneSepProd, currRest, prevRest)\n    }\n  }\n\n  walkMany(\n    manyProd: Repetition,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (\n      !this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)\n    ) {\n      super.walkOption(manyProd, currRest, prevRest)\n    }\n  }\n\n  walkManySep(\n    manySepProd: RepetitionWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (\n      !this.checkIsTarget(\n        manySepProd,\n        PROD_TYPE.REPETITION_WITH_SEPARATOR,\n        currRest,\n        prevRest\n      )\n    ) {\n      super.walkOption(manySepProd, currRest, prevRest)\n    }\n  }\n}\n\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n  public result: IProduction[] = []\n\n  constructor(\n    private targetOccurrence: number,\n    private targetProdType: PROD_TYPE,\n    private targetRef?: any\n  ) {\n    super()\n  }\n\n  private checkIsTarget(\n    node: { definition: IProduction[] } & IProductionWithOccurrence,\n    expectedProdName: PROD_TYPE\n  ): void {\n    if (\n      node.idx === this.targetOccurrence &&\n      this.targetProdType === expectedProdName &&\n      (this.targetRef === undefined || node === this.targetRef)\n    ) {\n      this.result = node.definition\n    }\n  }\n\n  public visitOption(node: Option): void {\n    this.checkIsTarget(node, PROD_TYPE.OPTION)\n  }\n\n  public visitRepetition(node: Repetition): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION)\n  }\n\n  public visitRepetitionMandatory(node: RepetitionMandatory): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY)\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    node: RepetitionMandatoryWithSeparator\n  ): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR)\n  }\n\n  public visitRepetitionWithSeparator(node: RepetitionWithSeparator): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR)\n  }\n\n  public visitAlternation(node: Alternation): void {\n    this.checkIsTarget(node, PROD_TYPE.ALTERNATION)\n  }\n}\n\nfunction initializeArrayOfArrays(size: number): any[][] {\n  const result = new Array(size)\n  for (let i = 0; i < size; i++) {\n    result[i] = []\n  }\n  return result\n}\n\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path: TokenType[]): string[] {\n  let keys = [\"\"]\n  for (let i = 0; i < path.length; i++) {\n    const tokType = path[i]\n    const longerKeys = []\n    for (let j = 0; j < keys.length; j++) {\n      const currShorterKey = keys[j]\n      longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx)\n      for (let t = 0; t < tokType.categoryMatches!.length; t++) {\n        const categoriesKeySuffix = \"_\" + tokType.categoryMatches![t]\n        longerKeys.push(currShorterKey + categoriesKeySuffix)\n      }\n    }\n    keys = longerKeys\n  }\n  return keys\n}\n\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(\n  altKnownPathsKeys: Record<string, boolean>[],\n  searchPathKeys: string[],\n  idx: number\n): boolean {\n  for (\n    let currAltIdx = 0;\n    currAltIdx < altKnownPathsKeys.length;\n    currAltIdx++\n  ) {\n    // We only want to test vs the other alternatives\n    if (currAltIdx === idx) {\n      continue\n    }\n    const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx]\n    for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n      const searchKey = searchPathKeys[searchIdx]\n      if (otherAltKnownPathsKeys[searchKey] === true) {\n        return false\n      }\n    }\n  }\n  // None of the SearchPathKeys were found in any of the other alternatives\n  return true\n}\n\nexport function lookAheadSequenceFromAlternatives(\n  altsDefs: IProduction[],\n  k: number\n): LookaheadSequence[] {\n  const partialAlts = map(altsDefs, (currAlt) =>\n    possiblePathsFrom([currAlt], 1)\n  )\n  const finalResult = initializeArrayOfArrays(partialAlts.length)\n  const altsHashes = map(partialAlts, (currAltPaths) => {\n    const dict: { [key: string]: boolean } = {}\n    forEach(currAltPaths, (item) => {\n      const keys = pathToHashKeys(item.partialPath)\n      forEach(keys, (currKey) => {\n        dict[currKey] = true\n      })\n    })\n    return dict\n  })\n  let newData = partialAlts\n\n  // maxLookahead loop\n  for (let pathLength = 1; pathLength <= k; pathLength++) {\n    const currDataset = newData\n    newData = initializeArrayOfArrays(currDataset.length)\n\n    // alternatives loop\n    for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n      const currAltPathsAndSuffixes = currDataset[altIdx]\n      // paths in current alternative loop\n      for (\n        let currPathIdx = 0;\n        currPathIdx < currAltPathsAndSuffixes.length;\n        currPathIdx++\n      ) {\n        const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath\n        const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef\n        const prefixKeys = pathToHashKeys(currPathPrefix)\n        const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx)\n        // End of the line for this path.\n        if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n          const currAltResult = finalResult[altIdx]\n          // TODO: Can we implement a containsPath using Maps/Dictionaries?\n          if (containsPath(currAltResult, currPathPrefix) === false) {\n            currAltResult.push(currPathPrefix)\n            // Update all new  keys for the current path.\n            for (let j = 0; j < prefixKeys.length; j++) {\n              const currKey = prefixKeys[j]\n              altsHashes[altIdx][currKey] = true\n            }\n          }\n        }\n        // Expand longer paths\n        else {\n          const newPartialPathsAndSuffixes = possiblePathsFrom(\n            suffixDef,\n            pathLength + 1,\n            currPathPrefix\n          )\n          newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes)\n\n          // Update keys for new known paths\n          forEach(newPartialPathsAndSuffixes, (item) => {\n            const prefixKeys = pathToHashKeys(item.partialPath)\n            forEach(prefixKeys, (key) => {\n              altsHashes[altIdx][key] = true\n            })\n          })\n        }\n      }\n    }\n  }\n\n  return finalResult\n}\n\nexport function getLookaheadPathsForOr(\n  occurrence: number,\n  ruleGrammar: Rule,\n  k: number,\n  orProd?: Alternation\n): LookaheadSequence[] {\n  const visitor = new InsideDefinitionFinderVisitor(\n    occurrence,\n    PROD_TYPE.ALTERNATION,\n    orProd\n  )\n  ruleGrammar.accept(visitor)\n  return lookAheadSequenceFromAlternatives(visitor.result, k)\n}\n\nexport function getLookaheadPathsForOptionalProd(\n  occurrence: number,\n  ruleGrammar: Rule,\n  prodType: PROD_TYPE,\n  k: number\n): LookaheadSequence[] {\n  const insideDefVisitor = new InsideDefinitionFinderVisitor(\n    occurrence,\n    prodType\n  )\n  ruleGrammar.accept(insideDefVisitor)\n  const insideDef = insideDefVisitor.result\n\n  const afterDefWalker = new RestDefinitionFinderWalker(\n    ruleGrammar,\n    occurrence,\n    prodType\n  )\n  const afterDef = afterDefWalker.startWalking()\n\n  const insideFlat = new AlternativeGAST({ definition: insideDef })\n  const afterFlat = new AlternativeGAST({ definition: afterDef })\n\n  return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k)\n}\n\nexport function containsPath(\n  alternative: Alternative,\n  searchPath: TokenType[]\n): boolean {\n  compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n    const otherPath = alternative[i]\n    if (otherPath.length !== searchPath.length) {\n      continue\n    }\n    for (let j = 0; j < otherPath.length; j++) {\n      const searchTok = searchPath[j]\n      const otherTok = otherPath[j]\n\n      const matchingTokens =\n        searchTok === otherTok ||\n        otherTok.categoryMatchesMap![searchTok.tokenTypeIdx!] !== undefined\n      if (matchingTokens === false) {\n        continue compareOtherPath\n      }\n    }\n    return true\n  }\n\n  return false\n}\n\nexport function isStrictPrefixOfPath(\n  prefix: TokenType[],\n  other: TokenType[]\n): boolean {\n  return (\n    prefix.length < other.length &&\n    every(prefix, (tokType, idx) => {\n      const otherTokType = other[idx]\n      return (\n        tokType === otherTokType ||\n        otherTokType.categoryMatchesMap![tokType.tokenTypeIdx!]\n      )\n    })\n  )\n}\n\nexport function areTokenCategoriesNotUsed(\n  lookAheadPaths: LookaheadSequence[]\n): boolean {\n  return every(lookAheadPaths, (singleAltPaths) =>\n    every(singleAltPaths, (singlePath) =>\n      every(singlePath, (token) => isEmpty(token.categoryMatches!))\n    )\n  )\n}\n", "import first from \"lodash/first\"\nimport isEmpty from \"lodash/isEmpty\"\nimport drop from \"lodash/drop\"\nimport flatten from \"lodash/flatten\"\nimport filter from \"lodash/filter\"\nimport reject from \"lodash/reject\"\nimport difference from \"lodash/difference\"\nimport map from \"lodash/map\"\nimport forEach from \"lodash/forEach\"\nimport groupBy from \"lodash/groupBy\"\nimport reduce from \"lodash/reduce\"\nimport pickBy from \"lodash/pickBy\"\nimport values from \"lodash/values\"\nimport includes from \"lodash/includes\"\nimport flatMap from \"lodash/flatMap\"\nimport clone from \"lodash/clone\"\nimport {\n  IParserAmbiguousAlternativesDefinitionError,\n  IParserDuplicatesDefinitionError,\n  IParserEmptyAlternativeDefinitionError,\n  ParserDefinitionErrorType\n} from \"../parser/parser\"\nimport { getProductionDslName, isOptionalProd } from \"@chevrotain/gast\"\nimport {\n  Alternative,\n  containsPath,\n  getLookaheadPathsForOptionalProd,\n  getLookaheadPathsForOr,\n  getProdType,\n  isStrictPrefixOfPath\n} from \"./lookahead\"\nimport { nextPossibleTokensAfter } from \"./interpreter\"\nimport {\n  Alternation,\n  Alternative as AlternativeGAST,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Terminal\n} from \"@chevrotain/gast\"\nimport { GAstVisitor } from \"@chevrotain/gast\"\nimport {\n  ILookaheadStrategy,\n  IProduction,\n  IProductionWithOccurrence,\n  TokenType,\n  Rule\n} from \"@chevrotain/types\"\nimport {\n  IGrammarValidatorErrorMessageProvider,\n  IParserDefinitionError\n} from \"./types\"\nimport dropRight from \"lodash/dropRight\"\nimport compact from \"lodash/compact\"\nimport { tokenStructuredMatcher } from \"../../scan/tokens\"\n\nexport function validateLookahead(options: {\n  lookaheadStrategy: ILookaheadStrategy\n  rules: Rule[]\n  tokenTypes: TokenType[]\n  grammarName: string\n}): IParserDefinitionError[] {\n  const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n    rules: options.rules,\n    tokenTypes: options.tokenTypes,\n    grammarName: options.grammarName\n  })\n  return map(lookaheadValidationErrorMessages, (errorMessage) => ({\n    type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION,\n    ...errorMessage\n  }))\n}\n\nexport function validateGrammar(\n  topLevels: Rule[],\n  tokenTypes: TokenType[],\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n  grammarName: string\n): IParserDefinitionError[] {\n  const duplicateErrors: IParserDefinitionError[] = flatMap(\n    topLevels,\n    (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider)\n  )\n\n  const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(\n    topLevels,\n    tokenTypes,\n    errMsgProvider\n  )\n\n  const tooManyAltsErrors = flatMap(topLevels, (curRule) =>\n    validateTooManyAlts(curRule, errMsgProvider)\n  )\n\n  const duplicateRulesError = flatMap(topLevels, (curRule) =>\n    validateRuleDoesNotAlreadyExist(\n      curRule,\n      topLevels,\n      grammarName,\n      errMsgProvider\n    )\n  )\n\n  return duplicateErrors.concat(\n    termsNamespaceConflictErrors,\n    tooManyAltsErrors,\n    duplicateRulesError\n  )\n}\n\nfunction validateDuplicateProductions(\n  topLevelRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserDuplicatesDefinitionError[] {\n  const collectorVisitor = new OccurrenceValidationCollector()\n  topLevelRule.accept(collectorVisitor)\n  const allRuleProductions = collectorVisitor.allProductions\n\n  const productionGroups = groupBy(\n    allRuleProductions,\n    identifyProductionForDuplicates\n  )\n\n  const duplicates: any = pickBy(productionGroups, (currGroup) => {\n    return currGroup.length > 1\n  })\n\n  const errors = map(values(duplicates), (currDuplicates: any) => {\n    const firstProd: any = first(currDuplicates)\n    const msg = errMsgProvider.buildDuplicateFoundError(\n      topLevelRule,\n      currDuplicates\n    )\n    const dslName = getProductionDslName(firstProd)\n    const defError: IParserDuplicatesDefinitionError = {\n      message: msg,\n      type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n      ruleName: topLevelRule.name,\n      dslName: dslName,\n      occurrence: firstProd.idx\n    }\n\n    const param = getExtraProductionArgument(firstProd)\n    if (param) {\n      defError.parameter = param\n    }\n\n    return defError\n  })\n  return errors\n}\n\nexport function identifyProductionForDuplicates(\n  prod: IProductionWithOccurrence\n): string {\n  return `${getProductionDslName(prod)}_#_${\n    prod.idx\n  }_#_${getExtraProductionArgument(prod)}`\n}\n\nfunction getExtraProductionArgument(prod: IProductionWithOccurrence): string {\n  if (prod instanceof Terminal) {\n    return prod.terminalType.name\n  } else if (prod instanceof NonTerminal) {\n    return prod.nonTerminalName\n  } else {\n    return \"\"\n  }\n}\n\nexport class OccurrenceValidationCollector extends GAstVisitor {\n  public allProductions: IProductionWithOccurrence[] = []\n\n  public visitNonTerminal(subrule: NonTerminal): void {\n    this.allProductions.push(subrule)\n  }\n\n  public visitOption(option: Option): void {\n    this.allProductions.push(option)\n  }\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.allProductions.push(manySep)\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.allProductions.push(atLeastOne)\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator\n  ): void {\n    this.allProductions.push(atLeastOneSep)\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.allProductions.push(many)\n  }\n\n  public visitAlternation(or: Alternation): void {\n    this.allProductions.push(or)\n  }\n\n  public visitTerminal(terminal: Terminal): void {\n    this.allProductions.push(terminal)\n  }\n}\n\nexport function validateRuleDoesNotAlreadyExist(\n  rule: Rule,\n  allRules: Rule[],\n  className: string,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserDefinitionError[] {\n  const errors = []\n  const occurrences = reduce(\n    allRules,\n    (result, curRule) => {\n      if (curRule.name === rule.name) {\n        return result + 1\n      }\n      return result\n    },\n    0\n  )\n  if (occurrences > 1) {\n    const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n      topLevelRule: rule,\n      grammarName: className\n    })\n    errors.push({\n      message: errMsg,\n      type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n      ruleName: rule.name\n    })\n  }\n\n  return errors\n}\n\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(\n  ruleName: string,\n  definedRulesNames: string[],\n  className: string\n): IParserDefinitionError[] {\n  const errors = []\n  let errMsg\n\n  if (!includes(definedRulesNames, ruleName)) {\n    errMsg =\n      `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n      `as it is not defined in any of the super grammars `\n    errors.push({\n      message: errMsg,\n      type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n      ruleName: ruleName\n    })\n  }\n\n  return errors\n}\n\nexport function validateNoLeftRecursion(\n  topRule: Rule,\n  currRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n  path: Rule[] = []\n): IParserDefinitionError[] {\n  const errors: IParserDefinitionError[] = []\n  const nextNonTerminals = getFirstNoneTerminal(currRule.definition)\n  if (isEmpty(nextNonTerminals)) {\n    return []\n  } else {\n    const ruleName = topRule.name\n    const foundLeftRecursion = includes(nextNonTerminals, topRule)\n    if (foundLeftRecursion) {\n      errors.push({\n        message: errMsgProvider.buildLeftRecursionError({\n          topLevelRule: topRule,\n          leftRecursionPath: path\n        }),\n        type: ParserDefinitionErrorType.LEFT_RECURSION,\n        ruleName: ruleName\n      })\n    }\n\n    // we are only looking for cyclic paths leading back to the specific topRule\n    // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n    const validNextSteps = difference(nextNonTerminals, path.concat([topRule]))\n    const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n      const newPath = clone(path)\n      newPath.push(currRefRule)\n      return validateNoLeftRecursion(\n        topRule,\n        currRefRule,\n        errMsgProvider,\n        newPath\n      )\n    })\n\n    return errors.concat(errorsFromNextSteps)\n  }\n}\n\nexport function getFirstNoneTerminal(definition: IProduction[]): Rule[] {\n  let result: Rule[] = []\n  if (isEmpty(definition)) {\n    return result\n  }\n  const firstProd = first(definition)\n\n  /* istanbul ignore else */\n  if (firstProd instanceof NonTerminal) {\n    result.push(firstProd.referencedRule)\n  } else if (\n    firstProd instanceof AlternativeGAST ||\n    firstProd instanceof Option ||\n    firstProd instanceof RepetitionMandatory ||\n    firstProd instanceof RepetitionMandatoryWithSeparator ||\n    firstProd instanceof RepetitionWithSeparator ||\n    firstProd instanceof Repetition\n  ) {\n    result = result.concat(\n      getFirstNoneTerminal(<IProduction[]>firstProd.definition)\n    )\n  } else if (firstProd instanceof Alternation) {\n    // each sub definition in alternation is a FLAT\n    result = flatten(\n      map(firstProd.definition, (currSubDef) =>\n        getFirstNoneTerminal((<AlternativeGAST>currSubDef).definition)\n      )\n    )\n  } else if (firstProd instanceof Terminal) {\n    // nothing to see, move along\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n\n  const isFirstOptional = isOptionalProd(firstProd)\n  const hasMore = definition.length > 1\n  if (isFirstOptional && hasMore) {\n    const rest = drop(definition)\n    return result.concat(getFirstNoneTerminal(rest))\n  } else {\n    return result\n  }\n}\n\nclass OrCollector extends GAstVisitor {\n  public alternations: Alternation[] = []\n\n  public visitAlternation(node: Alternation): void {\n    this.alternations.push(node)\n  }\n}\n\nexport function validateEmptyOrAlternative(\n  topLevelRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserEmptyAlternativeDefinitionError[] {\n  const orCollector = new OrCollector()\n  topLevelRule.accept(orCollector)\n  const ors = orCollector.alternations\n\n  const errors = flatMap<Alternation, IParserEmptyAlternativeDefinitionError>(\n    ors,\n    (currOr) => {\n      const exceptLast = dropRight(currOr.definition)\n      return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n        const possibleFirstInAlt = nextPossibleTokensAfter(\n          [currAlternative],\n          [],\n          tokenStructuredMatcher,\n          1\n        )\n        if (isEmpty(possibleFirstInAlt)) {\n          return [\n            {\n              message: errMsgProvider.buildEmptyAlternationError({\n                topLevelRule: topLevelRule,\n                alternation: currOr,\n                emptyChoiceIdx: currAltIdx\n              }),\n              type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n              ruleName: topLevelRule.name,\n              occurrence: currOr.idx,\n              alternative: currAltIdx + 1\n            }\n          ]\n        } else {\n          return []\n        }\n      })\n    }\n  )\n\n  return errors\n}\n\nexport function validateAmbiguousAlternationAlternatives(\n  topLevelRule: Rule,\n  globalMaxLookahead: number,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserAmbiguousAlternativesDefinitionError[] {\n  const orCollector = new OrCollector()\n  topLevelRule.accept(orCollector)\n  let ors = orCollector.alternations\n\n  // New Handling of ignoring ambiguities\n  // - https://github.com/chevrotain/chevrotain/issues/869\n  ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true)\n\n  const errors = flatMap(ors, (currOr: Alternation) => {\n    const currOccurrence = currOr.idx\n    const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead\n    const alternatives = getLookaheadPathsForOr(\n      currOccurrence,\n      topLevelRule,\n      actualMaxLookahead,\n      currOr\n    )\n    const altsAmbiguityErrors = checkAlternativesAmbiguities(\n      alternatives,\n      currOr,\n      topLevelRule,\n      errMsgProvider\n    )\n    const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(\n      alternatives,\n      currOr,\n      topLevelRule,\n      errMsgProvider\n    )\n\n    return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors)\n  })\n\n  return errors\n}\n\nexport class RepetitionCollector extends GAstVisitor {\n  public allProductions: (IProductionWithOccurrence & {\n    maxLookahead?: number\n  })[] = []\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.allProductions.push(manySep)\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.allProductions.push(atLeastOne)\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator\n  ): void {\n    this.allProductions.push(atLeastOneSep)\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.allProductions.push(many)\n  }\n}\n\nexport function validateTooManyAlts(\n  topLevelRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserDefinitionError[] {\n  const orCollector = new OrCollector()\n  topLevelRule.accept(orCollector)\n  const ors = orCollector.alternations\n\n  const errors = flatMap(ors, (currOr) => {\n    if (currOr.definition.length > 255) {\n      return [\n        {\n          message: errMsgProvider.buildTooManyAlternativesError({\n            topLevelRule: topLevelRule,\n            alternation: currOr\n          }),\n          type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n          ruleName: topLevelRule.name,\n          occurrence: currOr.idx\n        }\n      ]\n    } else {\n      return []\n    }\n  })\n\n  return errors\n}\n\nexport function validateSomeNonEmptyLookaheadPath(\n  topLevelRules: Rule[],\n  maxLookahead: number,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserDefinitionError[] {\n  const errors: IParserDefinitionError[] = []\n  forEach(topLevelRules, (currTopRule) => {\n    const collectorVisitor = new RepetitionCollector()\n    currTopRule.accept(collectorVisitor)\n    const allRuleProductions = collectorVisitor.allProductions\n    forEach(allRuleProductions, (currProd) => {\n      const prodType = getProdType(currProd)\n      const actualMaxLookahead = currProd.maxLookahead || maxLookahead\n      const currOccurrence = currProd.idx\n      const paths = getLookaheadPathsForOptionalProd(\n        currOccurrence,\n        currTopRule,\n        prodType,\n        actualMaxLookahead\n      )\n      const pathsInsideProduction = paths[0]\n      if (isEmpty(flatten(pathsInsideProduction))) {\n        const errMsg = errMsgProvider.buildEmptyRepetitionError({\n          topLevelRule: currTopRule,\n          repetition: currProd\n        })\n        errors.push({\n          message: errMsg,\n          type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n          ruleName: currTopRule.name\n        })\n      }\n    })\n  })\n\n  return errors\n}\n\nexport interface IAmbiguityDescriptor {\n  alts: number[]\n  path: TokenType[]\n}\n\nfunction checkAlternativesAmbiguities(\n  alternatives: Alternative[],\n  alternation: Alternation,\n  rule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserAmbiguousAlternativesDefinitionError[] {\n  const foundAmbiguousPaths: Alternative = []\n  const identicalAmbiguities = reduce(\n    alternatives,\n    (result, currAlt, currAltIdx) => {\n      // ignore (skip) ambiguities with this alternative\n      if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n        return result\n      }\n\n      forEach(currAlt, (currPath) => {\n        const altsCurrPathAppearsIn = [currAltIdx]\n        forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n          if (\n            currAltIdx !== currOtherAltIdx &&\n            containsPath(currOtherAlt, currPath) &&\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true\n          ) {\n            altsCurrPathAppearsIn.push(currOtherAltIdx)\n          }\n        })\n\n        if (\n          altsCurrPathAppearsIn.length > 1 &&\n          !containsPath(foundAmbiguousPaths, currPath)\n        ) {\n          foundAmbiguousPaths.push(currPath)\n          result.push({\n            alts: altsCurrPathAppearsIn,\n            path: currPath\n          })\n        }\n      })\n      return result\n    },\n    [] as { alts: number[]; path: TokenType[] }[]\n  )\n\n  const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n    const ambgIndices = map(\n      currAmbDescriptor.alts,\n      (currAltIdx) => currAltIdx + 1\n    )\n\n    const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n      topLevelRule: rule,\n      alternation: alternation,\n      ambiguityIndices: ambgIndices,\n      prefixPath: currAmbDescriptor.path\n    })\n\n    return {\n      message: currMessage,\n      type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n      ruleName: rule.name,\n      occurrence: alternation.idx,\n      alternatives: currAmbDescriptor.alts\n    }\n  })\n\n  return currErrors\n}\n\nexport function checkPrefixAlternativesAmbiguities(\n  alternatives: Alternative[],\n  alternation: Alternation,\n  rule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserAmbiguousAlternativesDefinitionError[] {\n  // flatten\n  const pathsAndIndices = reduce(\n    alternatives,\n    (result, currAlt, idx) => {\n      const currPathsAndIdx = map(currAlt, (currPath) => {\n        return { idx: idx, path: currPath }\n      })\n      return result.concat(currPathsAndIdx)\n    },\n    [] as { idx: number; path: TokenType[] }[]\n  )\n\n  const errors = compact(\n    flatMap(pathsAndIndices, (currPathAndIdx) => {\n      const alternativeGast = alternation.definition[currPathAndIdx.idx]\n      // ignore (skip) ambiguities with this alternative\n      if (alternativeGast.ignoreAmbiguities === true) {\n        return []\n      }\n      const targetIdx = currPathAndIdx.idx\n      const targetPath = currPathAndIdx.path\n\n      const prefixAmbiguitiesPathsAndIndices = filter(\n        pathsAndIndices,\n        (searchPathAndIdx) => {\n          // prefix ambiguity can only be created from lower idx (higher priority) path\n          return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n              true &&\n            searchPathAndIdx.idx < targetIdx &&\n            // checking for strict prefix because identical lookaheads\n            // will be be detected using a different validation.\n            isStrictPrefixOfPath(searchPathAndIdx.path, targetPath)\n          )\n        }\n      )\n\n      const currPathPrefixErrors = map(\n        prefixAmbiguitiesPathsAndIndices,\n        (currAmbPathAndIdx): IParserAmbiguousAlternativesDefinitionError => {\n          const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1]\n          const occurrence = alternation.idx === 0 ? \"\" : alternation.idx\n\n          const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbPathAndIdx.path\n          })\n          return {\n            message: message,\n            type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n            ruleName: rule.name,\n            occurrence: occurrence,\n            alternatives: ambgIndices\n          }\n        }\n      )\n\n      return currPathPrefixErrors\n    })\n  )\n\n  return errors\n}\n\nfunction checkTerminalAndNoneTerminalsNameSpace(\n  topLevels: Rule[],\n  tokenTypes: TokenType[],\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserDefinitionError[] {\n  const errors: IParserDefinitionError[] = []\n\n  const tokenNames = map(tokenTypes, (currToken) => currToken.name)\n\n  forEach(topLevels, (currRule) => {\n    const currRuleName = currRule.name\n    if (includes(tokenNames, currRuleName)) {\n      const errMsg = errMsgProvider.buildNamespaceConflictError(currRule)\n\n      errors.push({\n        message: errMsg,\n        type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n        ruleName: currRuleName\n      })\n    }\n  })\n\n  return errors\n}\n", "import { Rule } from \"@chevrotain/gast\"\nimport forEach from \"lodash/forEach\"\nimport defaults from \"lodash/defaults\"\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver\"\nimport { validateGrammar as orgValidateGrammar } from \"../checks\"\nimport {\n  defaultGrammarResolverErrorProvider,\n  defaultGrammarValidatorErrorProvider\n} from \"../../errors_public\"\nimport { TokenType } from \"@chevrotain/types\"\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IGrammarValidatorErrorMessageProvider,\n  IParserDefinitionError\n} from \"../types\"\n\ntype ResolveGrammarOpts = {\n  rules: Rule[]\n  errMsgProvider?: IGrammarResolverErrorMessageProvider\n}\nexport function resolveGrammar(\n  options: ResolveGrammarOpts\n): IParserDefinitionError[] {\n  const actualOptions: Required<ResolveGrammarOpts> = defaults(options, {\n    errMsgProvider: defaultGrammarResolverErrorProvider\n  })\n\n  const topRulesTable: { [ruleName: string]: Rule } = {}\n  forEach(options.rules, (rule) => {\n    topRulesTable[rule.name] = rule\n  })\n  return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider)\n}\n\nexport function validateGrammar(options: {\n  rules: Rule[]\n  tokenTypes: TokenType[]\n  grammarName: string\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n}): IParserDefinitionError[] {\n  options = defaults(options, {\n    errMsgProvider: defaultGrammarValidatorErrorProvider\n  })\n\n  return orgValidateGrammar(\n    options.rules,\n    options.tokenTypes,\n    options.errMsgProvider,\n    options.grammarName\n  )\n}\n", "import includes from \"lodash/includes\"\nimport {\n  IToken,\n  IRecognitionException,\n  IRecognizerContext\n} from \"@chevrotain/types\"\n\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\"\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\"\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\"\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\"\n\nconst RECOGNITION_EXCEPTION_NAMES = [\n  MISMATCHED_TOKEN_EXCEPTION,\n  NO_VIABLE_ALT_EXCEPTION,\n  EARLY_EXIT_EXCEPTION,\n  NOT_ALL_INPUT_PARSED_EXCEPTION\n]\n\nObject.freeze(RECOGNITION_EXCEPTION_NAMES)\n\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error: Error) {\n  // can't do instanceof on hacked custom js exceptions\n  return includes(RECOGNITION_EXCEPTION_NAMES, error.name)\n}\n\nabstract class RecognitionException\n  extends Error\n  implements IRecognitionException\n{\n  context: IRecognizerContext\n  resyncedTokens: IToken[] = []\n\n  protected constructor(message: string, public token: IToken) {\n    super(message)\n\n    // fix prototype chain when typescript target is ES5\n    Object.setPrototypeOf(this, new.target.prototype)\n\n    /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n  }\n}\n\nexport class MismatchedTokenException extends RecognitionException {\n  constructor(message: string, token: IToken, public previousToken: IToken) {\n    super(message, token)\n    this.name = MISMATCHED_TOKEN_EXCEPTION\n  }\n}\n\nexport class NoViableAltException extends RecognitionException {\n  constructor(message: string, token: IToken, public previousToken: IToken) {\n    super(message, token)\n    this.name = NO_VIABLE_ALT_EXCEPTION\n  }\n}\n\nexport class NotAllInputParsedException extends RecognitionException {\n  constructor(message: string, token: IToken) {\n    super(message, token)\n    this.name = NOT_ALL_INPUT_PARSED_EXCEPTION\n  }\n}\n\nexport class EarlyExitException extends RecognitionException {\n  constructor(message: string, token: IToken, public previousToken: IToken) {\n    super(message, token)\n    this.name = EARLY_EXIT_EXCEPTION\n  }\n}\n", "import {\n  createTokenInstance,\n  EOF,\n  tokenMatcher\n} from \"../../../scan/tokens_public\"\nimport {\n  AbstractNextTerminalAfterProductionWalker,\n  IFirstAfterRepetition\n} from \"../../grammar/interpreter\"\nimport isEmpty from \"lodash/isEmpty\"\nimport dropRight from \"lodash/dropRight\"\nimport flatten from \"lodash/flatten\"\nimport map from \"lodash/map\"\nimport find from \"lodash/find\"\nimport has from \"lodash/has\"\nimport includes from \"lodash/includes\"\nimport clone from \"lodash/clone\"\nimport {\n  IParserConfig,\n  IToken,\n  ITokenGrammarPath,\n  TokenType\n} from \"@chevrotain/types\"\nimport { MismatchedTokenException } from \"../../exceptions_public\"\nimport { IN } from \"../../constants\"\nimport { MixedInParser } from \"./parser_traits\"\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\"\n\nexport const EOF_FOLLOW_KEY: any = {}\n\nexport interface IFollowKey {\n  ruleName: string\n  idxInCallingRule: number\n  inRule: string\n}\n\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\"\n\nexport class InRuleRecoveryException extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = IN_RULE_RECOVERY_EXCEPTION\n  }\n}\n\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n  recoveryEnabled: boolean\n  firstAfterRepMap: Record<string, IFirstAfterRepetition>\n  resyncFollows: Record<string, TokenType[]>\n\n  initRecoverable(config: IParserConfig) {\n    this.firstAfterRepMap = {}\n    this.resyncFollows = {}\n\n    this.recoveryEnabled = has(config, \"recoveryEnabled\")\n      ? (config.recoveryEnabled as boolean) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.recoveryEnabled\n\n    // performance optimization, NOOP will be inlined which\n    // effectively means that this optional feature does not exist\n    // when not used.\n    if (this.recoveryEnabled) {\n      this.attemptInRepetitionRecovery = attemptInRepetitionRecovery\n    }\n  }\n\n  public getTokenToInsert(tokType: TokenType): IToken {\n    const tokToInsert = createTokenInstance(\n      tokType,\n      \"\",\n      NaN,\n      NaN,\n      NaN,\n      NaN,\n      NaN,\n      NaN\n    )\n    tokToInsert.isInsertedInRecovery = true\n    return tokToInsert\n  }\n\n  public canTokenTypeBeInsertedInRecovery(tokType: TokenType): boolean {\n    return true\n  }\n\n  public canTokenTypeBeDeletedInRecovery(tokType: TokenType): boolean {\n    return true\n  }\n\n  tryInRepetitionRecovery(\n    this: MixedInParser,\n    grammarRule: Function,\n    grammarRuleArgs: any[],\n    lookAheadFunc: () => boolean,\n    expectedTokType: TokenType\n  ): void {\n    // TODO: can the resyncTokenType be cached?\n    const reSyncTokType = this.findReSyncTokenType()\n    const savedLexerState = this.exportLexerState()\n    const resyncedTokens: IToken[] = []\n    let passedResyncPoint = false\n\n    const nextTokenWithoutResync = this.LA(1)\n    let currToken = this.LA(1)\n\n    const generateErrorMessage = () => {\n      const previousToken = this.LA(0)\n      // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n      // the error that would have been thrown\n      const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n        expected: expectedTokType,\n        actual: nextTokenWithoutResync,\n        previous: previousToken,\n        ruleName: this.getCurrRuleFullName()\n      })\n      const error = new MismatchedTokenException(\n        msg,\n        nextTokenWithoutResync,\n        this.LA(0)\n      )\n      // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n      error.resyncedTokens = dropRight(resyncedTokens)\n      this.SAVE_ERROR(error)\n    }\n\n    while (!passedResyncPoint) {\n      // re-synced to a point where we can safely exit the repetition/\n      if (this.tokenMatcher(currToken, expectedTokType)) {\n        generateErrorMessage()\n        return // must return here to avoid reverting the inputIdx\n      } else if (lookAheadFunc.call(this)) {\n        // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n        generateErrorMessage()\n        // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n        grammarRule.apply(this, grammarRuleArgs)\n        return // must return here to avoid reverting the inputIdx\n      } else if (this.tokenMatcher(currToken, reSyncTokType)) {\n        passedResyncPoint = true\n      } else {\n        currToken = this.SKIP_TOKEN()\n        this.addToResyncTokens(currToken, resyncedTokens)\n      }\n    }\n\n    // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n    // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n    // \"between rules\" resync recovery later in the flow.\n    this.importLexerState(savedLexerState)\n  }\n\n  shouldInRepetitionRecoveryBeTried(\n    this: MixedInParser,\n    expectTokAfterLastMatch: TokenType,\n    nextTokIdx: number,\n    notStuck: boolean | undefined\n  ): boolean {\n    // Edge case of arriving from a MANY repetition which is stuck\n    // Attempting recovery in this case could cause an infinite loop\n    if (notStuck === false) {\n      return false\n    }\n\n    // no need to recover, next token is what we expect...\n    if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n      return false\n    }\n\n    // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n    // and prefer some backtracking path that includes recovered errors.\n    if (this.isBackTracking()) {\n      return false\n    }\n\n    // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n    // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n    //noinspection RedundantIfStatementJS\n    if (\n      this.canPerformInRuleRecovery(\n        expectTokAfterLastMatch,\n        this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx)\n      )\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  // Error Recovery functionality\n  getFollowsForInRuleRecovery(\n    this: MixedInParser,\n    tokType: TokenType,\n    tokIdxInRule: number\n  ): TokenType[] {\n    const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule)\n    const follows = this.getNextPossibleTokenTypes(grammarPath)\n    return follows\n  }\n\n  tryInRuleRecovery(\n    this: MixedInParser,\n    expectedTokType: TokenType,\n    follows: TokenType[]\n  ): IToken {\n    if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n      const tokToInsert = this.getTokenToInsert(expectedTokType)\n      return tokToInsert\n    }\n\n    if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n      const nextTok = this.SKIP_TOKEN()\n      this.consumeToken()\n      return nextTok\n    }\n\n    throw new InRuleRecoveryException(\"sad sad panda\")\n  }\n\n  canPerformInRuleRecovery(\n    this: MixedInParser,\n    expectedToken: TokenType,\n    follows: TokenType[]\n  ): boolean {\n    return (\n      this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n      this.canRecoverWithSingleTokenDeletion(expectedToken)\n    )\n  }\n\n  canRecoverWithSingleTokenInsertion(\n    this: MixedInParser,\n    expectedTokType: TokenType,\n    follows: TokenType[]\n  ): boolean {\n    if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n      return false\n    }\n\n    // must know the possible following tokens to perform single token insertion\n    if (isEmpty(follows)) {\n      return false\n    }\n\n    const mismatchedTok = this.LA(1)\n    const isMisMatchedTokInFollows =\n      find(follows, (possibleFollowsTokType: TokenType) => {\n        return this.tokenMatcher(mismatchedTok, possibleFollowsTokType)\n      }) !== undefined\n\n    return isMisMatchedTokInFollows\n  }\n\n  canRecoverWithSingleTokenDeletion(\n    this: MixedInParser,\n    expectedTokType: TokenType\n  ): boolean {\n    if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n      return false\n    }\n\n    const isNextTokenWhatIsExpected = this.tokenMatcher(\n      this.LA(2),\n      expectedTokType\n    )\n    return isNextTokenWhatIsExpected\n  }\n\n  isInCurrentRuleReSyncSet(\n    this: MixedInParser,\n    tokenTypeIdx: TokenType\n  ): boolean {\n    const followKey = this.getCurrFollowKey()\n    const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey)\n    return includes(currentRuleReSyncSet, tokenTypeIdx)\n  }\n\n  findReSyncTokenType(this: MixedInParser): TokenType {\n    const allPossibleReSyncTokTypes = this.flattenFollowSet()\n    // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n    let nextToken = this.LA(1)\n    let k = 2\n    while (true) {\n      const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n        const canMatch = tokenMatcher(nextToken, resyncTokType)\n        return canMatch\n      })\n      if (foundMatch !== undefined) {\n        return foundMatch\n      }\n      nextToken = this.LA(k)\n      k++\n    }\n  }\n\n  getCurrFollowKey(this: MixedInParser): IFollowKey {\n    // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n    if (this.RULE_STACK.length === 1) {\n      return EOF_FOLLOW_KEY\n    }\n    const currRuleShortName = this.getLastExplicitRuleShortName()\n    const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex()\n    const prevRuleShortName = this.getPreviousExplicitRuleShortName()\n\n    return {\n      ruleName: this.shortRuleNameToFullName(currRuleShortName),\n      idxInCallingRule: currRuleIdx,\n      inRule: this.shortRuleNameToFullName(prevRuleShortName)\n    }\n  }\n\n  buildFullFollowKeyStack(this: MixedInParser): IFollowKey[] {\n    const explicitRuleStack = this.RULE_STACK\n    const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK\n\n    return map(explicitRuleStack, (ruleName, idx) => {\n      if (idx === 0) {\n        return EOF_FOLLOW_KEY\n      }\n      return {\n        ruleName: this.shortRuleNameToFullName(ruleName),\n        idxInCallingRule: explicitOccurrenceStack[idx],\n        inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1])\n      }\n    })\n  }\n\n  flattenFollowSet(this: MixedInParser): TokenType[] {\n    const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n      return this.getFollowSetFromFollowKey(currKey)\n    })\n    return <any>flatten(followStack)\n  }\n\n  getFollowSetFromFollowKey(\n    this: MixedInParser,\n    followKey: IFollowKey\n  ): TokenType[] {\n    if (followKey === EOF_FOLLOW_KEY) {\n      return [EOF]\n    }\n\n    const followName =\n      followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule\n\n    return this.resyncFollows[followName]\n  }\n\n  // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n  // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n  addToResyncTokens(\n    this: MixedInParser,\n    token: IToken,\n    resyncTokens: IToken[]\n  ): IToken[] {\n    if (!this.tokenMatcher(token, EOF)) {\n      resyncTokens.push(token)\n    }\n    return resyncTokens\n  }\n\n  reSyncTo(this: MixedInParser, tokType: TokenType): IToken[] {\n    const resyncedTokens: IToken[] = []\n    let nextTok = this.LA(1)\n    while (this.tokenMatcher(nextTok, tokType) === false) {\n      nextTok = this.SKIP_TOKEN()\n      this.addToResyncTokens(nextTok, resyncedTokens)\n    }\n    // the last token is not part of the error.\n    return dropRight(resyncedTokens)\n  }\n\n  attemptInRepetitionRecovery(\n    this: MixedInParser,\n    prodFunc: Function,\n    args: any[],\n    lookaheadFunc: () => boolean,\n    dslMethodIdx: number,\n    prodOccurrence: number,\n    nextToksWalker: typeof AbstractNextTerminalAfterProductionWalker,\n    notStuck?: boolean\n  ): void {\n    // by default this is a NO-OP\n    // The actual implementation is with the function(not method) below\n  }\n\n  getCurrentGrammarPath(\n    this: MixedInParser,\n    tokType: TokenType,\n    tokIdxInRule: number\n  ): ITokenGrammarPath {\n    const pathRuleStack: string[] = this.getHumanReadableRuleStack()\n    const pathOccurrenceStack: number[] = clone(this.RULE_OCCURRENCE_STACK)\n    const grammarPath: any = {\n      ruleStack: pathRuleStack,\n      occurrenceStack: pathOccurrenceStack,\n      lastTok: tokType,\n      lastTokOccurrence: tokIdxInRule\n    }\n\n    return grammarPath\n  }\n  getHumanReadableRuleStack(this: MixedInParser): string[] {\n    return map(this.RULE_STACK, (currShortName) =>\n      this.shortRuleNameToFullName(currShortName)\n    )\n  }\n}\n\nexport function attemptInRepetitionRecovery(\n  this: MixedInParser,\n  prodFunc: Function,\n  args: any[],\n  lookaheadFunc: () => boolean,\n  dslMethodIdx: number,\n  prodOccurrence: number,\n  nextToksWalker: typeof AbstractNextTerminalAfterProductionWalker,\n  notStuck?: boolean\n): void {\n  const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence)\n  let firstAfterRepInfo = this.firstAfterRepMap[key]\n  if (firstAfterRepInfo === undefined) {\n    const currRuleName = this.getCurrRuleFullName()\n    const ruleGrammar = this.getGAstProductions()[currRuleName]\n    const walker: AbstractNextTerminalAfterProductionWalker =\n      new nextToksWalker(ruleGrammar, prodOccurrence)\n    firstAfterRepInfo = walker.startWalking()\n    this.firstAfterRepMap[key] = firstAfterRepInfo\n  }\n\n  let expectTokAfterLastMatch = firstAfterRepInfo.token\n  let nextTokIdx = firstAfterRepInfo.occurrence\n  const isEndOfRule = firstAfterRepInfo.isEndOfRule\n\n  // special edge case of a TOP most repetition after which the input should END.\n  // this will force an attempt for inRule recovery in that scenario.\n  if (\n    this.RULE_STACK.length === 1 &&\n    isEndOfRule &&\n    expectTokAfterLastMatch === undefined\n  ) {\n    expectTokAfterLastMatch = EOF\n    nextTokIdx = 1\n  }\n\n  // We don't have anything to re-sync to...\n  // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n  if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n    return\n  }\n\n  if (\n    this.shouldInRepetitionRecoveryBeTried(\n      expectTokAfterLastMatch,\n      nextTokIdx,\n      notStuck\n    )\n  ) {\n    // TODO: performance optimization: instead of passing the original args here, we modify\n    // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n    // to avoid searching the cache for it once more.\n    this.tryInRepetitionRecovery(\n      prodFunc,\n      args,\n      lookaheadFunc,\n      expectTokAfterLastMatch\n    )\n  }\n}\n", "// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\n\nexport const BITS_FOR_METHOD_TYPE = 4\nexport const BITS_FOR_OCCURRENCE_IDX = 8\nexport const BITS_FOR_RULE_IDX = 12\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8\n\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX\n\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(\n  ruleIdx: number,\n  dslMethodIdx: number,\n  occurrence: number\n): number {\n  return occurrence | dslMethodIdx | ruleIdx\n}\n\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX\n", "import {\n  ILookaheadStrategy,\n  ILookaheadValidationError,\n  IOrAlt,\n  Rule,\n  TokenType,\n  OptionalProductionType\n} from \"@chevrotain/types\"\nimport flatMap from \"lodash/flatMap\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public\"\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser\"\nimport {\n  validateAmbiguousAlternationAlternatives,\n  validateEmptyOrAlternative,\n  validateNoLeftRecursion,\n  validateSomeNonEmptyLookaheadPath\n} from \"./checks\"\nimport {\n  buildAlternativesLookAheadFunc,\n  buildLookaheadFuncForOptionalProd,\n  buildLookaheadFuncForOr,\n  buildSingleAlternativeLookaheadFunction,\n  getProdType\n} from \"./lookahead\"\nimport { IParserDefinitionError } from \"./types\"\n\nexport class LLkLookaheadStrategy implements ILookaheadStrategy {\n  readonly maxLookahead: number\n\n  constructor(options?: { maxLookahead?: number }) {\n    this.maxLookahead =\n      options?.maxLookahead ?? DEFAULT_PARSER_CONFIG.maxLookahead\n  }\n\n  validate(options: {\n    rules: Rule[]\n    tokenTypes: TokenType[]\n    grammarName: string\n  }): ILookaheadValidationError[] {\n    const leftRecursionErrors = this.validateNoLeftRecursion(options.rules)\n\n    if (isEmpty(leftRecursionErrors)) {\n      const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules)\n      const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(\n        options.rules,\n        this.maxLookahead\n      )\n      const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(\n        options.rules,\n        this.maxLookahead\n      )\n      const allErrors = [\n        ...leftRecursionErrors,\n        ...emptyAltErrors,\n        ...ambiguousAltsErrors,\n        ...emptyRepetitionErrors\n      ]\n      return allErrors\n    }\n    return leftRecursionErrors\n  }\n\n  validateNoLeftRecursion(rules: Rule[]): IParserDefinitionError[] {\n    return flatMap(rules, (currTopRule) =>\n      validateNoLeftRecursion(\n        currTopRule,\n        currTopRule,\n        defaultGrammarValidatorErrorProvider\n      )\n    )\n  }\n\n  validateEmptyOrAlternatives(rules: Rule[]): IParserDefinitionError[] {\n    return flatMap(rules, (currTopRule) =>\n      validateEmptyOrAlternative(\n        currTopRule,\n        defaultGrammarValidatorErrorProvider\n      )\n    )\n  }\n\n  validateAmbiguousAlternationAlternatives(\n    rules: Rule[],\n    maxLookahead: number\n  ): IParserDefinitionError[] {\n    return flatMap(rules, (currTopRule) =>\n      validateAmbiguousAlternationAlternatives(\n        currTopRule,\n        maxLookahead,\n        defaultGrammarValidatorErrorProvider\n      )\n    )\n  }\n\n  validateSomeNonEmptyLookaheadPath(\n    rules: Rule[],\n    maxLookahead: number\n  ): IParserDefinitionError[] {\n    return validateSomeNonEmptyLookaheadPath(\n      rules,\n      maxLookahead,\n      defaultGrammarValidatorErrorProvider\n    )\n  }\n\n  buildLookaheadForAlternation(options: {\n    prodOccurrence: number\n    rule: Rule\n    maxLookahead: number\n    hasPredicates: boolean\n    dynamicTokensEnabled: boolean\n  }): (orAlts?: IOrAlt<any>[] | undefined) => number | undefined {\n    return buildLookaheadFuncForOr(\n      options.prodOccurrence,\n      options.rule,\n      options.maxLookahead,\n      options.hasPredicates,\n      options.dynamicTokensEnabled,\n      buildAlternativesLookAheadFunc\n    )\n  }\n\n  buildLookaheadForOptional(options: {\n    prodOccurrence: number\n    prodType: OptionalProductionType\n    rule: Rule\n    maxLookahead: number\n    dynamicTokensEnabled: boolean\n  }): () => boolean {\n    return buildLookaheadFuncForOptionalProd(\n      options.prodOccurrence,\n      options.rule,\n      options.maxLookahead,\n      options.dynamicTokensEnabled,\n      getProdType(options.prodType),\n      buildSingleAlternativeLookaheadFunction\n    )\n  }\n}\n", "import forEach from \"lodash/forEach\"\nimport has from \"lodash/has\"\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\"\nimport {\n  ILookaheadStrategy,\n  IParserConfig,\n  OptionalProductionType\n} from \"@chevrotain/types\"\nimport {\n  AT_LEAST_ONE_IDX,\n  AT_LEAST_ONE_SEP_IDX,\n  getKeyForAutomaticLookahead,\n  MANY_IDX,\n  MANY_SEP_IDX,\n  OPTION_IDX,\n  OR_IDX\n} from \"../../grammar/keys\"\nimport { MixedInParser } from \"./parser_traits\"\nimport {\n  Alternation,\n  GAstVisitor,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule\n} from \"@chevrotain/gast\"\nimport { getProductionDslName } from \"@chevrotain/gast\"\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead\"\n\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n  maxLookahead: number\n  lookAheadFuncsCache: any\n  dynamicTokensEnabled: boolean\n  lookaheadStrategy: ILookaheadStrategy\n\n  initLooksAhead(config: IParserConfig) {\n    this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n      ? (config.dynamicTokensEnabled as boolean) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled\n\n    this.maxLookahead = has(config, \"maxLookahead\")\n      ? (config.maxLookahead as number) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.maxLookahead\n\n    this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n      ? (config.lookaheadStrategy as ILookaheadStrategy) // assumes end user provides the correct config value/type\n      : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead })\n\n    this.lookAheadFuncsCache = new Map()\n  }\n\n  preComputeLookaheadFunctions(this: MixedInParser, rules: Rule[]): void {\n    forEach(rules, (currRule) => {\n      this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n        const {\n          alternation,\n          repetition,\n          option,\n          repetitionMandatory,\n          repetitionMandatoryWithSeparator,\n          repetitionWithSeparator\n        } = collectMethods(currRule)\n\n        forEach(alternation, (currProd) => {\n          const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx\n          this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n              prodOccurrence: currProd.idx,\n              rule: currRule,\n              maxLookahead: currProd.maxLookahead || this.maxLookahead,\n              hasPredicates: currProd.hasPredicates,\n              dynamicTokensEnabled: this.dynamicTokensEnabled\n            })\n\n            const key = getKeyForAutomaticLookahead(\n              this.fullRuleNameToShort[currRule.name],\n              OR_IDX,\n              currProd.idx\n            )\n            this.setLaFuncCache(key, laFunc)\n          })\n        })\n\n        forEach(repetition, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            MANY_IDX,\n            \"Repetition\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n\n        forEach(option, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            OPTION_IDX,\n            \"Option\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n\n        forEach(repetitionMandatory, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            AT_LEAST_ONE_IDX,\n            \"RepetitionMandatory\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n\n        forEach(repetitionMandatoryWithSeparator, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            AT_LEAST_ONE_SEP_IDX,\n            \"RepetitionMandatoryWithSeparator\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n\n        forEach(repetitionWithSeparator, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            MANY_SEP_IDX,\n            \"RepetitionWithSeparator\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n      })\n    })\n  }\n\n  computeLookaheadFunc(\n    this: MixedInParser,\n    rule: Rule,\n    prodOccurrence: number,\n    prodKey: number,\n    prodType: OptionalProductionType,\n    prodMaxLookahead: number | undefined,\n    dslMethodName: string\n  ): void {\n    this.TRACE_INIT(\n      `${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`,\n      () => {\n        const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n          prodOccurrence,\n          rule,\n          maxLookahead: prodMaxLookahead || this.maxLookahead,\n          dynamicTokensEnabled: this.dynamicTokensEnabled,\n          prodType\n        })\n        const key = getKeyForAutomaticLookahead(\n          this.fullRuleNameToShort[rule.name],\n          prodKey,\n          prodOccurrence\n        )\n        this.setLaFuncCache(key, laFunc)\n      }\n    )\n  }\n\n  // this actually returns a number, but it is always used as a string (object prop key)\n  getKeyForAutomaticLookahead(\n    this: MixedInParser,\n    dslMethodIdx: number,\n    occurrence: number\n  ): number {\n    const currRuleShortName: any = this.getLastExplicitRuleShortName()\n    return getKeyForAutomaticLookahead(\n      currRuleShortName,\n      dslMethodIdx,\n      occurrence\n    )\n  }\n\n  getLaFuncFromCache(this: MixedInParser, key: number): Function {\n    return this.lookAheadFuncsCache.get(key)\n  }\n\n  /* istanbul ignore next */\n  setLaFuncCache(this: MixedInParser, key: number, value: Function): void {\n    this.lookAheadFuncsCache.set(key, value)\n  }\n}\n\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n  public dslMethods: {\n    option: Option[]\n    alternation: Alternation[]\n    repetition: Repetition[]\n    repetitionWithSeparator: RepetitionWithSeparator[]\n    repetitionMandatory: RepetitionMandatory[]\n    repetitionMandatoryWithSeparator: RepetitionMandatoryWithSeparator[]\n  } = {\n    option: [],\n    alternation: [],\n    repetition: [],\n    repetitionWithSeparator: [],\n    repetitionMandatory: [],\n    repetitionMandatoryWithSeparator: []\n  }\n\n  reset() {\n    this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: []\n    }\n  }\n\n  public visitOption(option: Option): void {\n    this.dslMethods.option.push(option)\n  }\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.dslMethods.repetitionWithSeparator.push(manySep)\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.dslMethods.repetitionMandatory.push(atLeastOne)\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator\n  ): void {\n    this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep)\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.dslMethods.repetition.push(many)\n  }\n\n  public visitAlternation(or: Alternation): void {\n    this.dslMethods.alternation.push(or)\n  }\n}\n\nconst collectorVisitor = new DslMethodsCollectorVisitor()\nexport function collectMethods(rule: Rule): {\n  option: Option[]\n  alternation: Alternation[]\n  repetition: Repetition[]\n  repetitionWithSeparator: RepetitionWithSeparator[]\n  repetitionMandatory: RepetitionMandatory[]\n  repetitionMandatoryWithSeparator: RepetitionMandatoryWithSeparator[]\n} {\n  collectorVisitor.reset()\n  rule.accept(collectorVisitor)\n  const dslMethods = collectorVisitor.dslMethods\n  // avoid uncleaned references\n  collectorVisitor.reset()\n  return <any>dslMethods\n}\n", "import { CstNode, CstNodeLocation, IToken } from \"@chevrotain/types\"\n\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(\n  currNodeLocation: CstNodeLocation,\n  newLocationInfo: Required<Pick<IToken, \"startOffset\" | \"endOffset\">>\n): void {\n  // First (valid) update for this cst node\n  if (isNaN(currNodeLocation.startOffset) === true) {\n    // assumption1: Token location information is either NaN or a valid number\n    // assumption2: Token location information is fully valid if it exist\n    // (both start/end offsets exist and are numbers).\n    currNodeLocation.startOffset = newLocationInfo.startOffset\n    currNodeLocation.endOffset = newLocationInfo.endOffset\n  }\n  // Once the startOffset has been updated with a valid number it should never receive\n  // any farther updates as the Token vector is sorted.\n  // We still have to check this this condition for every new possible location info\n  // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n  else if (currNodeLocation.endOffset! < newLocationInfo.endOffset === true) {\n    currNodeLocation.endOffset = newLocationInfo.endOffset\n  }\n}\n\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(\n  currNodeLocation: CstNodeLocation,\n  newLocationInfo: CstNodeLocation\n): void {\n  // First (valid) update for this cst node\n  if (isNaN(currNodeLocation.startOffset) === true) {\n    // assumption1: Token location information is either NaN or a valid number\n    // assumption2: Token location information is fully valid if it exist\n    // (all start/end props exist and are numbers).\n    currNodeLocation.startOffset = newLocationInfo.startOffset\n    currNodeLocation.startColumn = newLocationInfo.startColumn\n    currNodeLocation.startLine = newLocationInfo.startLine\n    currNodeLocation.endOffset = newLocationInfo.endOffset\n    currNodeLocation.endColumn = newLocationInfo.endColumn\n    currNodeLocation.endLine = newLocationInfo.endLine\n  }\n  // Once the start props has been updated with a valid number it should never receive\n  // any farther updates as the Token vector is sorted.\n  // We still have to check this this condition for every new possible location info\n  // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n  else if (currNodeLocation.endOffset! < newLocationInfo.endOffset! === true) {\n    currNodeLocation.endOffset = newLocationInfo.endOffset\n    currNodeLocation.endColumn = newLocationInfo.endColumn\n    currNodeLocation.endLine = newLocationInfo.endLine\n  }\n}\n\nexport function addTerminalToCst(\n  node: CstNode,\n  token: IToken,\n  tokenTypeName: string\n): void {\n  if (node.children[tokenTypeName] === undefined) {\n    node.children[tokenTypeName] = [token]\n  } else {\n    node.children[tokenTypeName].push(token)\n  }\n}\n\nexport function addNoneTerminalToCst(\n  node: CstNode,\n  ruleName: string,\n  ruleResult: any\n): void {\n  if (node.children[ruleName] === undefined) {\n    node.children[ruleName] = [ruleResult]\n  } else {\n    node.children[ruleName].push(ruleResult)\n  }\n}\n", "const NAME = \"name\"\n\nexport function defineNameProp(obj: {}, nameValue: string): void {\n  Object.defineProperty(obj, NAME, {\n    enumerable: false,\n    configurable: true,\n    writable: false,\n    value: nameValue\n  })\n}\n", "import isEmpty from \"lodash/isEmpty\"\nimport compact from \"lodash/compact\"\nimport isArray from \"lodash/isArray\"\nimport map from \"lodash/map\"\nimport forEach from \"lodash/forEach\"\nimport filter from \"lodash/filter\"\nimport keys from \"lodash/keys\"\nimport isFunction from \"lodash/isFunction\"\nimport isUndefined from \"lodash/isUndefined\"\nimport { defineNameProp } from \"../../lang/lang_extensions\"\nimport { CstNode, ICstVisitor } from \"@chevrotain/types\"\n\nexport function defaultVisit<IN>(ctx: any, param: IN): void {\n  const childrenNames = keys(ctx)\n  const childrenNamesLength = childrenNames.length\n  for (let i = 0; i < childrenNamesLength; i++) {\n    const currChildName = childrenNames[i]\n    const currChildArray = ctx[currChildName]\n    const currChildArrayLength = currChildArray.length\n    for (let j = 0; j < currChildArrayLength; j++) {\n      const currChild: any = currChildArray[j]\n      // distinction between Tokens Children and CstNode children\n      if (currChild.tokenTypeIdx === undefined) {\n        this[currChild.name](currChild.children, param)\n      }\n    }\n  }\n  // defaultVisit does not support generic out param\n}\n\nexport function createBaseSemanticVisitorConstructor(\n  grammarName: string,\n  ruleNames: string[]\n): {\n  new (...args: any[]): ICstVisitor<any, any>\n} {\n  const derivedConstructor: any = function () {}\n\n  // can be overwritten according to:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n  // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n  defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\")\n\n  const semanticProto = {\n    visit: function (cstNode: CstNode | CstNode[], param: any) {\n      // enables writing more concise visitor methods when CstNode has only a single child\n      if (isArray(cstNode)) {\n        // A CST Node's children dictionary can never have empty arrays as values\n        // If a key is defined there will be at least one element in the corresponding value array.\n        cstNode = cstNode[0]\n      }\n\n      // enables passing optional CstNodes concisely.\n      if (isUndefined(cstNode)) {\n        return undefined\n      }\n\n      return this[cstNode.name](cstNode.children, param)\n    },\n\n    validateVisitor: function () {\n      const semanticDefinitionErrors = validateVisitor(this, ruleNames)\n      if (!isEmpty(semanticDefinitionErrors)) {\n        const errorMessages = map(\n          semanticDefinitionErrors,\n          (currDefError) => currDefError.msg\n        )\n        throw Error(\n          `Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n            `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`\n        )\n      }\n    }\n  }\n\n  derivedConstructor.prototype = semanticProto\n  derivedConstructor.prototype.constructor = derivedConstructor\n\n  derivedConstructor._RULE_NAMES = ruleNames\n\n  return derivedConstructor\n}\n\nexport function createBaseVisitorConstructorWithDefaults(\n  grammarName: string,\n  ruleNames: string[],\n  baseConstructor: Function\n): {\n  new (...args: any[]): ICstVisitor<any, any>\n} {\n  const derivedConstructor: any = function () {}\n\n  // can be overwritten according to:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n  // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n  defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\")\n\n  const withDefaultsProto = Object.create(baseConstructor.prototype)\n  forEach(ruleNames, (ruleName) => {\n    withDefaultsProto[ruleName] = defaultVisit\n  })\n\n  derivedConstructor.prototype = withDefaultsProto\n  derivedConstructor.prototype.constructor = derivedConstructor\n\n  return derivedConstructor\n}\n\nexport enum CstVisitorDefinitionError {\n  REDUNDANT_METHOD,\n  MISSING_METHOD\n}\n\nexport interface IVisitorDefinitionError {\n  msg: string\n  type: CstVisitorDefinitionError\n  methodName: string\n}\n\nexport function validateVisitor(\n  visitorInstance: ICstVisitor<unknown, unknown>,\n  ruleNames: string[]\n): IVisitorDefinitionError[] {\n  const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames)\n\n  return missingErrors\n}\n\nexport function validateMissingCstMethods(\n  visitorInstance: ICstVisitor<unknown, unknown>,\n  ruleNames: string[]\n): IVisitorDefinitionError[] {\n  const missingRuleNames = filter(ruleNames, (currRuleName) => {\n    return isFunction((visitorInstance as any)[currRuleName]) === false\n  })\n\n  const errors: IVisitorDefinitionError[] = map(\n    missingRuleNames,\n    (currRuleName) => {\n      return {\n        msg: `Missing visitor method: <${currRuleName}> on ${<any>(\n          visitorInstance.constructor.name\n        )} CST Visitor.`,\n        type: CstVisitorDefinitionError.MISSING_METHOD,\n        methodName: currRuleName\n      }\n    }\n  )\n\n  return compact<IVisitorDefinitionError>(errors)\n}\n", "import {\n  addNoneTerminalToCst,\n  addTerminalToCst,\n  setNodeLocationFull,\n  setNodeLocationOnlyOffset\n} from \"../../cst/cst\"\nimport noop from \"lodash/noop\"\nimport has from \"lodash/has\"\nimport keys from \"lodash/keys\"\nimport isUndefined from \"lodash/isUndefined\"\nimport {\n  createBaseSemanticVisitorConstructor,\n  createBaseVisitorConstructorWithDefaults\n} from \"../../cst/cst_visitor\"\nimport {\n  CstNode,\n  CstNodeLocation,\n  ICstVisitor,\n  IParserConfig,\n  IToken,\n  nodeLocationTrackingOptions\n} from \"@chevrotain/types\"\nimport { MixedInParser } from \"./parser_traits\"\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\"\n\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n  outputCst: boolean\n  CST_STACK: CstNode[]\n  baseCstVisitorConstructor: Function\n  baseCstVisitorWithDefaultsConstructor: Function\n\n  // dynamically assigned Methods\n  setNodeLocationFromNode: (\n    nodeLocation: CstNodeLocation,\n    locationInformation: CstNodeLocation\n  ) => void\n  setNodeLocationFromToken: (\n    nodeLocation: CstNodeLocation,\n    locationInformation: CstNodeLocation\n  ) => void\n  cstPostRule: (this: MixedInParser, ruleCstNode: CstNode) => void\n\n  setInitialNodeLocation: (cstNode: CstNode) => void\n  nodeLocationTracking: nodeLocationTrackingOptions\n\n  initTreeBuilder(this: MixedInParser, config: IParserConfig) {\n    this.CST_STACK = []\n\n    // outputCst is no longer exposed/defined in the pubic API\n    this.outputCst = (config as any).outputCst\n\n    this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n      ? (config.nodeLocationTracking as nodeLocationTrackingOptions) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.nodeLocationTracking\n\n    if (!this.outputCst) {\n      this.cstInvocationStateUpdate = noop\n      this.cstFinallyStateUpdate = noop\n      this.cstPostTerminal = noop\n      this.cstPostNonTerminal = noop\n      this.cstPostRule = noop\n    } else {\n      if (/full/i.test(this.nodeLocationTracking)) {\n        if (this.recoveryEnabled) {\n          this.setNodeLocationFromToken = setNodeLocationFull\n          this.setNodeLocationFromNode = setNodeLocationFull\n          this.cstPostRule = noop\n          this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery\n        } else {\n          this.setNodeLocationFromToken = noop\n          this.setNodeLocationFromNode = noop\n          this.cstPostRule = this.cstPostRuleFull\n          this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular\n        }\n      } else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n        if (this.recoveryEnabled) {\n          this.setNodeLocationFromToken = <any>setNodeLocationOnlyOffset\n          this.setNodeLocationFromNode = <any>setNodeLocationOnlyOffset\n          this.cstPostRule = noop\n          this.setInitialNodeLocation =\n            this.setInitialNodeLocationOnlyOffsetRecovery\n        } else {\n          this.setNodeLocationFromToken = noop\n          this.setNodeLocationFromNode = noop\n          this.cstPostRule = this.cstPostRuleOnlyOffset\n          this.setInitialNodeLocation =\n            this.setInitialNodeLocationOnlyOffsetRegular\n        }\n      } else if (/none/i.test(this.nodeLocationTracking)) {\n        this.setNodeLocationFromToken = noop\n        this.setNodeLocationFromNode = noop\n        this.cstPostRule = noop\n        this.setInitialNodeLocation = noop\n      } else {\n        throw Error(\n          `Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`\n        )\n      }\n    }\n  }\n\n  setInitialNodeLocationOnlyOffsetRecovery(\n    this: MixedInParser,\n    cstNode: any\n  ): void {\n    cstNode.location = {\n      startOffset: NaN,\n      endOffset: NaN\n    }\n  }\n\n  setInitialNodeLocationOnlyOffsetRegular(\n    this: MixedInParser,\n    cstNode: any\n  ): void {\n    cstNode.location = {\n      // without error recovery the starting Location of a new CstNode is guaranteed\n      // To be the next Token's startOffset (for valid inputs).\n      // For invalid inputs there won't be any CSTOutput so this potential\n      // inaccuracy does not matter\n      startOffset: this.LA(1).startOffset,\n      endOffset: NaN\n    }\n  }\n\n  setInitialNodeLocationFullRecovery(this: MixedInParser, cstNode: any): void {\n    cstNode.location = {\n      startOffset: NaN,\n      startLine: NaN,\n      startColumn: NaN,\n      endOffset: NaN,\n      endLine: NaN,\n      endColumn: NaN\n    }\n  }\n\n  /**\n     *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n\n     * @param cstNode\n     */\n  setInitialNodeLocationFullRegular(this: MixedInParser, cstNode: any): void {\n    const nextToken = this.LA(1)\n    cstNode.location = {\n      startOffset: nextToken.startOffset,\n      startLine: nextToken.startLine,\n      startColumn: nextToken.startColumn,\n      endOffset: NaN,\n      endLine: NaN,\n      endColumn: NaN\n    }\n  }\n\n  cstInvocationStateUpdate(this: MixedInParser, fullRuleName: string): void {\n    const cstNode: CstNode = {\n      name: fullRuleName,\n      children: Object.create(null)\n    }\n\n    this.setInitialNodeLocation(cstNode)\n    this.CST_STACK.push(cstNode)\n  }\n\n  cstFinallyStateUpdate(this: MixedInParser): void {\n    this.CST_STACK.pop()\n  }\n\n  cstPostRuleFull(this: MixedInParser, ruleCstNode: CstNode): void {\n    // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n    const prevToken = this.LA(0) as Required<CstNodeLocation>\n    const loc = ruleCstNode.location as Required<CstNodeLocation>\n\n    // If this condition is true it means we consumed at least one Token\n    // In this CstNode.\n    if (loc.startOffset <= prevToken.startOffset === true) {\n      loc.endOffset = prevToken.endOffset\n      loc.endLine = prevToken.endLine\n      loc.endColumn = prevToken.endColumn\n    }\n    // \"empty\" CstNode edge case\n    else {\n      loc.startOffset = NaN\n      loc.startLine = NaN\n      loc.startColumn = NaN\n    }\n  }\n\n  cstPostRuleOnlyOffset(this: MixedInParser, ruleCstNode: CstNode): void {\n    const prevToken = this.LA(0)\n    // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n    const loc = ruleCstNode.location!\n\n    // If this condition is true it means we consumed at least one Token\n    // In this CstNode.\n    if (loc.startOffset <= prevToken.startOffset === true) {\n      loc.endOffset = prevToken.endOffset\n    }\n    // \"empty\" CstNode edge case\n    else {\n      loc.startOffset = NaN\n    }\n  }\n\n  cstPostTerminal(\n    this: MixedInParser,\n    key: string,\n    consumedToken: IToken\n  ): void {\n    const rootCst = this.CST_STACK[this.CST_STACK.length - 1]\n    addTerminalToCst(rootCst, consumedToken, key)\n    // This is only used when **both** error recovery and CST Output are enabled.\n    this.setNodeLocationFromToken(rootCst.location!, <any>consumedToken)\n  }\n\n  cstPostNonTerminal(\n    this: MixedInParser,\n    ruleCstResult: CstNode,\n    ruleName: string\n  ): void {\n    const preCstNode = this.CST_STACK[this.CST_STACK.length - 1]\n    addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult)\n    // This is only used when **both** error recovery and CST Output are enabled.\n    this.setNodeLocationFromNode(preCstNode.location!, ruleCstResult.location!)\n  }\n\n  getBaseCstVisitorConstructor<IN = any, OUT = any>(\n    this: MixedInParser\n  ): {\n    new (...args: any[]): ICstVisitor<IN, OUT>\n  } {\n    if (isUndefined(this.baseCstVisitorConstructor)) {\n      const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(\n        this.className,\n        keys(this.gastProductionsCache)\n      )\n      this.baseCstVisitorConstructor = newBaseCstVisitorConstructor\n      return newBaseCstVisitorConstructor\n    }\n\n    return <any>this.baseCstVisitorConstructor\n  }\n\n  getBaseCstVisitorConstructorWithDefaults<IN = any, OUT = any>(\n    this: MixedInParser\n  ): {\n    new (...args: any[]): ICstVisitor<IN, OUT>\n  } {\n    if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n      const newConstructor = createBaseVisitorConstructorWithDefaults(\n        this.className,\n        keys(this.gastProductionsCache),\n        this.getBaseCstVisitorConstructor()\n      )\n      this.baseCstVisitorWithDefaultsConstructor = newConstructor\n      return newConstructor\n    }\n\n    return <any>this.baseCstVisitorWithDefaultsConstructor\n  }\n\n  getLastExplicitRuleShortName(this: MixedInParser): number {\n    const ruleStack = this.RULE_STACK\n    return ruleStack[ruleStack.length - 1]\n  }\n\n  getPreviousExplicitRuleShortName(this: MixedInParser): number {\n    const ruleStack = this.RULE_STACK\n    return ruleStack[ruleStack.length - 2]\n  }\n\n  getLastExplicitRuleOccurrenceIndex(this: MixedInParser): number {\n    const occurrenceStack = this.RULE_OCCURRENCE_STACK\n    return occurrenceStack[occurrenceStack.length - 1]\n  }\n}\n", "import { END_OF_FILE } from \"../parser\"\nimport { IToken } from \"@chevrotain/types\"\nimport { MixedInParser } from \"./parser_traits\"\n\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n  tokVector: IToken[]\n  tokVectorLength: number\n  currIdx: number\n\n  initLexerAdapter() {\n    this.tokVector = []\n    this.tokVectorLength = 0\n    this.currIdx = -1\n  }\n\n  set input(newInput: IToken[]) {\n    // @ts-ignore - `this parameter` not supported in setters/getters\n    //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n    if (this.selfAnalysisDone !== true) {\n      throw Error(\n        `Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`\n      )\n    }\n    // @ts-ignore - `this parameter` not supported in setters/getters\n    //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n    this.reset()\n    this.tokVector = newInput\n    this.tokVectorLength = newInput.length\n  }\n\n  get input(): IToken[] {\n    return this.tokVector\n  }\n\n  // skips a token and returns the next token\n  SKIP_TOKEN(this: MixedInParser): IToken {\n    if (this.currIdx <= this.tokVector.length - 2) {\n      this.consumeToken()\n      return this.LA(1)\n    } else {\n      return END_OF_FILE\n    }\n  }\n\n  // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n  // or lexers dependent on parser context.\n  LA(this: MixedInParser, howMuch: number): IToken {\n    const soughtIdx = this.currIdx + howMuch\n    if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n      return END_OF_FILE\n    } else {\n      return this.tokVector[soughtIdx]\n    }\n  }\n\n  consumeToken(this: MixedInParser) {\n    this.currIdx++\n  }\n\n  exportLexerState(this: MixedInParser): number {\n    return this.currIdx\n  }\n\n  importLexerState(this: MixedInParser, newState: number) {\n    this.currIdx = newState\n  }\n\n  resetLexerState(this: MixedInParser): void {\n    this.currIdx = -1\n  }\n\n  moveToTerminatedState(this: MixedInParser): void {\n    this.currIdx = this.tokVector.length - 1\n  }\n\n  getLexerPosition(this: MixedInParser): number {\n    return this.exportLexerState()\n  }\n}\n", "import {\n  AtLeastOneSepMethodOpts,\n  ConsumeMethodOpts,\n  DSLMethodOpts,\n  DSLMethodOptsWithErr,\n  GrammarAction,\n  IOrAlt,\n  IRuleConfig,\n  ISerializedGast,\n  IToken,\n  ManySepMethodOpts,\n  OrMethodOpts,\n  SubruleMethodOpts,\n  TokenType\n} from \"@chevrotain/types\"\nimport values from \"lodash/values\"\nimport includes from \"lodash/includes\"\nimport { isRecognitionException } from \"../../exceptions_public\"\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser\"\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public\"\nimport { validateRuleIsOverridden } from \"../../grammar/checks\"\nimport { MixedInParser } from \"./parser_traits\"\nimport { Rule, serializeGrammar } from \"@chevrotain/gast\"\nimport { IParserDefinitionError } from \"../../grammar/types\"\nimport { ParserMethodInternal } from \"../types\"\n\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n  ACTION<T>(this: MixedInParser, impl: () => T): T {\n    return impl.call(this)\n  }\n\n  consume(\n    this: MixedInParser,\n    idx: number,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, idx, options)\n  }\n\n  subrule<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    idx: number,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>\n  ): R {\n    return this.subruleInternal(ruleToCall, idx, options)\n  }\n\n  option<OUT>(\n    this: MixedInParser,\n    idx: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, idx)\n  }\n\n  or(\n    this: MixedInParser,\n    idx: number,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<any>\n  ): any {\n    return this.orInternal(altsOrOpts, idx)\n  }\n\n  many(\n    this: MixedInParser,\n    idx: number,\n    actionORMethodDef: GrammarAction<any> | DSLMethodOpts<any>\n  ): void {\n    return this.manyInternal(idx, actionORMethodDef)\n  }\n\n  atLeastOne(\n    this: MixedInParser,\n    idx: number,\n    actionORMethodDef: GrammarAction<any> | DSLMethodOptsWithErr<any>\n  ): void {\n    return this.atLeastOneInternal(idx, actionORMethodDef)\n  }\n\n  CONSUME(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 0, options)\n  }\n\n  CONSUME1(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 1, options)\n  }\n\n  CONSUME2(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 2, options)\n  }\n\n  CONSUME3(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 3, options)\n  }\n\n  CONSUME4(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 4, options)\n  }\n\n  CONSUME5(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 5, options)\n  }\n\n  CONSUME6(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 6, options)\n  }\n\n  CONSUME7(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 7, options)\n  }\n\n  CONSUME8(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 8, options)\n  }\n\n  CONSUME9(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 9, options)\n  }\n\n  SUBRULE<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>\n  ): R {\n    return this.subruleInternal(ruleToCall, 0, options)\n  }\n\n  SUBRULE1<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>\n  ): R {\n    return this.subruleInternal(ruleToCall, 1, options)\n  }\n\n  SUBRULE2<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>\n  ): R {\n    return this.subruleInternal(ruleToCall, 2, options)\n  }\n\n  SUBRULE3<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>\n  ): R {\n    return this.subruleInternal(ruleToCall, 3, options)\n  }\n\n  SUBRULE4<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>\n  ): R {\n    return this.subruleInternal(ruleToCall, 4, options)\n  }\n\n  SUBRULE5<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>\n  ): R {\n    return this.subruleInternal(ruleToCall, 5, options)\n  }\n\n  SUBRULE6<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>\n  ): R {\n    return this.subruleInternal(ruleToCall, 6, options)\n  }\n\n  SUBRULE7<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>\n  ): R {\n    return this.subruleInternal(ruleToCall, 7, options)\n  }\n\n  SUBRULE8<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>\n  ): R {\n    return this.subruleInternal(ruleToCall, 8, options)\n  }\n\n  SUBRULE9<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>\n  ): R {\n    return this.subruleInternal(ruleToCall, 9, options)\n  }\n\n  OPTION<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 0)\n  }\n\n  OPTION1<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 1)\n  }\n\n  OPTION2<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 2)\n  }\n\n  OPTION3<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 3)\n  }\n\n  OPTION4<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 4)\n  }\n\n  OPTION5<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 5)\n  }\n\n  OPTION6<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 6)\n  }\n\n  OPTION7<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 7)\n  }\n\n  OPTION8<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 8)\n  }\n\n  OPTION9<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 9)\n  }\n\n  OR<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 0)\n  }\n\n  OR1<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 1)\n  }\n\n  OR2<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 2)\n  }\n\n  OR3<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 3)\n  }\n\n  OR4<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 4)\n  }\n\n  OR5<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 5)\n  }\n\n  OR6<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 6)\n  }\n\n  OR7<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 7)\n  }\n\n  OR8<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 8)\n  }\n\n  OR9<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 9)\n  }\n\n  MANY<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(0, actionORMethodDef)\n  }\n\n  MANY1<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(1, actionORMethodDef)\n  }\n\n  MANY2<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(2, actionORMethodDef)\n  }\n\n  MANY3<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(3, actionORMethodDef)\n  }\n\n  MANY4<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(4, actionORMethodDef)\n  }\n\n  MANY5<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(5, actionORMethodDef)\n  }\n\n  MANY6<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(6, actionORMethodDef)\n  }\n\n  MANY7<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(7, actionORMethodDef)\n  }\n\n  MANY8<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(8, actionORMethodDef)\n  }\n\n  MANY9<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(9, actionORMethodDef)\n  }\n\n  MANY_SEP<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(0, options)\n  }\n\n  MANY_SEP1<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(1, options)\n  }\n\n  MANY_SEP2<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(2, options)\n  }\n\n  MANY_SEP3<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(3, options)\n  }\n\n  MANY_SEP4<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(4, options)\n  }\n\n  MANY_SEP5<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(5, options)\n  }\n\n  MANY_SEP6<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(6, options)\n  }\n\n  MANY_SEP7<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(7, options)\n  }\n\n  MANY_SEP8<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(8, options)\n  }\n\n  MANY_SEP9<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(9, options)\n  }\n\n  AT_LEAST_ONE<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(0, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE1<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    return this.atLeastOneInternal(1, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE2<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(2, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE3<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(3, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE4<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(4, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE5<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(5, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE6<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(6, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE7<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(7, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE8<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(8, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE9<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(9, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE_SEP<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(0, options)\n  }\n\n  AT_LEAST_ONE_SEP1<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(1, options)\n  }\n\n  AT_LEAST_ONE_SEP2<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(2, options)\n  }\n\n  AT_LEAST_ONE_SEP3<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(3, options)\n  }\n\n  AT_LEAST_ONE_SEP4<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(4, options)\n  }\n\n  AT_LEAST_ONE_SEP5<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(5, options)\n  }\n\n  AT_LEAST_ONE_SEP6<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(6, options)\n  }\n\n  AT_LEAST_ONE_SEP7<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(7, options)\n  }\n\n  AT_LEAST_ONE_SEP8<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(8, options)\n  }\n\n  AT_LEAST_ONE_SEP9<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(9, options)\n  }\n\n  RULE<T>(\n    this: MixedInParser,\n    name: string,\n    implementation: (...implArgs: any[]) => T,\n    config: IRuleConfig<T> = DEFAULT_RULE_CONFIG\n  ): (idxInCallingRule?: number, ...args: any[]) => T | any {\n    if (includes(this.definedRulesNames, name)) {\n      const errMsg =\n        defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n          topLevelRule: name,\n          grammarName: this.className\n        })\n\n      const error = {\n        message: errMsg,\n        type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n        ruleName: name\n      }\n      this.definitionErrors.push(error)\n    }\n\n    this.definedRulesNames.push(name)\n\n    const ruleImplementation = this.defineRule(name, implementation, config)\n    ;(this as any)[name] = ruleImplementation\n    return ruleImplementation\n  }\n\n  OVERRIDE_RULE<T>(\n    this: MixedInParser,\n    name: string,\n    impl: (...implArgs: any[]) => T,\n    config: IRuleConfig<T> = DEFAULT_RULE_CONFIG\n  ): (idxInCallingRule?: number, ...args: any[]) => T {\n    const ruleErrors: IParserDefinitionError[] = validateRuleIsOverridden(\n      name,\n      this.definedRulesNames,\n      this.className\n    )\n    this.definitionErrors = this.definitionErrors.concat(ruleErrors)\n\n    const ruleImplementation = this.defineRule(name, impl, config)\n    ;(this as any)[name] = ruleImplementation\n    return ruleImplementation\n  }\n\n  BACKTRACK<T>(\n    this: MixedInParser,\n    grammarRule: (...args: any[]) => T,\n    args?: any[]\n  ): () => boolean {\n    return function () {\n      // save org state\n      this.isBackTrackingStack.push(1)\n      const orgState = this.saveRecogState()\n      try {\n        grammarRule.apply(this, args)\n        // if no exception was thrown we have succeed parsing the rule.\n        return true\n      } catch (e) {\n        if (isRecognitionException(e)) {\n          return false\n        } else {\n          throw e\n        }\n      } finally {\n        this.reloadRecogState(orgState)\n        this.isBackTrackingStack.pop()\n      }\n    }\n  }\n\n  // GAST export APIs\n  public getGAstProductions(this: MixedInParser): Record<string, Rule> {\n    return this.gastProductionsCache\n  }\n\n  public getSerializedGastProductions(this: MixedInParser): ISerializedGast[] {\n    return serializeGrammar(values(this.gastProductionsCache))\n  }\n}\n", "import {\n  AtLeastOneSepMethodOpts,\n  ConsumeMethodOpts,\n  DSLMethodOpts,\n  DSLMethodOptsWithErr,\n  GrammarAction,\n  IOrAlt,\n  IParserConfig,\n  IRuleConfig,\n  IToken,\n  ManySepMethodOpts,\n  OrMethodOpts,\n  ParserMethod,\n  SubruleMethodOpts,\n  TokenType,\n  TokenTypeDictionary,\n  TokenVocabulary\n} from \"@chevrotain/types\"\nimport isEmpty from \"lodash/isEmpty\"\nimport isArray from \"lodash/isArray\"\nimport flatten from \"lodash/flatten\"\nimport every from \"lodash/every\"\nimport uniq from \"lodash/uniq\"\nimport isObject from \"lodash/isObject\"\nimport has from \"lodash/has\"\nimport values from \"lodash/values\"\nimport reduce from \"lodash/reduce\"\nimport clone from \"lodash/clone\"\nimport {\n  AT_LEAST_ONE_IDX,\n  AT_LEAST_ONE_SEP_IDX,\n  BITS_FOR_METHOD_TYPE,\n  BITS_FOR_OCCURRENCE_IDX,\n  MANY_IDX,\n  MANY_SEP_IDX,\n  OPTION_IDX,\n  OR_IDX\n} from \"../../grammar/keys\"\nimport {\n  isRecognitionException,\n  MismatchedTokenException,\n  NotAllInputParsedException\n} from \"../../exceptions_public\"\nimport { PROD_TYPE } from \"../../grammar/lookahead\"\nimport {\n  AbstractNextTerminalAfterProductionWalker,\n  NextTerminalAfterAtLeastOneSepWalker,\n  NextTerminalAfterAtLeastOneWalker,\n  NextTerminalAfterManySepWalker,\n  NextTerminalAfterManyWalker\n} from \"../../grammar/interpreter\"\nimport { DEFAULT_RULE_CONFIG, IParserState, TokenMatcher } from \"../parser\"\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable\"\nimport { EOF } from \"../../../scan/tokens_public\"\nimport { MixedInParser } from \"./parser_traits\"\nimport {\n  augmentTokenTypes,\n  isTokenType,\n  tokenStructuredMatcher,\n  tokenStructuredMatcherNoCategories\n} from \"../../../scan/tokens\"\nimport { Rule } from \"@chevrotain/gast\"\nimport { ParserMethodInternal } from \"../types\"\n\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n  isBackTrackingStack: boolean[]\n  className: string\n  RULE_STACK: number[]\n  RULE_OCCURRENCE_STACK: number[]\n  definedRulesNames: string[]\n  tokensMap: { [fqn: string]: TokenType }\n  gastProductionsCache: Record<string, Rule>\n  shortRuleNameToFull: Record<string, string>\n  fullRuleNameToShort: Record<string, number>\n  // The shortName Index must be coded \"after\" the first 8bits to enable building unique lookahead keys\n  ruleShortNameIdx: number\n  tokenMatcher: TokenMatcher\n  subruleIdx: number\n\n  initRecognizerEngine(\n    tokenVocabulary: TokenVocabulary,\n    config: IParserConfig\n  ) {\n    this.className = this.constructor.name\n    // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n    this.shortRuleNameToFull = {}\n    this.fullRuleNameToShort = {}\n    this.ruleShortNameIdx = 256\n    this.tokenMatcher = tokenStructuredMatcherNoCategories\n    this.subruleIdx = 0\n\n    this.definedRulesNames = []\n    this.tokensMap = {}\n    this.isBackTrackingStack = []\n    this.RULE_STACK = []\n    this.RULE_OCCURRENCE_STACK = []\n    this.gastProductionsCache = {}\n\n    if (has(config, \"serializedGrammar\")) {\n      throw Error(\n        \"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n          \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n          \"\\tFor Further details.\"\n      )\n    }\n\n    if (isArray(tokenVocabulary)) {\n      // This only checks for Token vocabularies provided as arrays.\n      // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n      // rather than all edge cases of empty Token vocabularies.\n      if (isEmpty(tokenVocabulary as any[])) {\n        throw Error(\n          \"A Token Vocabulary cannot be empty.\\n\" +\n            \"\\tNote that the first argument for the parser constructor\\n\" +\n            \"\\tis no longer a Token vector (since v4.0).\"\n        )\n      }\n\n      if (typeof (tokenVocabulary as any[])[0].startOffset === \"number\") {\n        throw Error(\n          \"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n            \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n            \"\\tFor Further details.\"\n        )\n      }\n    }\n\n    if (isArray(tokenVocabulary)) {\n      this.tokensMap = reduce(\n        tokenVocabulary,\n        (acc, tokType: TokenType) => {\n          acc[tokType.name] = tokType\n          return acc\n        },\n        {} as { [tokenName: string]: TokenType }\n      )\n    } else if (\n      has(tokenVocabulary, \"modes\") &&\n      every(flatten(values((<any>tokenVocabulary).modes)), isTokenType)\n    ) {\n      const allTokenTypes = flatten(values((<any>tokenVocabulary).modes))\n      const uniqueTokens = uniq(allTokenTypes)\n      this.tokensMap = <any>reduce(\n        uniqueTokens,\n        (acc, tokType: TokenType) => {\n          acc[tokType.name] = tokType\n          return acc\n        },\n        {} as { [tokenName: string]: TokenType }\n      )\n    } else if (isObject(tokenVocabulary)) {\n      this.tokensMap = clone(tokenVocabulary as TokenTypeDictionary)\n    } else {\n      throw new Error(\n        \"<tokensDictionary> argument must be An Array of Token constructors,\" +\n          \" A dictionary of Token constructors or an IMultiModeLexerDefinition\"\n      )\n    }\n\n    // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n    // parsed with a clear error message (\"expecting EOF but found ...\")\n    this.tokensMap[\"EOF\"] = EOF\n\n    const allTokenTypes = has(tokenVocabulary, \"modes\")\n      ? flatten(values((<any>tokenVocabulary).modes))\n      : values(tokenVocabulary)\n    const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) =>\n      isEmpty(tokenConstructor.categoryMatches)\n    )\n\n    this.tokenMatcher = noTokenCategoriesUsed\n      ? tokenStructuredMatcherNoCategories\n      : tokenStructuredMatcher\n\n    // Because ES2015+ syntax should be supported for creating Token classes\n    // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n    // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n    augmentTokenTypes(values(this.tokensMap))\n  }\n\n  defineRule<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleName: string,\n    impl: (...args: ARGS) => R,\n    config: IRuleConfig<R>\n  ): ParserMethodInternal<ARGS, R> {\n    if (this.selfAnalysisDone) {\n      throw Error(\n        `Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n          `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`\n      )\n    }\n    const resyncEnabled: boolean = has(config, \"resyncEnabled\")\n      ? (config.resyncEnabled as boolean) // assumes end user provides the correct config value/type\n      : DEFAULT_RULE_CONFIG.resyncEnabled\n    const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n      ? (config.recoveryValueFunc as () => R) // assumes end user provides the correct config value/type\n      : DEFAULT_RULE_CONFIG.recoveryValueFunc\n\n    // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n    // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n    const shortName =\n      this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX)\n\n    this.ruleShortNameIdx++\n    this.shortRuleNameToFull[shortName] = ruleName\n    this.fullRuleNameToShort[ruleName] = shortName\n\n    let invokeRuleWithTry: ParserMethod<ARGS, R>\n\n    // Micro optimization, only check the condition **once** on rule definition\n    // instead of **every single** rule invocation.\n    if (this.outputCst === true) {\n      invokeRuleWithTry = function invokeRuleWithTry(\n        this: MixedInParser,\n        ...args: ARGS\n      ): R {\n        try {\n          this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx)\n          impl.apply(this, args)\n          const cst = this.CST_STACK[this.CST_STACK.length - 1]\n          this.cstPostRule(cst)\n          return cst as unknown as R\n        } catch (e) {\n          return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc) as R\n        } finally {\n          this.ruleFinallyStateUpdate()\n        }\n      }\n    } else {\n      invokeRuleWithTry = function invokeRuleWithTryCst(\n        this: MixedInParser,\n        ...args: ARGS\n      ): R {\n        try {\n          this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx)\n          return impl.apply(this, args)\n        } catch (e) {\n          return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc) as R\n        } finally {\n          this.ruleFinallyStateUpdate()\n        }\n      }\n    }\n\n    const wrappedGrammarRule: ParserMethodInternal<ARGS, R> = Object.assign(\n      invokeRuleWithTry as any,\n      { ruleName, originalGrammarAction: impl }\n    )\n\n    return wrappedGrammarRule\n  }\n\n  invokeRuleCatch(\n    this: MixedInParser,\n    e: Error,\n    resyncEnabledConfig: boolean,\n    recoveryValueFunc: Function\n  ): unknown {\n    const isFirstInvokedRule = this.RULE_STACK.length === 1\n    // note the reSync is always enabled for the first rule invocation, because we must always be able to\n    // reSync with EOF and just output some INVALID ParseTree\n    // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n    // path is really the most valid one\n    const reSyncEnabled =\n      resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled\n\n    if (isRecognitionException(e)) {\n      const recogError: any = e\n      if (reSyncEnabled) {\n        const reSyncTokType = this.findReSyncTokenType()\n        if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n          recogError.resyncedTokens = this.reSyncTo(reSyncTokType)\n          if (this.outputCst) {\n            const partialCstResult: any =\n              this.CST_STACK[this.CST_STACK.length - 1]\n            partialCstResult.recoveredNode = true\n            return partialCstResult\n          } else {\n            return recoveryValueFunc(e)\n          }\n        } else {\n          if (this.outputCst) {\n            const partialCstResult: any =\n              this.CST_STACK[this.CST_STACK.length - 1]\n            partialCstResult.recoveredNode = true\n            recogError.partialCstResult = partialCstResult\n          }\n          // to be handled Further up the call stack\n          throw recogError\n        }\n      } else if (isFirstInvokedRule) {\n        // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n        this.moveToTerminatedState()\n        // the parser should never throw one of its own errors outside its flow.\n        // even if error recovery is disabled\n        return recoveryValueFunc(e)\n      } else {\n        // to be recovered Further up the call stack\n        throw recogError\n      }\n    } else {\n      // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n      throw e\n    }\n  }\n\n  // Implementation of parsing DSL\n  optionInternal<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    occurrence: number\n  ): OUT | undefined {\n    const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence)\n    return this.optionInternalLogic(actionORMethodDef, occurrence, key)\n  }\n\n  optionInternalLogic<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    occurrence: number,\n    key: number\n  ): OUT | undefined {\n    let lookAheadFunc = this.getLaFuncFromCache(key)\n    let action: GrammarAction<OUT>\n    if (typeof actionORMethodDef !== \"function\") {\n      action = actionORMethodDef.DEF\n      const predicate = actionORMethodDef.GATE\n      // predicate present\n      if (predicate !== undefined) {\n        const orgLookaheadFunction = lookAheadFunc\n        lookAheadFunc = () => {\n          return predicate.call(this) && orgLookaheadFunction.call(this)\n        }\n      }\n    } else {\n      action = actionORMethodDef\n    }\n\n    if (lookAheadFunc.call(this) === true) {\n      return action.call(this)\n    }\n    return undefined\n  }\n\n  atLeastOneInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    const laKey = this.getKeyForAutomaticLookahead(\n      AT_LEAST_ONE_IDX,\n      prodOccurrence\n    )\n    return this.atLeastOneInternalLogic(\n      prodOccurrence,\n      actionORMethodDef,\n      laKey\n    )\n  }\n\n  atLeastOneInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n    key: number\n  ): void {\n    let lookAheadFunc = this.getLaFuncFromCache(key)\n    let action\n    if (typeof actionORMethodDef !== \"function\") {\n      action = actionORMethodDef.DEF\n      const predicate = actionORMethodDef.GATE\n      // predicate present\n      if (predicate !== undefined) {\n        const orgLookaheadFunction = lookAheadFunc\n        lookAheadFunc = () => {\n          return predicate.call(this) && orgLookaheadFunction.call(this)\n        }\n      }\n    } else {\n      action = actionORMethodDef\n    }\n\n    if ((<Function>lookAheadFunc).call(this) === true) {\n      let notStuck = this.doSingleRepetition(action)\n      while (\n        (<Function>lookAheadFunc).call(this) === true &&\n        notStuck === true\n      ) {\n        notStuck = this.doSingleRepetition(action)\n      }\n    } else {\n      throw this.raiseEarlyExitException(\n        prodOccurrence,\n        PROD_TYPE.REPETITION_MANDATORY,\n        (<DSLMethodOptsWithErr<OUT>>actionORMethodDef).ERR_MSG\n      )\n    }\n\n    // note that while it may seem that this can cause an error because by using a recursive call to\n    // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n    // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    this.attemptInRepetitionRecovery(\n      this.atLeastOneInternal,\n      [prodOccurrence, actionORMethodDef],\n      <any>lookAheadFunc,\n      AT_LEAST_ONE_IDX,\n      prodOccurrence,\n      NextTerminalAfterAtLeastOneWalker\n    )\n  }\n\n  atLeastOneSepFirstInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    const laKey = this.getKeyForAutomaticLookahead(\n      AT_LEAST_ONE_SEP_IDX,\n      prodOccurrence\n    )\n    this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey)\n  }\n\n  atLeastOneSepFirstInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: AtLeastOneSepMethodOpts<OUT>,\n    key: number\n  ): void {\n    const action = options.DEF\n    const separator = options.SEP\n\n    const firstIterationLookaheadFunc = this.getLaFuncFromCache(key)\n\n    // 1st iteration\n    if (firstIterationLookaheadFunc.call(this) === true) {\n      ;(<GrammarAction<OUT>>action).call(this)\n\n      //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n      //  because it is only needed in error recovery scenarios.\n      const separatorLookAheadFunc = () => {\n        return this.tokenMatcher(this.LA(1), separator)\n      }\n\n      // 2nd..nth iterations\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator)\n        // No need for checking infinite loop here due to consuming the separator.\n        ;(<GrammarAction<OUT>>action).call(this)\n      }\n\n      // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n      this.attemptInRepetitionRecovery(\n        this.repetitionSepSecondInternal,\n        [\n          prodOccurrence,\n          separator,\n          separatorLookAheadFunc,\n          action,\n          NextTerminalAfterAtLeastOneSepWalker\n        ],\n        separatorLookAheadFunc,\n        AT_LEAST_ONE_SEP_IDX,\n        prodOccurrence,\n        NextTerminalAfterAtLeastOneSepWalker\n      )\n    } else {\n      throw this.raiseEarlyExitException(\n        prodOccurrence,\n        PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,\n        options.ERR_MSG\n      )\n    }\n  }\n\n  manyInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence)\n    return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey)\n  }\n\n  manyInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    key: number\n  ) {\n    let lookaheadFunction = this.getLaFuncFromCache(key)\n    let action\n    if (typeof actionORMethodDef !== \"function\") {\n      action = actionORMethodDef.DEF\n      const predicate = actionORMethodDef.GATE\n      // predicate present\n      if (predicate !== undefined) {\n        const orgLookaheadFunction = lookaheadFunction\n        lookaheadFunction = () => {\n          return predicate.call(this) && orgLookaheadFunction.call(this)\n        }\n      }\n    } else {\n      action = actionORMethodDef\n    }\n\n    let notStuck = true\n    while (lookaheadFunction.call(this) === true && notStuck === true) {\n      notStuck = this.doSingleRepetition(action)\n    }\n\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    this.attemptInRepetitionRecovery(\n      this.manyInternal,\n      [prodOccurrence, actionORMethodDef],\n      <any>lookaheadFunction,\n      MANY_IDX,\n      prodOccurrence,\n      NextTerminalAfterManyWalker,\n      // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n      // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n      // An infinite loop cannot occur as:\n      // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n      // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n      notStuck\n    )\n  }\n\n  manySepFirstInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: ManySepMethodOpts<OUT>\n  ): void {\n    const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence)\n    this.manySepFirstInternalLogic(prodOccurrence, options, laKey)\n  }\n\n  manySepFirstInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: ManySepMethodOpts<OUT>,\n    key: number\n  ): void {\n    const action = options.DEF\n    const separator = options.SEP\n    const firstIterationLaFunc = this.getLaFuncFromCache(key)\n\n    // 1st iteration\n    if (firstIterationLaFunc.call(this) === true) {\n      action.call(this)\n\n      const separatorLookAheadFunc = () => {\n        return this.tokenMatcher(this.LA(1), separator)\n      }\n      // 2nd..nth iterations\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator)\n        // No need for checking infinite loop here due to consuming the separator.\n        action.call(this)\n      }\n\n      // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n      this.attemptInRepetitionRecovery(\n        this.repetitionSepSecondInternal,\n        [\n          prodOccurrence,\n          separator,\n          separatorLookAheadFunc,\n          action,\n          NextTerminalAfterManySepWalker\n        ],\n        separatorLookAheadFunc,\n        MANY_SEP_IDX,\n        prodOccurrence,\n        NextTerminalAfterManySepWalker\n      )\n    }\n  }\n\n  repetitionSepSecondInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    separator: TokenType,\n    separatorLookAheadFunc: () => boolean,\n    action: GrammarAction<OUT>,\n    nextTerminalAfterWalker: typeof AbstractNextTerminalAfterProductionWalker\n  ): void {\n    while (separatorLookAheadFunc()) {\n      // note that this CONSUME will never enter recovery because\n      // the separatorLookAheadFunc checks that the separator really does exist.\n      this.CONSUME(separator)\n      action.call(this)\n    }\n\n    // we can only arrive to this function after an error\n    // has occurred (hence the name 'second') so the following\n    // IF will always be entered, its possible to remove it...\n    // however it is kept to avoid confusion and be consistent.\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    /* istanbul ignore else */\n    this.attemptInRepetitionRecovery(\n      this.repetitionSepSecondInternal,\n      [\n        prodOccurrence,\n        separator,\n        separatorLookAheadFunc,\n        action,\n        nextTerminalAfterWalker\n      ],\n      separatorLookAheadFunc,\n      AT_LEAST_ONE_SEP_IDX,\n      prodOccurrence,\n      nextTerminalAfterWalker\n    )\n  }\n\n  doSingleRepetition(this: MixedInParser, action: Function): any {\n    const beforeIteration = this.getLexerPosition()\n    action.call(this)\n    const afterIteration = this.getLexerPosition()\n\n    // This boolean will indicate if this repetition progressed\n    // or if we are \"stuck\" (potential infinite loop in the repetition).\n    return afterIteration > beforeIteration\n  }\n\n  orInternal<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n    occurrence: number\n  ): T {\n    const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence)\n    const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF\n\n    const laFunc = this.getLaFuncFromCache(laKey)\n    const altIdxToTake = laFunc.call(this, alts)\n    if (altIdxToTake !== undefined) {\n      const chosenAlternative: any = alts[altIdxToTake]\n      return chosenAlternative.ALT.call(this)\n    }\n    this.raiseNoAltException(\n      occurrence,\n      (altsOrOpts as OrMethodOpts<unknown>).ERR_MSG\n    )\n  }\n\n  ruleFinallyStateUpdate(this: MixedInParser): void {\n    this.RULE_STACK.pop()\n    this.RULE_OCCURRENCE_STACK.pop()\n\n    // NOOP when cst is disabled\n    this.cstFinallyStateUpdate()\n\n    if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n      const firstRedundantTok = this.LA(1)\n      const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n        firstRedundant: firstRedundantTok,\n        ruleName: this.getCurrRuleFullName()\n      })\n      this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok))\n    }\n  }\n\n  subruleInternal<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    idx: number,\n    options?: SubruleMethodOpts<ARGS>\n  ): R {\n    let ruleResult\n    try {\n      const args = options !== undefined ? options.ARGS : undefined\n      this.subruleIdx = idx\n      ruleResult = ruleToCall.apply(this, args)\n      this.cstPostNonTerminal(\n        ruleResult,\n        options !== undefined && options.LABEL !== undefined\n          ? options.LABEL\n          : ruleToCall.ruleName\n      )\n      return ruleResult\n    } catch (e) {\n      throw this.subruleInternalError(e, options, ruleToCall.ruleName)\n    }\n  }\n\n  subruleInternalError(\n    this: MixedInParser,\n    e: any,\n    options: SubruleMethodOpts<unknown[]> | undefined,\n    ruleName: string\n  ): void {\n    if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n      this.cstPostNonTerminal(\n        e.partialCstResult,\n        options !== undefined && options.LABEL !== undefined\n          ? options.LABEL\n          : ruleName\n      )\n\n      delete e.partialCstResult\n    }\n    throw e\n  }\n\n  consumeInternal(\n    this: MixedInParser,\n    tokType: TokenType,\n    idx: number,\n    options: ConsumeMethodOpts | undefined\n  ): IToken {\n    let consumedToken!: IToken\n    try {\n      const nextToken = this.LA(1)\n      if (this.tokenMatcher(nextToken, tokType) === true) {\n        this.consumeToken()\n        consumedToken = nextToken\n      } else {\n        this.consumeInternalError(tokType, nextToken, options)\n      }\n    } catch (eFromConsumption) {\n      consumedToken = this.consumeInternalRecovery(\n        tokType,\n        idx,\n        eFromConsumption\n      )\n    }\n\n    this.cstPostTerminal(\n      options !== undefined && options.LABEL !== undefined\n        ? options.LABEL\n        : tokType.name,\n      consumedToken\n    )\n    return consumedToken\n  }\n\n  consumeInternalError(\n    this: MixedInParser,\n    tokType: TokenType,\n    nextToken: IToken,\n    options: ConsumeMethodOpts | undefined\n  ): void {\n    let msg\n    const previousToken = this.LA(0)\n    if (options !== undefined && options.ERR_MSG) {\n      msg = options.ERR_MSG\n    } else {\n      msg = this.errorMessageProvider.buildMismatchTokenMessage({\n        expected: tokType,\n        actual: nextToken,\n        previous: previousToken,\n        ruleName: this.getCurrRuleFullName()\n      })\n    }\n    throw this.SAVE_ERROR(\n      new MismatchedTokenException(msg, nextToken, previousToken)\n    )\n  }\n\n  consumeInternalRecovery(\n    this: MixedInParser,\n    tokType: TokenType,\n    idx: number,\n    eFromConsumption: Error\n  ): IToken {\n    // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n    // but the original syntax could have been parsed successfully without any backtracking + recovery\n    if (\n      this.recoveryEnabled &&\n      // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n      eFromConsumption.name === \"MismatchedTokenException\" &&\n      !this.isBackTracking()\n    ) {\n      const follows = this.getFollowsForInRuleRecovery(<any>tokType, idx)\n      try {\n        return this.tryInRuleRecovery(<any>tokType, follows)\n      } catch (eFromInRuleRecovery) {\n        if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n          // failed in RuleRecovery.\n          // throw the original error in order to trigger reSync error recovery\n          throw eFromConsumption\n        } else {\n          throw eFromInRuleRecovery\n        }\n      }\n    } else {\n      throw eFromConsumption\n    }\n  }\n\n  saveRecogState(this: MixedInParser): IParserState {\n    // errors is a getter which will clone the errors array\n    const savedErrors = this.errors\n    const savedRuleStack = clone(this.RULE_STACK)\n    return {\n      errors: savedErrors,\n      lexerState: this.exportLexerState(),\n      RULE_STACK: savedRuleStack,\n      CST_STACK: this.CST_STACK\n    }\n  }\n\n  reloadRecogState(this: MixedInParser, newState: IParserState) {\n    this.errors = newState.errors\n    this.importLexerState(newState.lexerState)\n    this.RULE_STACK = newState.RULE_STACK\n  }\n\n  ruleInvocationStateUpdate(\n    this: MixedInParser,\n    shortName: number,\n    fullName: string,\n    idxInCallingRule: number\n  ): void {\n    this.RULE_OCCURRENCE_STACK.push(idxInCallingRule)\n    this.RULE_STACK.push(shortName)\n    // NOOP when cst is disabled\n    this.cstInvocationStateUpdate(fullName)\n  }\n\n  isBackTracking(this: MixedInParser): boolean {\n    return this.isBackTrackingStack.length !== 0\n  }\n\n  getCurrRuleFullName(this: MixedInParser): string {\n    const shortName = this.getLastExplicitRuleShortName()\n    return this.shortRuleNameToFull[shortName]\n  }\n\n  shortRuleNameToFullName(this: MixedInParser, shortName: number) {\n    return this.shortRuleNameToFull[shortName]\n  }\n\n  public isAtEndOfInput(this: MixedInParser): boolean {\n    return this.tokenMatcher(this.LA(1), EOF)\n  }\n\n  public reset(this: MixedInParser): void {\n    this.resetLexerState()\n    this.subruleIdx = 0\n    this.isBackTrackingStack = []\n    this.errors = []\n    this.RULE_STACK = []\n    // TODO: extract a specific reset for TreeBuilder trait\n    this.CST_STACK = []\n    this.RULE_OCCURRENCE_STACK = []\n  }\n}\n", "import {\n  IParserConfig,\n  IParserErrorMessageProvider,\n  IRecognitionException\n} from \"@chevrotain/types\"\nimport {\n  EarlyExitException,\n  isRecognitionException,\n  NoViableAltException\n} from \"../../exceptions_public\"\nimport has from \"lodash/has\"\nimport clone from \"lodash/clone\"\nimport {\n  getLookaheadPathsForOptionalProd,\n  getLookaheadPathsForOr,\n  PROD_TYPE\n} from \"../../grammar/lookahead\"\nimport { MixedInParser } from \"./parser_traits\"\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\"\n\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n  _errors: IRecognitionException[]\n  errorMessageProvider: IParserErrorMessageProvider\n\n  initErrorHandler(config: IParserConfig) {\n    this._errors = []\n    this.errorMessageProvider = has(config, \"errorMessageProvider\")\n      ? (config.errorMessageProvider as IParserErrorMessageProvider) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.errorMessageProvider\n  }\n\n  SAVE_ERROR(\n    this: MixedInParser,\n    error: IRecognitionException\n  ): IRecognitionException {\n    if (isRecognitionException(error)) {\n      error.context = {\n        ruleStack: this.getHumanReadableRuleStack(),\n        ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK)\n      }\n      this._errors.push(error)\n      return error\n    } else {\n      throw Error(\"Trying to save an Error which is not a RecognitionException\")\n    }\n  }\n\n  get errors(): IRecognitionException[] {\n    return clone(this._errors)\n  }\n\n  set errors(newErrors: IRecognitionException[]) {\n    this._errors = newErrors\n  }\n\n  // TODO: consider caching the error message computed information\n  raiseEarlyExitException(\n    this: MixedInParser,\n    occurrence: number,\n    prodType: PROD_TYPE,\n    userDefinedErrMsg: string | undefined\n  ): never {\n    const ruleName = this.getCurrRuleFullName()\n    const ruleGrammar = this.getGAstProductions()[ruleName]\n    const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(\n      occurrence,\n      ruleGrammar,\n      prodType,\n      this.maxLookahead\n    )\n    const insideProdPaths = lookAheadPathsPerAlternative[0]\n    const actualTokens = []\n    for (let i = 1; i <= this.maxLookahead; i++) {\n      actualTokens.push(this.LA(i))\n    }\n    const msg = this.errorMessageProvider.buildEarlyExitMessage({\n      expectedIterationPaths: insideProdPaths,\n      actual: actualTokens,\n      previous: this.LA(0),\n      customUserDescription: userDefinedErrMsg,\n      ruleName: ruleName\n    })\n\n    throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)))\n  }\n\n  // TODO: consider caching the error message computed information\n  raiseNoAltException(\n    this: MixedInParser,\n    occurrence: number,\n    errMsgTypes: string | undefined\n  ): never {\n    const ruleName = this.getCurrRuleFullName()\n    const ruleGrammar = this.getGAstProductions()[ruleName]\n    // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n    const lookAheadPathsPerAlternative = getLookaheadPathsForOr(\n      occurrence,\n      ruleGrammar,\n      this.maxLookahead\n    )\n\n    const actualTokens = []\n    for (let i = 1; i <= this.maxLookahead; i++) {\n      actualTokens.push(this.LA(i))\n    }\n    const previousToken = this.LA(0)\n\n    const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n      expectedPathsPerAlt: lookAheadPathsPerAlternative,\n      actual: actualTokens,\n      previous: previousToken,\n      customUserDescription: errMsgTypes,\n      ruleName: this.getCurrRuleFullName()\n    })\n\n    throw this.SAVE_ERROR(\n      new NoViableAltException(errMsg, this.LA(1), previousToken)\n    )\n  }\n}\n", "import {\n  ISyntacticContentAssistPath,\n  IToken,\n  ITokenGrammarPath,\n  TokenType\n} from \"@chevrotain/types\"\nimport {\n  NextAfterTokenWalker,\n  nextPossibleTokensAfter\n} from \"../../grammar/interpreter\"\nimport first from \"lodash/first\"\nimport isUndefined from \"lodash/isUndefined\"\nimport { MixedInParser } from \"./parser_traits\"\n\nexport class ContentAssist {\n  initContentAssist() {}\n\n  public computeContentAssist(\n    this: MixedInParser,\n    startRuleName: string,\n    precedingInput: IToken[]\n  ): ISyntacticContentAssistPath[] {\n    const startRuleGast = this.gastProductionsCache[startRuleName]\n\n    if (isUndefined(startRuleGast)) {\n      throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`)\n    }\n\n    return nextPossibleTokensAfter(\n      [startRuleGast],\n      precedingInput,\n      this.tokenMatcher,\n      this.maxLookahead\n    )\n  }\n\n  // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n  // TODO: should this be more explicitly part of the public API?\n  public getNextPossibleTokenTypes(\n    this: MixedInParser,\n    grammarPath: ITokenGrammarPath\n  ): TokenType[] {\n    const topRuleName = first(grammarPath.ruleStack)!\n    const gastProductions = this.getGAstProductions()\n    const topProduction = gastProductions[topRuleName]\n    const nextPossibleTokenTypes = new NextAfterTokenWalker(\n      topProduction,\n      grammarPath\n    ).startWalking()\n    return nextPossibleTokenTypes\n  }\n}\n", "import {\n  AtLeastOneSepMethodOpts,\n  ConsumeMethodOpts,\n  CstNode,\n  DSLMethodOpts,\n  DSLMethodOptsWithErr,\n  GrammarAction,\n  IOrAlt,\n  IParserConfig,\n  IProduction,\n  IToken,\n  ManySepMethodOpts,\n  OrMethodOpts,\n  SubruleMethodOpts,\n  TokenType\n} from \"@chevrotain/types\"\nimport peek from \"lodash/last\"\nimport isArray from \"lodash/isArray\"\nimport some from \"lodash/some\"\nimport forEach from \"lodash/forEach\"\nimport isFunction from \"lodash/isFunction\"\nimport has from \"lodash/has\"\nimport { MixedInParser } from \"./parser_traits\"\nimport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"@chevrotain/gast\"\nimport { Lexer } from \"../../../scan/lexer_public\"\nimport { augmentTokenTypes, hasShortKeyProperty } from \"../../../scan/tokens\"\nimport { createToken, createTokenInstance } from \"../../../scan/tokens_public\"\nimport { END_OF_FILE } from \"../parser\"\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys\"\nimport { ParserMethodInternal } from \"../types\"\n\ntype ProdWithDef = IProduction & { definition?: IProduction[] }\nconst RECORDING_NULL_OBJECT = {\n  description: \"This Object indicates the Parser is during Recording Phase\"\n}\nObject.freeze(RECORDING_NULL_OBJECT)\n\nconst HANDLE_SEPARATOR = true\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1\n\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA })\naugmentTokenTypes([RFT])\nconst RECORDING_PHASE_TOKEN = createTokenInstance(\n  RFT,\n  \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n  // Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n  // cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1\n)\nObject.freeze(RECORDING_PHASE_TOKEN)\n\nconst RECORDING_PHASE_CSTNODE: CstNode = {\n  name:\n    \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n  children: {}\n}\n\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n  recordingProdStack: ProdWithDef[]\n  RECORDING_PHASE: boolean\n\n  initGastRecorder(this: MixedInParser, config: IParserConfig): void {\n    this.recordingProdStack = []\n    this.RECORDING_PHASE = false\n  }\n\n  enableRecording(this: MixedInParser): void {\n    this.RECORDING_PHASE = true\n\n    this.TRACE_INIT(\"Enable Recording\", () => {\n      /**\n       * Warning Dark Voodoo Magic upcoming!\n       * We are \"replacing\" the public parsing DSL methods API\n       * With **new** alternative implementations on the Parser **instance**\n       *\n       * So far this is the only way I've found to avoid performance regressions during parsing time.\n       * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n       *   implementations directly instead.\n       */\n      for (let i = 0; i < 10; i++) {\n        const idx = i > 0 ? i : \"\"\n        this[`CONSUME${idx}` as \"CONSUME\"] = function (arg1, arg2) {\n          return this.consumeInternalRecord(arg1, i, arg2)\n        }\n        this[`SUBRULE${idx}` as \"SUBRULE\"] = function (arg1, arg2) {\n          return this.subruleInternalRecord(arg1, i, arg2) as any\n        }\n        this[`OPTION${idx}` as \"OPTION\"] = function (arg1) {\n          return this.optionInternalRecord(arg1, i)\n        }\n        this[`OR${idx}` as \"OR\"] = function (arg1) {\n          return this.orInternalRecord(arg1, i)\n        }\n        this[`MANY${idx}` as \"MANY\"] = function (arg1) {\n          this.manyInternalRecord(i, arg1)\n        }\n        this[`MANY_SEP${idx}` as \"MANY_SEP\"] = function (arg1) {\n          this.manySepFirstInternalRecord(i, arg1)\n        }\n        this[`AT_LEAST_ONE${idx}` as \"AT_LEAST_ONE\"] = function (arg1) {\n          this.atLeastOneInternalRecord(i, arg1)\n        }\n        this[`AT_LEAST_ONE_SEP${idx}` as \"AT_LEAST_ONE_SEP\"] = function (arg1) {\n          this.atLeastOneSepFirstInternalRecord(i, arg1)\n        }\n      }\n\n      // DSL methods with the idx(suffix) as an argument\n      this[`consume`] = function (idx, arg1, arg2) {\n        return this.consumeInternalRecord(arg1, idx, arg2)\n      }\n      this[`subrule`] = function (idx, arg1, arg2) {\n        return this.subruleInternalRecord(arg1, idx, arg2) as any\n      }\n      this[`option`] = function (idx, arg1) {\n        return this.optionInternalRecord(arg1, idx)\n      }\n      this[`or`] = function (idx, arg1) {\n        return this.orInternalRecord(arg1, idx)\n      }\n      this[`many`] = function (idx, arg1) {\n        this.manyInternalRecord(idx, arg1)\n      }\n      this[`atLeastOne`] = function (idx, arg1) {\n        this.atLeastOneInternalRecord(idx, arg1)\n      }\n\n      this.ACTION = this.ACTION_RECORD\n      this.BACKTRACK = this.BACKTRACK_RECORD\n      this.LA = this.LA_RECORD\n    })\n  }\n\n  disableRecording(this: MixedInParser) {\n    this.RECORDING_PHASE = false\n    // By deleting these **instance** properties, any future invocation\n    // will be deferred to the original methods on the **prototype** object\n    // This seems to get rid of any incorrect optimizations that V8 may\n    // do during the recording phase.\n    this.TRACE_INIT(\"Deleting Recording methods\", () => {\n      const that: any = this\n\n      for (let i = 0; i < 10; i++) {\n        const idx = i > 0 ? i : \"\"\n        delete that[`CONSUME${idx}`]\n        delete that[`SUBRULE${idx}`]\n        delete that[`OPTION${idx}`]\n        delete that[`OR${idx}`]\n        delete that[`MANY${idx}`]\n        delete that[`MANY_SEP${idx}`]\n        delete that[`AT_LEAST_ONE${idx}`]\n        delete that[`AT_LEAST_ONE_SEP${idx}`]\n      }\n\n      delete that[`consume`]\n      delete that[`subrule`]\n      delete that[`option`]\n      delete that[`or`]\n      delete that[`many`]\n      delete that[`atLeastOne`]\n\n      delete that.ACTION\n      delete that.BACKTRACK\n      delete that.LA\n    })\n  }\n\n  //   Parser methods are called inside an ACTION?\n  //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n  // @ts-expect-error -- noop place holder\n  ACTION_RECORD<T>(this: MixedInParser, impl: () => T): T {\n    // NO-OP during recording\n  }\n\n  // Executing backtracking logic will break our recording logic assumptions\n  BACKTRACK_RECORD<T>(\n    grammarRule: (...args: any[]) => T,\n    args?: any[]\n  ): () => boolean {\n    return () => true\n  }\n\n  // LA is part of the official API and may be used for custom lookahead logic\n  // by end users who may forget to wrap it in ACTION or inside a GATE\n  LA_RECORD(howMuch: number): IToken {\n    // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n    // On LA return EOF at the end of the input so an infinite loop may occur.\n    return END_OF_FILE\n  }\n\n  topLevelRuleRecord(name: string, def: Function): Rule {\n    try {\n      const newTopLevelRule = new Rule({ definition: [], name: name })\n      newTopLevelRule.name = name\n      this.recordingProdStack.push(newTopLevelRule)\n      def.call(this)\n      this.recordingProdStack.pop()\n      return newTopLevelRule\n    } catch (originalError) {\n      if (originalError.KNOWN_RECORDER_ERROR !== true) {\n        try {\n          originalError.message =\n            originalError.message +\n            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\"\n        } catch (mutabilityError) {\n          // We may not be able to modify the original error object\n          throw originalError\n        }\n      }\n      throw originalError\n    }\n  }\n\n  // Implementation of parsing DSL\n  optionInternalRecord<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    occurrence: number\n  ): OUT {\n    return recordProd.call(this, Option, actionORMethodDef, occurrence)\n  }\n\n  atLeastOneInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence)\n  }\n\n  atLeastOneSepFirstInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    recordProd.call(\n      this,\n      RepetitionMandatoryWithSeparator,\n      options,\n      occurrence,\n      HANDLE_SEPARATOR\n    )\n  }\n\n  manyInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    recordProd.call(this, Repetition, actionORMethodDef, occurrence)\n  }\n\n  manySepFirstInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    options: ManySepMethodOpts<OUT>\n  ): void {\n    recordProd.call(\n      this,\n      RepetitionWithSeparator,\n      options,\n      occurrence,\n      HANDLE_SEPARATOR\n    )\n  }\n\n  orInternalRecord<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n    occurrence: number\n  ): T {\n    return recordOrProd.call(this, altsOrOpts, occurrence)\n  }\n\n  subruleInternalRecord<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    occurrence: number,\n    options?: SubruleMethodOpts<ARGS>\n  ): R | CstNode {\n    assertMethodIdxIsValid(occurrence)\n    if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n      const error: any = new Error(\n        `<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n          ` expecting a Parser method reference but got: <${JSON.stringify(\n            ruleToCall\n          )}>` +\n          `\\n inside top level rule: <${\n            (<Rule>this.recordingProdStack[0]).name\n          }>`\n      )\n      error.KNOWN_RECORDER_ERROR = true\n      throw error\n    }\n\n    const prevProd: any = peek(this.recordingProdStack)\n    const ruleName = ruleToCall.ruleName\n    const newNoneTerminal = new NonTerminal({\n      idx: occurrence,\n      nonTerminalName: ruleName,\n      label: options?.LABEL,\n      // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n      referencedRule: undefined\n    })\n    prevProd.definition.push(newNoneTerminal)\n\n    return this.outputCst ? RECORDING_PHASE_CSTNODE : <any>RECORDING_NULL_OBJECT\n  }\n\n  consumeInternalRecord(\n    this: MixedInParser,\n    tokType: TokenType,\n    occurrence: number,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    assertMethodIdxIsValid(occurrence)\n    if (!hasShortKeyProperty(tokType)) {\n      const error: any = new Error(\n        `<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n          ` expecting a TokenType reference but got: <${JSON.stringify(\n            tokType\n          )}>` +\n          `\\n inside top level rule: <${\n            (<Rule>this.recordingProdStack[0]).name\n          }>`\n      )\n      error.KNOWN_RECORDER_ERROR = true\n      throw error\n    }\n    const prevProd: any = peek(this.recordingProdStack)\n    const newNoneTerminal = new Terminal({\n      idx: occurrence,\n      terminalType: tokType,\n      label: options?.LABEL\n    })\n    prevProd.definition.push(newNoneTerminal)\n\n    return RECORDING_PHASE_TOKEN\n  }\n}\n\nfunction recordProd(\n  prodConstructor: any,\n  mainProdArg: any,\n  occurrence: number,\n  handleSep: boolean = false\n): any {\n  assertMethodIdxIsValid(occurrence)\n  const prevProd: any = peek(this.recordingProdStack)\n  const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF\n\n  const newProd = new prodConstructor({ definition: [], idx: occurrence })\n  if (handleSep) {\n    newProd.separator = mainProdArg.SEP\n  }\n  if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD\n  }\n\n  this.recordingProdStack.push(newProd)\n  grammarAction.call(this)\n  prevProd.definition.push(newProd)\n  this.recordingProdStack.pop()\n\n  return RECORDING_NULL_OBJECT\n}\n\nfunction recordOrProd(mainProdArg: any, occurrence: number): any {\n  assertMethodIdxIsValid(occurrence)\n  const prevProd: any = peek(this.recordingProdStack)\n  // Only an array of alternatives\n  const hasOptions = isArray(mainProdArg) === false\n  const alts: IOrAlt<unknown>[] =\n    hasOptions === false ? mainProdArg : mainProdArg.DEF\n\n  const newOrProd = new Alternation({\n    definition: [],\n    idx: occurrence,\n    ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true\n  })\n  if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD\n  }\n\n  const hasPredicates = some(alts, (currAlt: any) => isFunction(currAlt.GATE))\n  newOrProd.hasPredicates = hasPredicates\n\n  prevProd.definition.push(newOrProd)\n\n  forEach(alts, (currAlt) => {\n    const currAltFlat = new Alternative({ definition: [] })\n    newOrProd.definition.push(currAltFlat)\n    if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n      currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES as boolean // assumes end user provides the correct config value/type\n    }\n    // **implicit** ignoreAmbiguities due to usage of gate\n    else if (has(currAlt, \"GATE\")) {\n      currAltFlat.ignoreAmbiguities = true\n    }\n    this.recordingProdStack.push(currAltFlat)\n    currAlt.ALT.call(this)\n    this.recordingProdStack.pop()\n  })\n  return RECORDING_NULL_OBJECT\n}\n\nfunction getIdxSuffix(idx: number): string {\n  return idx === 0 ? \"\" : `${idx}`\n}\n\nfunction assertMethodIdxIsValid(idx: number): void {\n  if (idx < 0 || idx > MAX_METHOD_IDX) {\n    const error: any = new Error(\n      // The stack trace will contain all the needed details\n      `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n        `Idx value must be a none negative value smaller than ${\n          MAX_METHOD_IDX + 1\n        }`\n    )\n    error.KNOWN_RECORDER_ERROR = true\n    throw error\n  }\n}\n", "import { IParserConfig } from \"@chevrotain/types\"\nimport has from \"lodash/has\"\nimport { timer } from \"@chevrotain/utils\"\nimport { MixedInParser } from \"./parser_traits\"\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\"\n\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n  traceInitPerf: boolean | number\n  traceInitMaxIdent: number\n  traceInitIndent: number\n\n  initPerformanceTracer(config: IParserConfig) {\n    if (has(config, \"traceInitPerf\")) {\n      const userTraceInitPerf = config.traceInitPerf\n      const traceIsNumber = typeof userTraceInitPerf === \"number\"\n      this.traceInitMaxIdent = traceIsNumber\n        ? <number>userTraceInitPerf\n        : Infinity\n      this.traceInitPerf = traceIsNumber\n        ? userTraceInitPerf > 0\n        : (userTraceInitPerf as boolean) // assumes end user provides the correct config value/type\n    } else {\n      this.traceInitMaxIdent = 0\n      this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf\n    }\n\n    this.traceInitIndent = -1\n  }\n\n  TRACE_INIT<T>(this: MixedInParser, phaseDesc: string, phaseImpl: () => T): T {\n    // No need to optimize this using NOOP pattern because\n    // It is not called in a hot spot...\n    if (this.traceInitPerf === true) {\n      this.traceInitIndent++\n      const indent = new Array(this.traceInitIndent + 1).join(\"\\t\")\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        console.log(`${indent}--> <${phaseDesc}>`)\n      }\n      const { time, value } = timer(phaseImpl)\n      /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n      const traceMethod = time > 10 ? console.warn : console.log\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`)\n      }\n      this.traceInitIndent--\n      return value\n    } else {\n      return phaseImpl()\n    }\n  }\n}\n", "export function applyMixins(derivedCtor: any, baseCtors: any[]) {\n  baseCtors.forEach((baseCtor) => {\n    const baseProto = baseCtor.prototype\n    Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n      if (propName === \"constructor\") {\n        return\n      }\n\n      const basePropDescriptor = Object.getOwnPropertyDescriptor(\n        baseProto,\n        propName\n      )\n      // Handle Accessors\n      if (\n        basePropDescriptor &&\n        (basePropDescriptor.get || basePropDescriptor.set)\n      ) {\n        Object.defineProperty(\n          derivedCtor.prototype,\n          propName,\n          basePropDescriptor\n        )\n      } else {\n        derivedCtor.prototype[propName] = baseCtor.prototype[propName]\n      }\n    })\n  })\n}\n", "import isEmpty from \"lodash/isEmpty\"\nimport map from \"lodash/map\"\nimport forEach from \"lodash/forEach\"\nimport values from \"lodash/values\"\nimport has from \"lodash/has\"\nimport clone from \"lodash/clone\"\nimport { toFastProperties } from \"@chevrotain/utils\"\nimport { computeAllProdsFollows } from \"../grammar/follow\"\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public\"\nimport {\n  defaultGrammarValidatorErrorProvider,\n  defaultParserErrorProvider\n} from \"../errors_public\"\nimport {\n  resolveGrammar,\n  validateGrammar\n} from \"../grammar/gast/gast_resolver_public\"\nimport {\n  CstNode,\n  IParserConfig,\n  IRecognitionException,\n  IRuleConfig,\n  IToken,\n  TokenType,\n  TokenVocabulary\n} from \"@chevrotain/types\"\nimport { Recoverable } from \"./traits/recoverable\"\nimport { LooksAhead } from \"./traits/looksahead\"\nimport { TreeBuilder } from \"./traits/tree_builder\"\nimport { LexerAdapter } from \"./traits/lexer_adapter\"\nimport { RecognizerApi } from \"./traits/recognizer_api\"\nimport { RecognizerEngine } from \"./traits/recognizer_engine\"\n\nimport { ErrorHandler } from \"./traits/error_handler\"\nimport { MixedInParser } from \"./traits/parser_traits\"\nimport { ContentAssist } from \"./traits/context_assist\"\nimport { GastRecorder } from \"./traits/gast_recorder\"\nimport { PerformanceTracer } from \"./traits/perf_tracer\"\nimport { applyMixins } from \"./utils/apply_mixins\"\nimport { IParserDefinitionError } from \"../grammar/types\"\nimport { Rule } from \"@chevrotain/gast\"\nimport { IParserConfigInternal, ParserMethodInternal } from \"./types\"\nimport { validateLookahead } from \"../grammar/checks\"\n\nexport const END_OF_FILE = createTokenInstance(\n  EOF,\n  \"\",\n  NaN,\n  NaN,\n  NaN,\n  NaN,\n  NaN,\n  NaN\n)\nObject.freeze(END_OF_FILE)\n\nexport type TokenMatcher = (token: IToken, tokType: TokenType) => boolean\n\nexport const DEFAULT_PARSER_CONFIG: Required<\n  Omit<IParserConfigInternal, \"lookaheadStrategy\">\n> = Object.freeze({\n  recoveryEnabled: false,\n  maxLookahead: 3,\n  dynamicTokensEnabled: false,\n  outputCst: true,\n  errorMessageProvider: defaultParserErrorProvider,\n  nodeLocationTracking: \"none\",\n  traceInitPerf: false,\n  skipValidations: false\n})\n\nexport const DEFAULT_RULE_CONFIG: Required<IRuleConfig<any>> = Object.freeze({\n  recoveryValueFunc: () => undefined,\n  resyncEnabled: true\n})\n\nexport enum ParserDefinitionErrorType {\n  INVALID_RULE_NAME = 0,\n  DUPLICATE_RULE_NAME = 1,\n  INVALID_RULE_OVERRIDE = 2,\n  DUPLICATE_PRODUCTIONS = 3,\n  UNRESOLVED_SUBRULE_REF = 4,\n  LEFT_RECURSION = 5,\n  NONE_LAST_EMPTY_ALT = 6,\n  AMBIGUOUS_ALTS = 7,\n  CONFLICT_TOKENS_RULES_NAMESPACE = 8,\n  INVALID_TOKEN_NAME = 9,\n  NO_NON_EMPTY_LOOKAHEAD = 10,\n  AMBIGUOUS_PREFIX_ALTS = 11,\n  TOO_MANY_ALTS = 12,\n  CUSTOM_LOOKAHEAD_VALIDATION = 13\n}\n\nexport interface IParserDuplicatesDefinitionError\n  extends IParserDefinitionError {\n  dslName: string\n  occurrence: number\n  parameter?: string\n}\n\nexport interface IParserEmptyAlternativeDefinitionError\n  extends IParserDefinitionError {\n  occurrence: number\n  alternative: number\n}\n\nexport interface IParserAmbiguousAlternativesDefinitionError\n  extends IParserDefinitionError {\n  occurrence: number | string\n  alternatives: number[]\n}\n\nexport interface IParserUnresolvedRefDefinitionError\n  extends IParserDefinitionError {\n  unresolvedRefName: string\n}\n\nexport interface IParserState {\n  errors: IRecognitionException[]\n  lexerState: any\n  RULE_STACK: number[]\n  CST_STACK: CstNode[]\n}\n\nexport type Predicate = () => boolean\n\nexport function EMPTY_ALT(): () => undefined\nexport function EMPTY_ALT<T>(value: T): () => T\nexport function EMPTY_ALT(value: any = undefined) {\n  return function () {\n    return value\n  }\n}\n\nexport class Parser {\n  // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n  // (normally during the parser's constructor).\n  // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n  // for example: duplicate rule names, referencing an unresolved subrule, ect...\n  // This flag should not be enabled during normal usage, it is used in special situations, for example when\n  // needing to display the parser definition errors in some GUI(online playground).\n  static DEFER_DEFINITION_ERRORS_HANDLING: boolean = false\n\n  /**\n   *  @deprecated use the **instance** method with the same name instead\n   */\n  static performSelfAnalysis(parserInstance: Parser): void {\n    throw Error(\n      \"The **static** `performSelfAnalysis` method has been deprecated.\" +\n        \"\\t\\nUse the **instance** method with the same name instead.\"\n    )\n  }\n\n  public performSelfAnalysis(this: MixedInParser): void {\n    this.TRACE_INIT(\"performSelfAnalysis\", () => {\n      let defErrorsMsgs\n\n      this.selfAnalysisDone = true\n      const className = this.className\n\n      this.TRACE_INIT(\"toFastProps\", () => {\n        // Without this voodoo magic the parser would be x3-x4 slower\n        // It seems it is better to invoke `toFastProperties` **before**\n        // Any manipulations of the `this` object done during the recording phase.\n        toFastProperties(this)\n      })\n\n      this.TRACE_INIT(\"Grammar Recording\", () => {\n        try {\n          this.enableRecording()\n          // Building the GAST\n          forEach(this.definedRulesNames, (currRuleName) => {\n            const wrappedRule = (this as any)[\n              currRuleName\n            ] as ParserMethodInternal<unknown[], unknown>\n            const originalGrammarAction = wrappedRule[\"originalGrammarAction\"]\n            let recordedRuleGast!: Rule\n            this.TRACE_INIT(`${currRuleName} Rule`, () => {\n              recordedRuleGast = this.topLevelRuleRecord(\n                currRuleName,\n                originalGrammarAction\n              )\n            })\n            this.gastProductionsCache[currRuleName] = recordedRuleGast\n          })\n        } finally {\n          this.disableRecording()\n        }\n      })\n\n      let resolverErrors: IParserDefinitionError[] = []\n      this.TRACE_INIT(\"Grammar Resolving\", () => {\n        resolverErrors = resolveGrammar({\n          rules: values(this.gastProductionsCache)\n        })\n        this.definitionErrors = this.definitionErrors.concat(resolverErrors)\n      })\n\n      this.TRACE_INIT(\"Grammar Validations\", () => {\n        // only perform additional grammar validations IFF no resolving errors have occurred.\n        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n        if (isEmpty(resolverErrors) && this.skipValidations === false) {\n          const validationErrors = validateGrammar({\n            rules: values(this.gastProductionsCache),\n            tokenTypes: values(this.tokensMap),\n            errMsgProvider: defaultGrammarValidatorErrorProvider,\n            grammarName: className\n          })\n          const lookaheadValidationErrors = validateLookahead({\n            lookaheadStrategy: this.lookaheadStrategy,\n            rules: values(this.gastProductionsCache),\n            tokenTypes: values(this.tokensMap),\n            grammarName: className\n          })\n          this.definitionErrors = this.definitionErrors.concat(\n            validationErrors,\n            lookaheadValidationErrors\n          )\n        }\n      })\n\n      // this analysis may fail if the grammar is not perfectly valid\n      if (isEmpty(this.definitionErrors)) {\n        // The results of these computations are not needed unless error recovery is enabled.\n        if (this.recoveryEnabled) {\n          this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n            const allFollows = computeAllProdsFollows(\n              values(this.gastProductionsCache)\n            )\n            this.resyncFollows = allFollows\n          })\n        }\n\n        this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n          this.lookaheadStrategy.initialize?.({\n            rules: values(this.gastProductionsCache)\n          })\n          this.preComputeLookaheadFunctions(values(this.gastProductionsCache))\n        })\n      }\n\n      if (\n        !Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n        !isEmpty(this.definitionErrors)\n      ) {\n        defErrorsMsgs = map(\n          this.definitionErrors,\n          (defError) => defError.message\n        )\n        throw new Error(\n          `Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\n            \"\\n-------------------------------\\n\"\n          )}`\n        )\n      }\n    })\n  }\n\n  definitionErrors: IParserDefinitionError[] = []\n  selfAnalysisDone = false\n  protected skipValidations: boolean\n\n  constructor(tokenVocabulary: TokenVocabulary, config: IParserConfig) {\n    const that: MixedInParser = this as any\n    that.initErrorHandler(config)\n    that.initLexerAdapter()\n    that.initLooksAhead(config)\n    that.initRecognizerEngine(tokenVocabulary, config)\n    that.initRecoverable(config)\n    that.initTreeBuilder(config)\n    that.initContentAssist()\n    that.initGastRecorder(config)\n    that.initPerformanceTracer(config)\n\n    if (has(config, \"ignoredIssues\")) {\n      throw new Error(\n        \"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n          \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n          \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n          \"For further details.\"\n      )\n    }\n\n    this.skipValidations = has(config, \"skipValidations\")\n      ? (config.skipValidations as boolean) // casting assumes the end user passing the correct type\n      : DEFAULT_PARSER_CONFIG.skipValidations\n  }\n}\n\napplyMixins(Parser, [\n  Recoverable,\n  LooksAhead,\n  TreeBuilder,\n  LexerAdapter,\n  RecognizerEngine,\n  RecognizerApi,\n  ErrorHandler,\n  ContentAssist,\n  GastRecorder,\n  PerformanceTracer\n])\n\nexport class CstParser extends Parser {\n  constructor(\n    tokenVocabulary: TokenVocabulary,\n    config: IParserConfigInternal = DEFAULT_PARSER_CONFIG\n  ) {\n    const configClone = clone(config)\n    configClone.outputCst = true\n    super(tokenVocabulary, configClone)\n  }\n}\n\nexport class EmbeddedActionsParser extends Parser {\n  constructor(\n    tokenVocabulary: TokenVocabulary,\n    config: IParserConfigInternal = DEFAULT_PARSER_CONFIG\n  ) {\n    const configClone = clone(config)\n    configClone.outputCst = false\n    super(tokenVocabulary, configClone)\n  }\n}\n", "import type {\n  Alternation,\n  Alternative,\n  IProduction,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal,\n  TokenType\n} from \"@chevrotain/types\"\nimport { NonTerminal, GAstVisitor } from \"@chevrotain/gast\"\nimport map from \"lodash/map\"\nimport flatten from \"lodash/flatten\"\nimport values from \"lodash/values\"\nimport some from \"lodash/some\"\nimport groupBy from \"lodash/groupBy\"\nimport assign from \"lodash/assign\"\n\nexport function buildModel(\n  productions: Record<string, Rule>\n): CstNodeTypeDefinition[] {\n  const generator = new CstNodeDefinitionGenerator()\n  const allRules = values(productions)\n  return map(allRules, (rule) => generator.visitRule(rule))\n}\n\nexport type CstNodeTypeDefinition = {\n  name: string\n  properties: PropertyTypeDefinition[]\n}\n\nexport type PropertyTypeDefinition = {\n  name: string\n  type: PropertyArrayType\n  optional: boolean\n}\n\nexport type PropertyArrayType =\n  | TokenArrayType\n  | RuleArrayType\n  | (TokenArrayType | RuleArrayType)[]\n\nexport type TokenArrayType = { kind: \"token\" }\nexport type RuleArrayType = {\n  kind: \"rule\"\n  name: string\n}\n\nclass CstNodeDefinitionGenerator extends GAstVisitor {\n  visitRule(node: Rule): CstNodeTypeDefinition {\n    const rawElements = this.visitEach(node.definition)\n\n    const grouped = groupBy(rawElements, (el) => el.propertyName)\n    const properties = map(grouped, (group, propertyName) => {\n      const allNullable = !some(group, (el) => !el.canBeNull)\n\n      // In an alternation with a label a property name can have\n      // multiple types.\n      let propertyType: PropertyArrayType = group[0].type\n      if (group.length > 1) {\n        propertyType = map(group, (g) => g.type)\n      }\n\n      return {\n        name: propertyName,\n        type: propertyType,\n        optional: allNullable\n      } as PropertyTypeDefinition\n    })\n\n    return {\n      name: node.name,\n      properties: properties\n    }\n  }\n\n  visitAlternative(node: Alternative) {\n    return this.visitEachAndOverrideWith(node.definition, { canBeNull: true })\n  }\n\n  visitOption(node: Option) {\n    return this.visitEachAndOverrideWith(node.definition, { canBeNull: true })\n  }\n\n  visitRepetition(node: Repetition) {\n    return this.visitEachAndOverrideWith(node.definition, { canBeNull: true })\n  }\n\n  visitRepetitionMandatory(node: RepetitionMandatory) {\n    return this.visitEach(node.definition)\n  }\n\n  visitRepetitionMandatoryWithSeparator(\n    node: RepetitionMandatoryWithSeparator\n  ) {\n    return this.visitEach(node.definition).concat({\n      propertyName: node.separator.name,\n      canBeNull: true,\n      type: getType(node.separator)\n    })\n  }\n\n  visitRepetitionWithSeparator(node: RepetitionWithSeparator) {\n    return this.visitEachAndOverrideWith(node.definition, {\n      canBeNull: true\n    }).concat({\n      propertyName: node.separator.name,\n      canBeNull: true,\n      type: getType(node.separator)\n    })\n  }\n\n  visitAlternation(node: Alternation) {\n    return this.visitEachAndOverrideWith(node.definition, { canBeNull: true })\n  }\n\n  visitTerminal(node: Terminal): PropertyTupleElement[] {\n    return [\n      {\n        propertyName: node.label || node.terminalType.name,\n        canBeNull: false,\n        type: getType(node)\n      }\n    ]\n  }\n\n  visitNonTerminal(node: NonTerminal): PropertyTupleElement[] {\n    return [\n      {\n        propertyName: node.label || node.nonTerminalName,\n        canBeNull: false,\n        type: getType(node)\n      }\n    ]\n  }\n\n  private visitEachAndOverrideWith(\n    definition: IProduction[],\n    override: Partial<PropertyTupleElement>\n  ) {\n    return map(\n      this.visitEach(definition),\n      (definition) => assign({}, definition, override) as PropertyTupleElement\n    )\n  }\n\n  private visitEach(definition: IProduction[]) {\n    return flatten<PropertyTupleElement>(\n      map(\n        definition,\n        (definition) => this.visit(definition) as PropertyTupleElement[]\n      )\n    )\n  }\n}\n\ntype PropertyTupleElement = {\n  propertyName: string\n  canBeNull: boolean\n  type: TokenArrayType | RuleArrayType\n}\n\nfunction getType(\n  production: Terminal | NonTerminal | TokenType\n): TokenArrayType | RuleArrayType {\n  if (production instanceof NonTerminal) {\n    return {\n      kind: \"rule\",\n      name: production.referencedRule.name\n    }\n  }\n\n  return { kind: \"token\" }\n}\n", "var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n", "/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n", "var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n", "var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n", "var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n", "import flatten from \"lodash/flatten\"\nimport isArray from \"lodash/isArray\"\nimport map from \"lodash/map\"\nimport reduce from \"lodash/reduce\"\nimport uniq from \"lodash/uniq\"\nimport upperFirst from \"lodash/upperFirst\"\nimport { GenerateDtsOptions } from \"@chevrotain/types\"\nimport {\n  CstNodeTypeDefinition,\n  PropertyTypeDefinition,\n  PropertyArrayType,\n  TokenArrayType,\n  RuleArrayType\n} from \"./model\"\n\nexport function genDts(\n  model: CstNodeTypeDefinition[],\n  options: Required<GenerateDtsOptions>\n): string {\n  let contentParts: string[] = []\n\n  contentParts = contentParts.concat(\n    `import type { CstNode, ICstVisitor, IToken } from \"chevrotain\";`\n  )\n\n  contentParts = contentParts.concat(\n    flatten(map(model, (node) => genCstNodeTypes(node)))\n  )\n\n  if (options.includeVisitorInterface) {\n    contentParts = contentParts.concat(\n      genVisitor(options.visitorInterfaceName, model)\n    )\n  }\n\n  return contentParts.join(\"\\n\\n\") + \"\\n\"\n}\n\nfunction genCstNodeTypes(node: CstNodeTypeDefinition) {\n  const nodeCstInterface = genNodeInterface(node)\n  const nodeChildrenInterface = genNodeChildrenType(node)\n\n  return [nodeCstInterface, nodeChildrenInterface]\n}\n\nfunction genNodeInterface(node: CstNodeTypeDefinition) {\n  const nodeInterfaceName = getNodeInterfaceName(node.name)\n  const childrenTypeName = getNodeChildrenTypeName(node.name)\n\n  return `export interface ${nodeInterfaceName} extends CstNode {\n  name: \"${node.name}\";\n  children: ${childrenTypeName};\n}`\n}\n\nfunction genNodeChildrenType(node: CstNodeTypeDefinition) {\n  const typeName = getNodeChildrenTypeName(node.name)\n\n  return `export type ${typeName} = {\n  ${map(node.properties, (property) => genChildProperty(property)).join(\"\\n  \")}\n};`\n}\n\nfunction genChildProperty(prop: PropertyTypeDefinition) {\n  const typeName = buildTypeString(prop.type)\n  return `${prop.name}${prop.optional ? \"?\" : \"\"}: ${typeName}[];`\n}\n\nfunction genVisitor(name: string, nodes: CstNodeTypeDefinition[]) {\n  return `export interface ${name}<IN, OUT> extends ICstVisitor<IN, OUT> {\n  ${map(nodes, (node) => genVisitorFunction(node)).join(\"\\n  \")}\n}`\n}\n\nfunction genVisitorFunction(node: CstNodeTypeDefinition) {\n  const childrenTypeName = getNodeChildrenTypeName(node.name)\n  return `${node.name}(children: ${childrenTypeName}, param?: IN): OUT;`\n}\n\nfunction buildTypeString(type: PropertyArrayType) {\n  if (isArray(type)) {\n    const typeNames = uniq(map(type, (t) => getTypeString(t)))\n    const typeString = reduce(typeNames, (sum, t) => sum + \" | \" + t)\n    return \"(\" + typeString + \")\"\n  } else {\n    return getTypeString(type)\n  }\n}\n\nfunction getTypeString(type: TokenArrayType | RuleArrayType) {\n  if (type.kind === \"token\") {\n    return \"IToken\"\n  }\n  return getNodeInterfaceName(type.name)\n}\n\nfunction getNodeInterfaceName(ruleName: string) {\n  return upperFirst(ruleName) + \"CstNode\"\n}\n\nfunction getNodeChildrenTypeName(ruleName: string) {\n  return upperFirst(ruleName) + \"CstChildren\"\n}\n", "import { Rule, GenerateDtsOptions } from \"@chevrotain/types\"\nimport { buildModel } from \"./model\"\nimport { genDts } from \"./generate\"\n\nconst defaultOptions: Required<GenerateDtsOptions> = {\n  includeVisitorInterface: true,\n  visitorInterfaceName: \"ICstNodeVisitor\"\n}\n\nexport function generateCstDts(\n  productions: Record<string, Rule>,\n  options?: GenerateDtsOptions\n): string {\n  const effectiveOptions = {\n    ...defaultOptions,\n    ...options\n  }\n\n  const model = buildModel(productions)\n\n  return genDts(model, effectiveOptions)\n}\n", "import { VERSION } from \"../version\"\nimport { ISerializedGast } from \"@chevrotain/types\"\n\nexport function createSyntaxDiagramsCode(\n  grammar: ISerializedGast[],\n  {\n    resourceBase = `https://unpkg.com/chevrotain@${VERSION}/diagrams/`,\n    css = `https://unpkg.com/chevrotain@${VERSION}/diagrams/diagrams.css`\n  }: {\n    resourceBase?: string\n    css?: string\n  } = {}\n) {\n  const header = `\n<!-- This is a generated file -->\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  body {\n    background-color: hsl(30, 20%, 95%)\n  }\n</style>\n\n`\n  const cssHtml = `\n<link rel='stylesheet' href='${css}'>\n`\n\n  const scripts = `\n<script src='${resourceBase}vendor/railroad-diagrams.js'></script>\n<script src='${resourceBase}src/diagrams_builder.js'></script>\n<script src='${resourceBase}src/diagrams_behavior.js'></script>\n<script src='${resourceBase}src/main.js'></script>\n`\n  const diagramsDiv = `\n<div id=\"diagrams\" align=\"center\"></div>    \n`\n  const serializedGrammar = `\n<script>\n    window.serializedGrammar = ${JSON.stringify(grammar, null, \"  \")};\n</script>\n`\n\n  const initLogic = `\n<script>\n    var diagramsDiv = document.getElementById(\"diagrams\");\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\n</script>\n`\n  return (\n    header + cssHtml + scripts + diagramsDiv + serializedGrammar + initLogic\n  )\n}\n", "/* istanbul ignore file - tricky to import some things from this module during testing */\n\n// semantic version\nexport { VERSION } from \"./version\"\n\nexport {\n  CstParser,\n  EmbeddedActionsParser,\n  ParserDefinitionErrorType,\n  EMPTY_ALT\n} from \"./parse/parser/parser\"\n\nexport { Lexer, LexerDefinitionErrorType } from \"./scan/lexer_public\"\n\n// Tokens utilities\nexport {\n  createToken,\n  createTokenInstance,\n  EOF,\n  tokenLabel,\n  tokenMatcher,\n  tokenName\n} from \"./scan/tokens_public\"\n\n// Lookahead\n\nexport { getLookaheadPaths } from \"./parse/grammar/lookahead\"\n\nexport { LLkLookaheadStrategy } from \"./parse/grammar/llk_lookahead\"\n\n// Other Utilities\n\nexport { defaultParserErrorProvider } from \"./parse/errors_public\"\n\nexport {\n  EarlyExitException,\n  isRecognitionException,\n  MismatchedTokenException,\n  NotAllInputParsedException,\n  NoViableAltException\n} from \"./parse/exceptions_public\"\n\nexport { defaultLexerErrorProvider } from \"./scan/lexer_errors_public\"\n\n// grammar reflection API\nexport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"@chevrotain/gast\"\n\n// GAST Utilities\n\nexport {\n  serializeGrammar,\n  serializeProduction,\n  GAstVisitor\n} from \"@chevrotain/gast\"\n\nexport { generateCstDts } from \"@chevrotain/cst-dts-gen\"\n\n/* istanbul ignore next */\nexport function clearCache() {\n  console.warn(\n    \"The clearCache function was 'soft' removed from the Chevrotain API.\" +\n      \"\\n\\t It performs no action other than printing this message.\" +\n      \"\\n\\t Please avoid using it as it will be completely removed in the future\"\n  )\n}\n\nexport { createSyntaxDiagramsCode } from \"./diagrams/render_public\"\n\nexport class Parser {\n  constructor() {\n    throw new Error(\n      \"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" +\n        \"See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0\"\n    )\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}", "import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([c], { type: 'text/javascript' }))));\n    w.onerror = function (e) { return cb(e.error, null); };\n    w.onmessage = function (e) { return cb(null, e.data); };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i)\n        ++l[cd[i] - 1];\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p / 8) | 0) + (p & 7 && 1); };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && !st.l && sl < 5))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            st.f = final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                throw 'invalid block type';\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n            if (!c)\n                throw 'invalid length/literal';\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    throw 'invalid distance';\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e < s) {\n                // write full block\n                pos = wfblk(w, pos, dat.subarray(i, e));\n            }\n            else {\n                // write final block\n                w[i] = lst;\n                pos = wfblk(w, pos, dat.subarray(i, s));\n            }\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/ /g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k] instanceof u8 || v[k] instanceof u16 || v[k] instanceof u32)\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, hMap, max, bits, bits16, shft, slc, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (t)\n            throw 'stream finished';\n        if (!strm.ondata)\n            throw 'no stream handler';\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        throw 'invalid gzip data';\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        throw 'invalid zlib data';\n    if (d[1] & 32)\n        throw 'invalid zlib data: preset dictionaries not supported';\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                throw 'invalid gzip stream';\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                throw 'invalid zlib stream';\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no stream handler';\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k;\n        if (val instanceof u8)\n            t[n] = [val, o];\n        else if (Array.isArray(val))\n            t[n] = [val[0], mrg(o, val[1])];\n        else\n            fltn(val, n + '/', t, o);\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    throw 'invalid utf-8 data';\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            throw 'stream finished';\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                throw 'invalid utf-8 data';\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        if (this.d)\n            throw 'stream finished';\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            throw 'invalid utf-8 data';\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                throw 'extra field too long';\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c == null && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        throw 'date not in range 1980-2099';\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != null) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback - add to ZIP archive before pushing';\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (this.d & 2)\n            throw 'stream finished';\n        var f = strToU8(file.filename), fl = f.length;\n        var com = file.comment, o = com && strToU8(com);\n        var u = fl != file.filename.length || (o && (com.length != o.length));\n        var hl = fl + exfl(file.extra) + 30;\n        if (fl > 65535)\n            throw 'filename too long';\n        var header = new u8(hl);\n        wzh(header, 0, file, f, u);\n        var chks = [header];\n        var pAll = function () {\n            for (var _i = 0, chks_1 = chks; _i < chks_1.length; _i++) {\n                var chk = chks_1[_i];\n                _this_1.ondata(null, chk, false);\n            }\n            chks = [];\n        };\n        var tr = this.d;\n        this.d = 0;\n        var ind = this.u.length;\n        var uf = mrg(file, {\n            f: f,\n            u: u,\n            o: o,\n            t: function () {\n                if (file.terminate)\n                    file.terminate();\n            },\n            r: function () {\n                pAll();\n                if (tr) {\n                    var nxt = _this_1.u[ind + 1];\n                    if (nxt)\n                        nxt.r();\n                    else\n                        _this_1.d = 1;\n                }\n                tr = 1;\n            }\n        });\n        var cl = 0;\n        file.ondata = function (err, dat, final) {\n            if (err) {\n                _this_1.ondata(err, dat, final);\n                _this_1.terminate();\n            }\n            else {\n                cl += dat.length;\n                chks.push(dat);\n                if (final) {\n                    var dd = new u8(16);\n                    wbytes(dd, 0, 0x8074B50);\n                    wbytes(dd, 4, file.crc);\n                    wbytes(dd, 8, cl);\n                    wbytes(dd, 12, file.size);\n                    chks.push(dd);\n                    uf.c = cl, uf.b = hl + cl + 16, uf.crc = file.crc, uf.size = file.size;\n                    if (tr)\n                        uf.r();\n                    tr = 1;\n                }\n                else if (tr)\n                    pAll();\n            }\n        };\n        this.u.push(uf);\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            if (this.d & 1)\n                throw 'stream finishing';\n            throw 'stream finished';\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cb(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cb(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl('filename too long', null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            throw 'filename too long';\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, data, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            throw 'no callback';\n        if (!this.p)\n            throw 'stream finished';\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_2 = [];\n                        this_1.k.unshift(chks_2);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    throw 'no callback';\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        throw 'unknown compression type ' + cmp_1;\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_3 = chks_2; _i < chks_3.length; _i++) {\n                                        var dat = chks_3[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_2 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                throw 'invalid zip file';\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\n/**\n * Asynchronously decompresses a ZIP archive\n * @param data The raw compressed ZIP file\n * @param cb The callback to call with the decompressed files\n * @returns A function that can be used to immediately terminate the unzipping\n */\nexport function unzip(data, cb) {\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cb('invalid zip file', null);\n            return;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (!lft)\n        cb(null, {});\n    var c = lft;\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50) {\n            cb('invalid zip file', null);\n            return;\n        }\n        c = lft = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    var _loop_3 = function (i) {\n        var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                files[fn] = d;\n                if (!--lft)\n                    cb(null, files);\n            }\n        };\n        if (!c_1)\n            cbl(null, slc(data, b, b + sc));\n        else if (c_1 == 8) {\n            var infl = data.subarray(b, b + sc);\n            if (sc < 320000) {\n                try {\n                    cbl(null, inflateSync(infl, new u8(su)));\n                }\n                catch (e) {\n                    cbl(e, null);\n                }\n            }\n            else\n                term.push(inflate(infl, { size: su }, cbl));\n        }\n        else\n            cbl('unknown compression type ' + c_1, null);\n    };\n    for (var i = 0; i < c; ++i) {\n        _loop_3(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @returns The decompressed files\n */\nexport function unzipSync(data) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            throw 'invalid zip file';\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50)\n            throw 'invalid zip file';\n        c = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!c_2)\n            files[fn] = slc(data, b, b + sc);\n        else if (c_2 == 8)\n            files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n        else\n            throw 'unknown compression type ' + c_2;\n    }\n    return files;\n}\n", "/**\n * @author Takahiro / https://github.com/takahirox\n *\n * Simple CharsetEncoder.\n */\n\nfunction CharsetEncoder() {\n}\n\n/*\n * Converts from Shift_JIS Uint8Array data to Unicode strings.\n */\nCharsetEncoder.prototype.s2u = function(uint8Array) {\n  var t = this.s2uTable;\n  var str = '';\n  var p = 0;\n\n  while(p < uint8Array.length) {\n    var key = uint8Array[p++];\n\n    if(! ((key >= 0x00 && key <= 0x7e) ||\n          (key >= 0xa1 && key <= 0xdf)) &&\n       p < uint8Array.length) {\n      key = (key << 8) | uint8Array[p++];\n    }\n\n    if(t[key] === undefined) {\n      console.error('unknown char code ' + key + '.');\n      return str;\n    }\n\n    str += String.fromCharCode(t[key]);\n  }\n\n  return str;\n};\n\nCharsetEncoder.prototype.s2uTable = {\n0:0,\n1:1,\n2:2,\n3:3,\n4:4,\n5:5,\n6:6,\n7:7,\n8:8,\n9:9,\n10:10,\n11:11,\n12:12,\n13:13,\n14:14,\n15:15,\n16:16,\n17:17,\n18:18,\n19:19,\n20:20,\n21:21,\n22:22,\n23:23,\n24:24,\n25:25,\n26:26,\n27:27,\n28:28,\n29:29,\n30:30,\n31:31,\n32:32,\n33:33,\n34:34,\n35:35,\n36:36,\n37:37,\n38:38,\n39:39,\n40:40,\n41:41,\n42:42,\n43:43,\n44:44,\n45:45,\n46:46,\n47:47,\n48:48,\n49:49,\n50:50,\n51:51,\n52:52,\n53:53,\n54:54,\n55:55,\n56:56,\n57:57,\n58:58,\n59:59,\n60:60,\n61:61,\n62:62,\n63:63,\n64:64,\n65:65,\n66:66,\n67:67,\n68:68,\n69:69,\n70:70,\n71:71,\n72:72,\n73:73,\n74:74,\n75:75,\n76:76,\n77:77,\n78:78,\n79:79,\n80:80,\n81:81,\n82:82,\n83:83,\n84:84,\n85:85,\n86:86,\n87:87,\n88:88,\n89:89,\n90:90,\n91:91,\n92:92,\n93:93,\n94:94,\n95:95,\n96:96,\n97:97,\n98:98,\n99:99,\n100:100,\n101:101,\n102:102,\n103:103,\n104:104,\n105:105,\n106:106,\n107:107,\n108:108,\n109:109,\n110:110,\n111:111,\n112:112,\n113:113,\n114:114,\n115:115,\n116:116,\n117:117,\n118:118,\n119:119,\n120:120,\n121:121,\n122:122,\n123:123,\n124:124,\n125:125,\n126:126,\n161:65377,\n162:65378,\n163:65379,\n164:65380,\n165:65381,\n166:65382,\n167:65383,\n168:65384,\n169:65385,\n170:65386,\n171:65387,\n172:65388,\n173:65389,\n174:65390,\n175:65391,\n176:65392,\n177:65393,\n178:65394,\n179:65395,\n180:65396,\n181:65397,\n182:65398,\n183:65399,\n184:65400,\n185:65401,\n186:65402,\n187:65403,\n188:65404,\n189:65405,\n190:65406,\n191:65407,\n192:65408,\n193:65409,\n194:65410,\n195:65411,\n196:65412,\n197:65413,\n198:65414,\n199:65415,\n200:65416,\n201:65417,\n202:65418,\n203:65419,\n204:65420,\n205:65421,\n206:65422,\n207:65423,\n208:65424,\n209:65425,\n210:65426,\n211:65427,\n212:65428,\n213:65429,\n214:65430,\n215:65431,\n216:65432,\n217:65433,\n218:65434,\n219:65435,\n220:65436,\n221:65437,\n222:65438,\n223:65439,\n33088:12288,\n33089:12289,\n33090:12290,\n33091:65292,\n33092:65294,\n33093:12539,\n33094:65306,\n33095:65307,\n33096:65311,\n33097:65281,\n33098:12443,\n33099:12444,\n33100:180,\n33101:65344,\n33102:168,\n33103:65342,\n33104:65507,\n33105:65343,\n33106:12541,\n33107:12542,\n33108:12445,\n33109:12446,\n33110:12291,\n33111:20189,\n33112:12293,\n33113:12294,\n33114:12295,\n33115:12540,\n33116:8213,\n33117:8208,\n33118:65295,\n33119:65340,\n33120:65374,\n33121:8741,\n33122:65372,\n33123:8230,\n33124:8229,\n33125:8216,\n33126:8217,\n33127:8220,\n33128:8221,\n33129:65288,\n33130:65289,\n33131:12308,\n33132:12309,\n33133:65339,\n33134:65341,\n33135:65371,\n33136:65373,\n33137:12296,\n33138:12297,\n33139:12298,\n33140:12299,\n33141:12300,\n33142:12301,\n33143:12302,\n33144:12303,\n33145:12304,\n33146:12305,\n33147:65291,\n33148:65293,\n33149:177,\n33150:215,\n33152:247,\n33153:65309,\n33154:8800,\n33155:65308,\n33156:65310,\n33157:8806,\n33158:8807,\n33159:8734,\n33160:8756,\n33161:9794,\n33162:9792,\n33163:176,\n33164:8242,\n33165:8243,\n33166:8451,\n33167:65509,\n33168:65284,\n33169:65504,\n33170:65505,\n33171:65285,\n33172:65283,\n33173:65286,\n33174:65290,\n33175:65312,\n33176:167,\n33177:9734,\n33178:9733,\n33179:9675,\n33180:9679,\n33181:9678,\n33182:9671,\n33183:9670,\n33184:9633,\n33185:9632,\n33186:9651,\n33187:9650,\n33188:9661,\n33189:9660,\n33190:8251,\n33191:12306,\n33192:8594,\n33193:8592,\n33194:8593,\n33195:8595,\n33196:12307,\n33208:8712,\n33209:8715,\n33210:8838,\n33211:8839,\n33212:8834,\n33213:8835,\n33214:8746,\n33215:8745,\n33224:8743,\n33225:8744,\n33226:65506,\n33227:8658,\n33228:8660,\n33229:8704,\n33230:8707,\n33242:8736,\n33243:8869,\n33244:8978,\n33245:8706,\n33246:8711,\n33247:8801,\n33248:8786,\n33249:8810,\n33250:8811,\n33251:8730,\n33252:8765,\n33253:8733,\n33254:8757,\n33255:8747,\n33256:8748,\n33264:8491,\n33265:8240,\n33266:9839,\n33267:9837,\n33268:9834,\n33269:8224,\n33270:8225,\n33271:182,\n33276:9711,\n33359:65296,\n33360:65297,\n33361:65298,\n33362:65299,\n33363:65300,\n33364:65301,\n33365:65302,\n33366:65303,\n33367:65304,\n33368:65305,\n33376:65313,\n33377:65314,\n33378:65315,\n33379:65316,\n33380:65317,\n33381:65318,\n33382:65319,\n33383:65320,\n33384:65321,\n33385:65322,\n33386:65323,\n33387:65324,\n33388:65325,\n33389:65326,\n33390:65327,\n33391:65328,\n33392:65329,\n33393:65330,\n33394:65331,\n33395:65332,\n33396:65333,\n33397:65334,\n33398:65335,\n33399:65336,\n33400:65337,\n33401:65338,\n33409:65345,\n33410:65346,\n33411:65347,\n33412:65348,\n33413:65349,\n33414:65350,\n33415:65351,\n33416:65352,\n33417:65353,\n33418:65354,\n33419:65355,\n33420:65356,\n33421:65357,\n33422:65358,\n33423:65359,\n33424:65360,\n33425:65361,\n33426:65362,\n33427:65363,\n33428:65364,\n33429:65365,\n33430:65366,\n33431:65367,\n33432:65368,\n33433:65369,\n33434:65370,\n33439:12353,\n33440:12354,\n33441:12355,\n33442:12356,\n33443:12357,\n33444:12358,\n33445:12359,\n33446:12360,\n33447:12361,\n33448:12362,\n33449:12363,\n33450:12364,\n33451:12365,\n33452:12366,\n33453:12367,\n33454:12368,\n33455:12369,\n33456:12370,\n33457:12371,\n33458:12372,\n33459:12373,\n33460:12374,\n33461:12375,\n33462:12376,\n33463:12377,\n33464:12378,\n33465:12379,\n33466:12380,\n33467:12381,\n33468:12382,\n33469:12383,\n33470:12384,\n33471:12385,\n33472:12386,\n33473:12387,\n33474:12388,\n33475:12389,\n33476:12390,\n33477:12391,\n33478:12392,\n33479:12393,\n33480:12394,\n33481:12395,\n33482:12396,\n33483:12397,\n33484:12398,\n33485:12399,\n33486:12400,\n33487:12401,\n33488:12402,\n33489:12403,\n33490:12404,\n33491:12405,\n33492:12406,\n33493:12407,\n33494:12408,\n33495:12409,\n33496:12410,\n33497:12411,\n33498:12412,\n33499:12413,\n33500:12414,\n33501:12415,\n33502:12416,\n33503:12417,\n33504:12418,\n33505:12419,\n33506:12420,\n33507:12421,\n33508:12422,\n33509:12423,\n33510:12424,\n33511:12425,\n33512:12426,\n33513:12427,\n33514:12428,\n33515:12429,\n33516:12430,\n33517:12431,\n33518:12432,\n33519:12433,\n33520:12434,\n33521:12435,\n33600:12449,\n33601:12450,\n33602:12451,\n33603:12452,\n33604:12453,\n33605:12454,\n33606:12455,\n33607:12456,\n33608:12457,\n33609:12458,\n33610:12459,\n33611:12460,\n33612:12461,\n33613:12462,\n33614:12463,\n33615:12464,\n33616:12465,\n33617:12466,\n33618:12467,\n33619:12468,\n33620:12469,\n33621:12470,\n33622:12471,\n33623:12472,\n33624:12473,\n33625:12474,\n33626:12475,\n33627:12476,\n33628:12477,\n33629:12478,\n33630:12479,\n33631:12480,\n33632:12481,\n33633:12482,\n33634:12483,\n33635:12484,\n33636:12485,\n33637:12486,\n33638:12487,\n33639:12488,\n33640:12489,\n33641:12490,\n33642:12491,\n33643:12492,\n33644:12493,\n33645:12494,\n33646:12495,\n33647:12496,\n33648:12497,\n33649:12498,\n33650:12499,\n33651:12500,\n33652:12501,\n33653:12502,\n33654:12503,\n33655:12504,\n33656:12505,\n33657:12506,\n33658:12507,\n33659:12508,\n33660:12509,\n33661:12510,\n33662:12511,\n33664:12512,\n33665:12513,\n33666:12514,\n33667:12515,\n33668:12516,\n33669:12517,\n33670:12518,\n33671:12519,\n33672:12520,\n33673:12521,\n33674:12522,\n33675:12523,\n33676:12524,\n33677:12525,\n33678:12526,\n33679:12527,\n33680:12528,\n33681:12529,\n33682:12530,\n33683:12531,\n33684:12532,\n33685:12533,\n33686:12534,\n33695:913,\n33696:914,\n33697:915,\n33698:916,\n33699:917,\n33700:918,\n33701:919,\n33702:920,\n33703:921,\n33704:922,\n33705:923,\n33706:924,\n33707:925,\n33708:926,\n33709:927,\n33710:928,\n33711:929,\n33712:931,\n33713:932,\n33714:933,\n33715:934,\n33716:935,\n33717:936,\n33718:937,\n33727:945,\n33728:946,\n33729:947,\n33730:948,\n33731:949,\n33732:950,\n33733:951,\n33734:952,\n33735:953,\n33736:954,\n33737:955,\n33738:956,\n33739:957,\n33740:958,\n33741:959,\n33742:960,\n33743:961,\n33744:963,\n33745:964,\n33746:965,\n33747:966,\n33748:967,\n33749:968,\n33750:969,\n33856:1040,\n33857:1041,\n33858:1042,\n33859:1043,\n33860:1044,\n33861:1045,\n33862:1025,\n33863:1046,\n33864:1047,\n33865:1048,\n33866:1049,\n33867:1050,\n33868:1051,\n33869:1052,\n33870:1053,\n33871:1054,\n33872:1055,\n33873:1056,\n33874:1057,\n33875:1058,\n33876:1059,\n33877:1060,\n33878:1061,\n33879:1062,\n33880:1063,\n33881:1064,\n33882:1065,\n33883:1066,\n33884:1067,\n33885:1068,\n33886:1069,\n33887:1070,\n33888:1071,\n33904:1072,\n33905:1073,\n33906:1074,\n33907:1075,\n33908:1076,\n33909:1077,\n33910:1105,\n33911:1078,\n33912:1079,\n33913:1080,\n33914:1081,\n33915:1082,\n33916:1083,\n33917:1084,\n33918:1085,\n33920:1086,\n33921:1087,\n33922:1088,\n33923:1089,\n33924:1090,\n33925:1091,\n33926:1092,\n33927:1093,\n33928:1094,\n33929:1095,\n33930:1096,\n33931:1097,\n33932:1098,\n33933:1099,\n33934:1100,\n33935:1101,\n33936:1102,\n33937:1103,\n33951:9472,\n33952:9474,\n33953:9484,\n33954:9488,\n33955:9496,\n33956:9492,\n33957:9500,\n33958:9516,\n33959:9508,\n33960:9524,\n33961:9532,\n33962:9473,\n33963:9475,\n33964:9487,\n33965:9491,\n33966:9499,\n33967:9495,\n33968:9507,\n33969:9523,\n33970:9515,\n33971:9531,\n33972:9547,\n33973:9504,\n33974:9519,\n33975:9512,\n33976:9527,\n33977:9535,\n33978:9501,\n33979:9520,\n33980:9509,\n33981:9528,\n33982:9538,\n34624:9312,\n34625:9313,\n34626:9314,\n34627:9315,\n34628:9316,\n34629:9317,\n34630:9318,\n34631:9319,\n34632:9320,\n34633:9321,\n34634:9322,\n34635:9323,\n34636:9324,\n34637:9325,\n34638:9326,\n34639:9327,\n34640:9328,\n34641:9329,\n34642:9330,\n34643:9331,\n34644:8544,\n34645:8545,\n34646:8546,\n34647:8547,\n34648:8548,\n34649:8549,\n34650:8550,\n34651:8551,\n34652:8552,\n34653:8553,\n34655:13129,\n34656:13076,\n34657:13090,\n34658:13133,\n34659:13080,\n34660:13095,\n34661:13059,\n34662:13110,\n34663:13137,\n34664:13143,\n34665:13069,\n34666:13094,\n34667:13091,\n34668:13099,\n34669:13130,\n34670:13115,\n34671:13212,\n34672:13213,\n34673:13214,\n34674:13198,\n34675:13199,\n34676:13252,\n34677:13217,\n34686:13179,\n34688:12317,\n34689:12319,\n34690:8470,\n34691:13261,\n34692:8481,\n34693:12964,\n34694:12965,\n34695:12966,\n34696:12967,\n34697:12968,\n34698:12849,\n34699:12850,\n34700:12857,\n34701:13182,\n34702:13181,\n34703:13180,\n34704:8786,\n34705:8801,\n34706:8747,\n34707:8750,\n34708:8721,\n34709:8730,\n34710:8869,\n34711:8736,\n34712:8735,\n34713:8895,\n34714:8757,\n34715:8745,\n34716:8746,\n34975:20124,\n34976:21782,\n34977:23043,\n34978:38463,\n34979:21696,\n34980:24859,\n34981:25384,\n34982:23030,\n34983:36898,\n34984:33909,\n34985:33564,\n34986:31312,\n34987:24746,\n34988:25569,\n34989:28197,\n34990:26093,\n34991:33894,\n34992:33446,\n34993:39925,\n34994:26771,\n34995:22311,\n34996:26017,\n34997:25201,\n34998:23451,\n34999:22992,\n35000:34427,\n35001:39156,\n35002:32098,\n35003:32190,\n35004:39822,\n35005:25110,\n35006:31903,\n35007:34999,\n35008:23433,\n35009:24245,\n35010:25353,\n35011:26263,\n35012:26696,\n35013:38343,\n35014:38797,\n35015:26447,\n35016:20197,\n35017:20234,\n35018:20301,\n35019:20381,\n35020:20553,\n35021:22258,\n35022:22839,\n35023:22996,\n35024:23041,\n35025:23561,\n35026:24799,\n35027:24847,\n35028:24944,\n35029:26131,\n35030:26885,\n35031:28858,\n35032:30031,\n35033:30064,\n35034:31227,\n35035:32173,\n35036:32239,\n35037:32963,\n35038:33806,\n35039:34915,\n35040:35586,\n35041:36949,\n35042:36986,\n35043:21307,\n35044:20117,\n35045:20133,\n35046:22495,\n35047:32946,\n35048:37057,\n35049:30959,\n35050:19968,\n35051:22769,\n35052:28322,\n35053:36920,\n35054:31282,\n35055:33576,\n35056:33419,\n35057:39983,\n35058:20801,\n35059:21360,\n35060:21693,\n35061:21729,\n35062:22240,\n35063:23035,\n35064:24341,\n35065:39154,\n35066:28139,\n35067:32996,\n35068:34093,\n35136:38498,\n35137:38512,\n35138:38560,\n35139:38907,\n35140:21515,\n35141:21491,\n35142:23431,\n35143:28879,\n35144:32701,\n35145:36802,\n35146:38632,\n35147:21359,\n35148:40284,\n35149:31418,\n35150:19985,\n35151:30867,\n35152:33276,\n35153:28198,\n35154:22040,\n35155:21764,\n35156:27421,\n35157:34074,\n35158:39995,\n35159:23013,\n35160:21417,\n35161:28006,\n35162:29916,\n35163:38287,\n35164:22082,\n35165:20113,\n35166:36939,\n35167:38642,\n35168:33615,\n35169:39180,\n35170:21473,\n35171:21942,\n35172:23344,\n35173:24433,\n35174:26144,\n35175:26355,\n35176:26628,\n35177:27704,\n35178:27891,\n35179:27945,\n35180:29787,\n35181:30408,\n35182:31310,\n35183:38964,\n35184:33521,\n35185:34907,\n35186:35424,\n35187:37613,\n35188:28082,\n35189:30123,\n35190:30410,\n35191:39365,\n35192:24742,\n35193:35585,\n35194:36234,\n35195:38322,\n35196:27022,\n35197:21421,\n35198:20870,\n35200:22290,\n35201:22576,\n35202:22852,\n35203:23476,\n35204:24310,\n35205:24616,\n35206:25513,\n35207:25588,\n35208:27839,\n35209:28436,\n35210:28814,\n35211:28948,\n35212:29017,\n35213:29141,\n35214:29503,\n35215:32257,\n35216:33398,\n35217:33489,\n35218:34199,\n35219:36960,\n35220:37467,\n35221:40219,\n35222:22633,\n35223:26044,\n35224:27738,\n35225:29989,\n35226:20985,\n35227:22830,\n35228:22885,\n35229:24448,\n35230:24540,\n35231:25276,\n35232:26106,\n35233:27178,\n35234:27431,\n35235:27572,\n35236:29579,\n35237:32705,\n35238:35158,\n35239:40236,\n35240:40206,\n35241:40644,\n35242:23713,\n35243:27798,\n35244:33659,\n35245:20740,\n35246:23627,\n35247:25014,\n35248:33222,\n35249:26742,\n35250:29281,\n35251:20057,\n35252:20474,\n35253:21368,\n35254:24681,\n35255:28201,\n35256:31311,\n35257:38899,\n35258:19979,\n35259:21270,\n35260:20206,\n35261:20309,\n35262:20285,\n35263:20385,\n35264:20339,\n35265:21152,\n35266:21487,\n35267:22025,\n35268:22799,\n35269:23233,\n35270:23478,\n35271:23521,\n35272:31185,\n35273:26247,\n35274:26524,\n35275:26550,\n35276:27468,\n35277:27827,\n35278:28779,\n35279:29634,\n35280:31117,\n35281:31166,\n35282:31292,\n35283:31623,\n35284:33457,\n35285:33499,\n35286:33540,\n35287:33655,\n35288:33775,\n35289:33747,\n35290:34662,\n35291:35506,\n35292:22057,\n35293:36008,\n35294:36838,\n35295:36942,\n35296:38686,\n35297:34442,\n35298:20420,\n35299:23784,\n35300:25105,\n35301:29273,\n35302:30011,\n35303:33253,\n35304:33469,\n35305:34558,\n35306:36032,\n35307:38597,\n35308:39187,\n35309:39381,\n35310:20171,\n35311:20250,\n35312:35299,\n35313:22238,\n35314:22602,\n35315:22730,\n35316:24315,\n35317:24555,\n35318:24618,\n35319:24724,\n35320:24674,\n35321:25040,\n35322:25106,\n35323:25296,\n35324:25913,\n35392:39745,\n35393:26214,\n35394:26800,\n35395:28023,\n35396:28784,\n35397:30028,\n35398:30342,\n35399:32117,\n35400:33445,\n35401:34809,\n35402:38283,\n35403:38542,\n35404:35997,\n35405:20977,\n35406:21182,\n35407:22806,\n35408:21683,\n35409:23475,\n35410:23830,\n35411:24936,\n35412:27010,\n35413:28079,\n35414:30861,\n35415:33995,\n35416:34903,\n35417:35442,\n35418:37799,\n35419:39608,\n35420:28012,\n35421:39336,\n35422:34521,\n35423:22435,\n35424:26623,\n35425:34510,\n35426:37390,\n35427:21123,\n35428:22151,\n35429:21508,\n35430:24275,\n35431:25313,\n35432:25785,\n35433:26684,\n35434:26680,\n35435:27579,\n35436:29554,\n35437:30906,\n35438:31339,\n35439:35226,\n35440:35282,\n35441:36203,\n35442:36611,\n35443:37101,\n35444:38307,\n35445:38548,\n35446:38761,\n35447:23398,\n35448:23731,\n35449:27005,\n35450:38989,\n35451:38990,\n35452:25499,\n35453:31520,\n35454:27179,\n35456:27263,\n35457:26806,\n35458:39949,\n35459:28511,\n35460:21106,\n35461:21917,\n35462:24688,\n35463:25324,\n35464:27963,\n35465:28167,\n35466:28369,\n35467:33883,\n35468:35088,\n35469:36676,\n35470:19988,\n35471:39993,\n35472:21494,\n35473:26907,\n35474:27194,\n35475:38788,\n35476:26666,\n35477:20828,\n35478:31427,\n35479:33970,\n35480:37340,\n35481:37772,\n35482:22107,\n35483:40232,\n35484:26658,\n35485:33541,\n35486:33841,\n35487:31909,\n35488:21000,\n35489:33477,\n35490:29926,\n35491:20094,\n35492:20355,\n35493:20896,\n35494:23506,\n35495:21002,\n35496:21208,\n35497:21223,\n35498:24059,\n35499:21914,\n35500:22570,\n35501:23014,\n35502:23436,\n35503:23448,\n35504:23515,\n35505:24178,\n35506:24185,\n35507:24739,\n35508:24863,\n35509:24931,\n35510:25022,\n35511:25563,\n35512:25954,\n35513:26577,\n35514:26707,\n35515:26874,\n35516:27454,\n35517:27475,\n35518:27735,\n35519:28450,\n35520:28567,\n35521:28485,\n35522:29872,\n35523:29976,\n35524:30435,\n35525:30475,\n35526:31487,\n35527:31649,\n35528:31777,\n35529:32233,\n35530:32566,\n35531:32752,\n35532:32925,\n35533:33382,\n35534:33694,\n35535:35251,\n35536:35532,\n35537:36011,\n35538:36996,\n35539:37969,\n35540:38291,\n35541:38289,\n35542:38306,\n35543:38501,\n35544:38867,\n35545:39208,\n35546:33304,\n35547:20024,\n35548:21547,\n35549:23736,\n35550:24012,\n35551:29609,\n35552:30284,\n35553:30524,\n35554:23721,\n35555:32747,\n35556:36107,\n35557:38593,\n35558:38929,\n35559:38996,\n35560:39000,\n35561:20225,\n35562:20238,\n35563:21361,\n35564:21916,\n35565:22120,\n35566:22522,\n35567:22855,\n35568:23305,\n35569:23492,\n35570:23696,\n35571:24076,\n35572:24190,\n35573:24524,\n35574:25582,\n35575:26426,\n35576:26071,\n35577:26082,\n35578:26399,\n35579:26827,\n35580:26820,\n35648:27231,\n35649:24112,\n35650:27589,\n35651:27671,\n35652:27773,\n35653:30079,\n35654:31048,\n35655:23395,\n35656:31232,\n35657:32000,\n35658:24509,\n35659:35215,\n35660:35352,\n35661:36020,\n35662:36215,\n35663:36556,\n35664:36637,\n35665:39138,\n35666:39438,\n35667:39740,\n35668:20096,\n35669:20605,\n35670:20736,\n35671:22931,\n35672:23452,\n35673:25135,\n35674:25216,\n35675:25836,\n35676:27450,\n35677:29344,\n35678:30097,\n35679:31047,\n35680:32681,\n35681:34811,\n35682:35516,\n35683:35696,\n35684:25516,\n35685:33738,\n35686:38816,\n35687:21513,\n35688:21507,\n35689:21931,\n35690:26708,\n35691:27224,\n35692:35440,\n35693:30759,\n35694:26485,\n35695:40653,\n35696:21364,\n35697:23458,\n35698:33050,\n35699:34384,\n35700:36870,\n35701:19992,\n35702:20037,\n35703:20167,\n35704:20241,\n35705:21450,\n35706:21560,\n35707:23470,\n35708:24339,\n35709:24613,\n35710:25937,\n35712:26429,\n35713:27714,\n35714:27762,\n35715:27875,\n35716:28792,\n35717:29699,\n35718:31350,\n35719:31406,\n35720:31496,\n35721:32026,\n35722:31998,\n35723:32102,\n35724:26087,\n35725:29275,\n35726:21435,\n35727:23621,\n35728:24040,\n35729:25298,\n35730:25312,\n35731:25369,\n35732:28192,\n35733:34394,\n35734:35377,\n35735:36317,\n35736:37624,\n35737:28417,\n35738:31142,\n35739:39770,\n35740:20136,\n35741:20139,\n35742:20140,\n35743:20379,\n35744:20384,\n35745:20689,\n35746:20807,\n35747:31478,\n35748:20849,\n35749:20982,\n35750:21332,\n35751:21281,\n35752:21375,\n35753:21483,\n35754:21932,\n35755:22659,\n35756:23777,\n35757:24375,\n35758:24394,\n35759:24623,\n35760:24656,\n35761:24685,\n35762:25375,\n35763:25945,\n35764:27211,\n35765:27841,\n35766:29378,\n35767:29421,\n35768:30703,\n35769:33016,\n35770:33029,\n35771:33288,\n35772:34126,\n35773:37111,\n35774:37857,\n35775:38911,\n35776:39255,\n35777:39514,\n35778:20208,\n35779:20957,\n35780:23597,\n35781:26241,\n35782:26989,\n35783:23616,\n35784:26354,\n35785:26997,\n35786:29577,\n35787:26704,\n35788:31873,\n35789:20677,\n35790:21220,\n35791:22343,\n35792:24062,\n35793:37670,\n35794:26020,\n35795:27427,\n35796:27453,\n35797:29748,\n35798:31105,\n35799:31165,\n35800:31563,\n35801:32202,\n35802:33465,\n35803:33740,\n35804:34943,\n35805:35167,\n35806:35641,\n35807:36817,\n35808:37329,\n35809:21535,\n35810:37504,\n35811:20061,\n35812:20534,\n35813:21477,\n35814:21306,\n35815:29399,\n35816:29590,\n35817:30697,\n35818:33510,\n35819:36527,\n35820:39366,\n35821:39368,\n35822:39378,\n35823:20855,\n35824:24858,\n35825:34398,\n35826:21936,\n35827:31354,\n35828:20598,\n35829:23507,\n35830:36935,\n35831:38533,\n35832:20018,\n35833:27355,\n35834:37351,\n35835:23633,\n35836:23624,\n35904:25496,\n35905:31391,\n35906:27795,\n35907:38772,\n35908:36705,\n35909:31402,\n35910:29066,\n35911:38536,\n35912:31874,\n35913:26647,\n35914:32368,\n35915:26705,\n35916:37740,\n35917:21234,\n35918:21531,\n35919:34219,\n35920:35347,\n35921:32676,\n35922:36557,\n35923:37089,\n35924:21350,\n35925:34952,\n35926:31041,\n35927:20418,\n35928:20670,\n35929:21009,\n35930:20804,\n35931:21843,\n35932:22317,\n35933:29674,\n35934:22411,\n35935:22865,\n35936:24418,\n35937:24452,\n35938:24693,\n35939:24950,\n35940:24935,\n35941:25001,\n35942:25522,\n35943:25658,\n35944:25964,\n35945:26223,\n35946:26690,\n35947:28179,\n35948:30054,\n35949:31293,\n35950:31995,\n35951:32076,\n35952:32153,\n35953:32331,\n35954:32619,\n35955:33550,\n35956:33610,\n35957:34509,\n35958:35336,\n35959:35427,\n35960:35686,\n35961:36605,\n35962:38938,\n35963:40335,\n35964:33464,\n35965:36814,\n35966:39912,\n35968:21127,\n35969:25119,\n35970:25731,\n35971:28608,\n35972:38553,\n35973:26689,\n35974:20625,\n35975:27424,\n35976:27770,\n35977:28500,\n35978:31348,\n35979:32080,\n35980:34880,\n35981:35363,\n35982:26376,\n35983:20214,\n35984:20537,\n35985:20518,\n35986:20581,\n35987:20860,\n35988:21048,\n35989:21091,\n35990:21927,\n35991:22287,\n35992:22533,\n35993:23244,\n35994:24314,\n35995:25010,\n35996:25080,\n35997:25331,\n35998:25458,\n35999:26908,\n36000:27177,\n36001:29309,\n36002:29356,\n36003:29486,\n36004:30740,\n36005:30831,\n36006:32121,\n36007:30476,\n36008:32937,\n36009:35211,\n36010:35609,\n36011:36066,\n36012:36562,\n36013:36963,\n36014:37749,\n36015:38522,\n36016:38997,\n36017:39443,\n36018:40568,\n36019:20803,\n36020:21407,\n36021:21427,\n36022:24187,\n36023:24358,\n36024:28187,\n36025:28304,\n36026:29572,\n36027:29694,\n36028:32067,\n36029:33335,\n36030:35328,\n36031:35578,\n36032:38480,\n36033:20046,\n36034:20491,\n36035:21476,\n36036:21628,\n36037:22266,\n36038:22993,\n36039:23396,\n36040:24049,\n36041:24235,\n36042:24359,\n36043:25144,\n36044:25925,\n36045:26543,\n36046:28246,\n36047:29392,\n36048:31946,\n36049:34996,\n36050:32929,\n36051:32993,\n36052:33776,\n36053:34382,\n36054:35463,\n36055:36328,\n36056:37431,\n36057:38599,\n36058:39015,\n36059:40723,\n36060:20116,\n36061:20114,\n36062:20237,\n36063:21320,\n36064:21577,\n36065:21566,\n36066:23087,\n36067:24460,\n36068:24481,\n36069:24735,\n36070:26791,\n36071:27278,\n36072:29786,\n36073:30849,\n36074:35486,\n36075:35492,\n36076:35703,\n36077:37264,\n36078:20062,\n36079:39881,\n36080:20132,\n36081:20348,\n36082:20399,\n36083:20505,\n36084:20502,\n36085:20809,\n36086:20844,\n36087:21151,\n36088:21177,\n36089:21246,\n36090:21402,\n36091:21475,\n36092:21521,\n36160:21518,\n36161:21897,\n36162:22353,\n36163:22434,\n36164:22909,\n36165:23380,\n36166:23389,\n36167:23439,\n36168:24037,\n36169:24039,\n36170:24055,\n36171:24184,\n36172:24195,\n36173:24218,\n36174:24247,\n36175:24344,\n36176:24658,\n36177:24908,\n36178:25239,\n36179:25304,\n36180:25511,\n36181:25915,\n36182:26114,\n36183:26179,\n36184:26356,\n36185:26477,\n36186:26657,\n36187:26775,\n36188:27083,\n36189:27743,\n36190:27946,\n36191:28009,\n36192:28207,\n36193:28317,\n36194:30002,\n36195:30343,\n36196:30828,\n36197:31295,\n36198:31968,\n36199:32005,\n36200:32024,\n36201:32094,\n36202:32177,\n36203:32789,\n36204:32771,\n36205:32943,\n36206:32945,\n36207:33108,\n36208:33167,\n36209:33322,\n36210:33618,\n36211:34892,\n36212:34913,\n36213:35611,\n36214:36002,\n36215:36092,\n36216:37066,\n36217:37237,\n36218:37489,\n36219:30783,\n36220:37628,\n36221:38308,\n36222:38477,\n36224:38917,\n36225:39321,\n36226:39640,\n36227:40251,\n36228:21083,\n36229:21163,\n36230:21495,\n36231:21512,\n36232:22741,\n36233:25335,\n36234:28640,\n36235:35946,\n36236:36703,\n36237:40633,\n36238:20811,\n36239:21051,\n36240:21578,\n36241:22269,\n36242:31296,\n36243:37239,\n36244:40288,\n36245:40658,\n36246:29508,\n36247:28425,\n36248:33136,\n36249:29969,\n36250:24573,\n36251:24794,\n36252:39592,\n36253:29403,\n36254:36796,\n36255:27492,\n36256:38915,\n36257:20170,\n36258:22256,\n36259:22372,\n36260:22718,\n36261:23130,\n36262:24680,\n36263:25031,\n36264:26127,\n36265:26118,\n36266:26681,\n36267:26801,\n36268:28151,\n36269:30165,\n36270:32058,\n36271:33390,\n36272:39746,\n36273:20123,\n36274:20304,\n36275:21449,\n36276:21766,\n36277:23919,\n36278:24038,\n36279:24046,\n36280:26619,\n36281:27801,\n36282:29811,\n36283:30722,\n36284:35408,\n36285:37782,\n36286:35039,\n36287:22352,\n36288:24231,\n36289:25387,\n36290:20661,\n36291:20652,\n36292:20877,\n36293:26368,\n36294:21705,\n36295:22622,\n36296:22971,\n36297:23472,\n36298:24425,\n36299:25165,\n36300:25505,\n36301:26685,\n36302:27507,\n36303:28168,\n36304:28797,\n36305:37319,\n36306:29312,\n36307:30741,\n36308:30758,\n36309:31085,\n36310:25998,\n36311:32048,\n36312:33756,\n36313:35009,\n36314:36617,\n36315:38555,\n36316:21092,\n36317:22312,\n36318:26448,\n36319:32618,\n36320:36001,\n36321:20916,\n36322:22338,\n36323:38442,\n36324:22586,\n36325:27018,\n36326:32948,\n36327:21682,\n36328:23822,\n36329:22524,\n36330:30869,\n36331:40442,\n36332:20316,\n36333:21066,\n36334:21643,\n36335:25662,\n36336:26152,\n36337:26388,\n36338:26613,\n36339:31364,\n36340:31574,\n36341:32034,\n36342:37679,\n36343:26716,\n36344:39853,\n36345:31545,\n36346:21273,\n36347:20874,\n36348:21047,\n36416:23519,\n36417:25334,\n36418:25774,\n36419:25830,\n36420:26413,\n36421:27578,\n36422:34217,\n36423:38609,\n36424:30352,\n36425:39894,\n36426:25420,\n36427:37638,\n36428:39851,\n36429:30399,\n36430:26194,\n36431:19977,\n36432:20632,\n36433:21442,\n36434:23665,\n36435:24808,\n36436:25746,\n36437:25955,\n36438:26719,\n36439:29158,\n36440:29642,\n36441:29987,\n36442:31639,\n36443:32386,\n36444:34453,\n36445:35715,\n36446:36059,\n36447:37240,\n36448:39184,\n36449:26028,\n36450:26283,\n36451:27531,\n36452:20181,\n36453:20180,\n36454:20282,\n36455:20351,\n36456:21050,\n36457:21496,\n36458:21490,\n36459:21987,\n36460:22235,\n36461:22763,\n36462:22987,\n36463:22985,\n36464:23039,\n36465:23376,\n36466:23629,\n36467:24066,\n36468:24107,\n36469:24535,\n36470:24605,\n36471:25351,\n36472:25903,\n36473:23388,\n36474:26031,\n36475:26045,\n36476:26088,\n36477:26525,\n36478:27490,\n36480:27515,\n36481:27663,\n36482:29509,\n36483:31049,\n36484:31169,\n36485:31992,\n36486:32025,\n36487:32043,\n36488:32930,\n36489:33026,\n36490:33267,\n36491:35222,\n36492:35422,\n36493:35433,\n36494:35430,\n36495:35468,\n36496:35566,\n36497:36039,\n36498:36060,\n36499:38604,\n36500:39164,\n36501:27503,\n36502:20107,\n36503:20284,\n36504:20365,\n36505:20816,\n36506:23383,\n36507:23546,\n36508:24904,\n36509:25345,\n36510:26178,\n36511:27425,\n36512:28363,\n36513:27835,\n36514:29246,\n36515:29885,\n36516:30164,\n36517:30913,\n36518:31034,\n36519:32780,\n36520:32819,\n36521:33258,\n36522:33940,\n36523:36766,\n36524:27728,\n36525:40575,\n36526:24335,\n36527:35672,\n36528:40235,\n36529:31482,\n36530:36600,\n36531:23437,\n36532:38635,\n36533:19971,\n36534:21489,\n36535:22519,\n36536:22833,\n36537:23241,\n36538:23460,\n36539:24713,\n36540:28287,\n36541:28422,\n36542:30142,\n36543:36074,\n36544:23455,\n36545:34048,\n36546:31712,\n36547:20594,\n36548:26612,\n36549:33437,\n36550:23649,\n36551:34122,\n36552:32286,\n36553:33294,\n36554:20889,\n36555:23556,\n36556:25448,\n36557:36198,\n36558:26012,\n36559:29038,\n36560:31038,\n36561:32023,\n36562:32773,\n36563:35613,\n36564:36554,\n36565:36974,\n36566:34503,\n36567:37034,\n36568:20511,\n36569:21242,\n36570:23610,\n36571:26451,\n36572:28796,\n36573:29237,\n36574:37196,\n36575:37320,\n36576:37675,\n36577:33509,\n36578:23490,\n36579:24369,\n36580:24825,\n36581:20027,\n36582:21462,\n36583:23432,\n36584:25163,\n36585:26417,\n36586:27530,\n36587:29417,\n36588:29664,\n36589:31278,\n36590:33131,\n36591:36259,\n36592:37202,\n36593:39318,\n36594:20754,\n36595:21463,\n36596:21610,\n36597:23551,\n36598:25480,\n36599:27193,\n36600:32172,\n36601:38656,\n36602:22234,\n36603:21454,\n36604:21608,\n36672:23447,\n36673:23601,\n36674:24030,\n36675:20462,\n36676:24833,\n36677:25342,\n36678:27954,\n36679:31168,\n36680:31179,\n36681:32066,\n36682:32333,\n36683:32722,\n36684:33261,\n36685:33311,\n36686:33936,\n36687:34886,\n36688:35186,\n36689:35728,\n36690:36468,\n36691:36655,\n36692:36913,\n36693:37195,\n36694:37228,\n36695:38598,\n36696:37276,\n36697:20160,\n36698:20303,\n36699:20805,\n36700:21313,\n36701:24467,\n36702:25102,\n36703:26580,\n36704:27713,\n36705:28171,\n36706:29539,\n36707:32294,\n36708:37325,\n36709:37507,\n36710:21460,\n36711:22809,\n36712:23487,\n36713:28113,\n36714:31069,\n36715:32302,\n36716:31899,\n36717:22654,\n36718:29087,\n36719:20986,\n36720:34899,\n36721:36848,\n36722:20426,\n36723:23803,\n36724:26149,\n36725:30636,\n36726:31459,\n36727:33308,\n36728:39423,\n36729:20934,\n36730:24490,\n36731:26092,\n36732:26991,\n36733:27529,\n36734:28147,\n36736:28310,\n36737:28516,\n36738:30462,\n36739:32020,\n36740:24033,\n36741:36981,\n36742:37255,\n36743:38918,\n36744:20966,\n36745:21021,\n36746:25152,\n36747:26257,\n36748:26329,\n36749:28186,\n36750:24246,\n36751:32210,\n36752:32626,\n36753:26360,\n36754:34223,\n36755:34295,\n36756:35576,\n36757:21161,\n36758:21465,\n36759:22899,\n36760:24207,\n36761:24464,\n36762:24661,\n36763:37604,\n36764:38500,\n36765:20663,\n36766:20767,\n36767:21213,\n36768:21280,\n36769:21319,\n36770:21484,\n36771:21736,\n36772:21830,\n36773:21809,\n36774:22039,\n36775:22888,\n36776:22974,\n36777:23100,\n36778:23477,\n36779:23558,\n36780:23567,\n36781:23569,\n36782:23578,\n36783:24196,\n36784:24202,\n36785:24288,\n36786:24432,\n36787:25215,\n36788:25220,\n36789:25307,\n36790:25484,\n36791:25463,\n36792:26119,\n36793:26124,\n36794:26157,\n36795:26230,\n36796:26494,\n36797:26786,\n36798:27167,\n36799:27189,\n36800:27836,\n36801:28040,\n36802:28169,\n36803:28248,\n36804:28988,\n36805:28966,\n36806:29031,\n36807:30151,\n36808:30465,\n36809:30813,\n36810:30977,\n36811:31077,\n36812:31216,\n36813:31456,\n36814:31505,\n36815:31911,\n36816:32057,\n36817:32918,\n36818:33750,\n36819:33931,\n36820:34121,\n36821:34909,\n36822:35059,\n36823:35359,\n36824:35388,\n36825:35412,\n36826:35443,\n36827:35937,\n36828:36062,\n36829:37284,\n36830:37478,\n36831:37758,\n36832:37912,\n36833:38556,\n36834:38808,\n36835:19978,\n36836:19976,\n36837:19998,\n36838:20055,\n36839:20887,\n36840:21104,\n36841:22478,\n36842:22580,\n36843:22732,\n36844:23330,\n36845:24120,\n36846:24773,\n36847:25854,\n36848:26465,\n36849:26454,\n36850:27972,\n36851:29366,\n36852:30067,\n36853:31331,\n36854:33976,\n36855:35698,\n36856:37304,\n36857:37664,\n36858:22065,\n36859:22516,\n36860:39166,\n36928:25325,\n36929:26893,\n36930:27542,\n36931:29165,\n36932:32340,\n36933:32887,\n36934:33394,\n36935:35302,\n36936:39135,\n36937:34645,\n36938:36785,\n36939:23611,\n36940:20280,\n36941:20449,\n36942:20405,\n36943:21767,\n36944:23072,\n36945:23517,\n36946:23529,\n36947:24515,\n36948:24910,\n36949:25391,\n36950:26032,\n36951:26187,\n36952:26862,\n36953:27035,\n36954:28024,\n36955:28145,\n36956:30003,\n36957:30137,\n36958:30495,\n36959:31070,\n36960:31206,\n36961:32051,\n36962:33251,\n36963:33455,\n36964:34218,\n36965:35242,\n36966:35386,\n36967:36523,\n36968:36763,\n36969:36914,\n36970:37341,\n36971:38663,\n36972:20154,\n36973:20161,\n36974:20995,\n36975:22645,\n36976:22764,\n36977:23563,\n36978:29978,\n36979:23613,\n36980:33102,\n36981:35338,\n36982:36805,\n36983:38499,\n36984:38765,\n36985:31525,\n36986:35535,\n36987:38920,\n36988:37218,\n36989:22259,\n36990:21416,\n36992:36887,\n36993:21561,\n36994:22402,\n36995:24101,\n36996:25512,\n36997:27700,\n36998:28810,\n36999:30561,\n37000:31883,\n37001:32736,\n37002:34928,\n37003:36930,\n37004:37204,\n37005:37648,\n37006:37656,\n37007:38543,\n37008:29790,\n37009:39620,\n37010:23815,\n37011:23913,\n37012:25968,\n37013:26530,\n37014:36264,\n37015:38619,\n37016:25454,\n37017:26441,\n37018:26905,\n37019:33733,\n37020:38935,\n37021:38592,\n37022:35070,\n37023:28548,\n37024:25722,\n37025:23544,\n37026:19990,\n37027:28716,\n37028:30045,\n37029:26159,\n37030:20932,\n37031:21046,\n37032:21218,\n37033:22995,\n37034:24449,\n37035:24615,\n37036:25104,\n37037:25919,\n37038:25972,\n37039:26143,\n37040:26228,\n37041:26866,\n37042:26646,\n37043:27491,\n37044:28165,\n37045:29298,\n37046:29983,\n37047:30427,\n37048:31934,\n37049:32854,\n37050:22768,\n37051:35069,\n37052:35199,\n37053:35488,\n37054:35475,\n37055:35531,\n37056:36893,\n37057:37266,\n37058:38738,\n37059:38745,\n37060:25993,\n37061:31246,\n37062:33030,\n37063:38587,\n37064:24109,\n37065:24796,\n37066:25114,\n37067:26021,\n37068:26132,\n37069:26512,\n37070:30707,\n37071:31309,\n37072:31821,\n37073:32318,\n37074:33034,\n37075:36012,\n37076:36196,\n37077:36321,\n37078:36447,\n37079:30889,\n37080:20999,\n37081:25305,\n37082:25509,\n37083:25666,\n37084:25240,\n37085:35373,\n37086:31363,\n37087:31680,\n37088:35500,\n37089:38634,\n37090:32118,\n37091:33292,\n37092:34633,\n37093:20185,\n37094:20808,\n37095:21315,\n37096:21344,\n37097:23459,\n37098:23554,\n37099:23574,\n37100:24029,\n37101:25126,\n37102:25159,\n37103:25776,\n37104:26643,\n37105:26676,\n37106:27849,\n37107:27973,\n37108:27927,\n37109:26579,\n37110:28508,\n37111:29006,\n37112:29053,\n37113:26059,\n37114:31359,\n37115:31661,\n37116:32218,\n37184:32330,\n37185:32680,\n37186:33146,\n37187:33307,\n37188:33337,\n37189:34214,\n37190:35438,\n37191:36046,\n37192:36341,\n37193:36984,\n37194:36983,\n37195:37549,\n37196:37521,\n37197:38275,\n37198:39854,\n37199:21069,\n37200:21892,\n37201:28472,\n37202:28982,\n37203:20840,\n37204:31109,\n37205:32341,\n37206:33203,\n37207:31950,\n37208:22092,\n37209:22609,\n37210:23720,\n37211:25514,\n37212:26366,\n37213:26365,\n37214:26970,\n37215:29401,\n37216:30095,\n37217:30094,\n37218:30990,\n37219:31062,\n37220:31199,\n37221:31895,\n37222:32032,\n37223:32068,\n37224:34311,\n37225:35380,\n37226:38459,\n37227:36961,\n37228:40736,\n37229:20711,\n37230:21109,\n37231:21452,\n37232:21474,\n37233:20489,\n37234:21930,\n37235:22766,\n37236:22863,\n37237:29245,\n37238:23435,\n37239:23652,\n37240:21277,\n37241:24803,\n37242:24819,\n37243:25436,\n37244:25475,\n37245:25407,\n37246:25531,\n37248:25805,\n37249:26089,\n37250:26361,\n37251:24035,\n37252:27085,\n37253:27133,\n37254:28437,\n37255:29157,\n37256:20105,\n37257:30185,\n37258:30456,\n37259:31379,\n37260:31967,\n37261:32207,\n37262:32156,\n37263:32865,\n37264:33609,\n37265:33624,\n37266:33900,\n37267:33980,\n37268:34299,\n37269:35013,\n37270:36208,\n37271:36865,\n37272:36973,\n37273:37783,\n37274:38684,\n37275:39442,\n37276:20687,\n37277:22679,\n37278:24974,\n37279:33235,\n37280:34101,\n37281:36104,\n37282:36896,\n37283:20419,\n37284:20596,\n37285:21063,\n37286:21363,\n37287:24687,\n37288:25417,\n37289:26463,\n37290:28204,\n37291:36275,\n37292:36895,\n37293:20439,\n37294:23646,\n37295:36042,\n37296:26063,\n37297:32154,\n37298:21330,\n37299:34966,\n37300:20854,\n37301:25539,\n37302:23384,\n37303:23403,\n37304:23562,\n37305:25613,\n37306:26449,\n37307:36956,\n37308:20182,\n37309:22810,\n37310:22826,\n37311:27760,\n37312:35409,\n37313:21822,\n37314:22549,\n37315:22949,\n37316:24816,\n37317:25171,\n37318:26561,\n37319:33333,\n37320:26965,\n37321:38464,\n37322:39364,\n37323:39464,\n37324:20307,\n37325:22534,\n37326:23550,\n37327:32784,\n37328:23729,\n37329:24111,\n37330:24453,\n37331:24608,\n37332:24907,\n37333:25140,\n37334:26367,\n37335:27888,\n37336:28382,\n37337:32974,\n37338:33151,\n37339:33492,\n37340:34955,\n37341:36024,\n37342:36864,\n37343:36910,\n37344:38538,\n37345:40667,\n37346:39899,\n37347:20195,\n37348:21488,\n37349:22823,\n37350:31532,\n37351:37261,\n37352:38988,\n37353:40441,\n37354:28381,\n37355:28711,\n37356:21331,\n37357:21828,\n37358:23429,\n37359:25176,\n37360:25246,\n37361:25299,\n37362:27810,\n37363:28655,\n37364:29730,\n37365:35351,\n37366:37944,\n37367:28609,\n37368:35582,\n37369:33592,\n37370:20967,\n37371:34552,\n37372:21482,\n37440:21481,\n37441:20294,\n37442:36948,\n37443:36784,\n37444:22890,\n37445:33073,\n37446:24061,\n37447:31466,\n37448:36799,\n37449:26842,\n37450:35895,\n37451:29432,\n37452:40008,\n37453:27197,\n37454:35504,\n37455:20025,\n37456:21336,\n37457:22022,\n37458:22374,\n37459:25285,\n37460:25506,\n37461:26086,\n37462:27470,\n37463:28129,\n37464:28251,\n37465:28845,\n37466:30701,\n37467:31471,\n37468:31658,\n37469:32187,\n37470:32829,\n37471:32966,\n37472:34507,\n37473:35477,\n37474:37723,\n37475:22243,\n37476:22727,\n37477:24382,\n37478:26029,\n37479:26262,\n37480:27264,\n37481:27573,\n37482:30007,\n37483:35527,\n37484:20516,\n37485:30693,\n37486:22320,\n37487:24347,\n37488:24677,\n37489:26234,\n37490:27744,\n37491:30196,\n37492:31258,\n37493:32622,\n37494:33268,\n37495:34584,\n37496:36933,\n37497:39347,\n37498:31689,\n37499:30044,\n37500:31481,\n37501:31569,\n37502:33988,\n37504:36880,\n37505:31209,\n37506:31378,\n37507:33590,\n37508:23265,\n37509:30528,\n37510:20013,\n37511:20210,\n37512:23449,\n37513:24544,\n37514:25277,\n37515:26172,\n37516:26609,\n37517:27880,\n37518:34411,\n37519:34935,\n37520:35387,\n37521:37198,\n37522:37619,\n37523:39376,\n37524:27159,\n37525:28710,\n37526:29482,\n37527:33511,\n37528:33879,\n37529:36015,\n37530:19969,\n37531:20806,\n37532:20939,\n37533:21899,\n37534:23541,\n37535:24086,\n37536:24115,\n37537:24193,\n37538:24340,\n37539:24373,\n37540:24427,\n37541:24500,\n37542:25074,\n37543:25361,\n37544:26274,\n37545:26397,\n37546:28526,\n37547:29266,\n37548:30010,\n37549:30522,\n37550:32884,\n37551:33081,\n37552:33144,\n37553:34678,\n37554:35519,\n37555:35548,\n37556:36229,\n37557:36339,\n37558:37530,\n37559:38263,\n37560:38914,\n37561:40165,\n37562:21189,\n37563:25431,\n37564:30452,\n37565:26389,\n37566:27784,\n37567:29645,\n37568:36035,\n37569:37806,\n37570:38515,\n37571:27941,\n37572:22684,\n37573:26894,\n37574:27084,\n37575:36861,\n37576:37786,\n37577:30171,\n37578:36890,\n37579:22618,\n37580:26626,\n37581:25524,\n37582:27131,\n37583:20291,\n37584:28460,\n37585:26584,\n37586:36795,\n37587:34086,\n37588:32180,\n37589:37716,\n37590:26943,\n37591:28528,\n37592:22378,\n37593:22775,\n37594:23340,\n37595:32044,\n37596:29226,\n37597:21514,\n37598:37347,\n37599:40372,\n37600:20141,\n37601:20302,\n37602:20572,\n37603:20597,\n37604:21059,\n37605:35998,\n37606:21576,\n37607:22564,\n37608:23450,\n37609:24093,\n37610:24213,\n37611:24237,\n37612:24311,\n37613:24351,\n37614:24716,\n37615:25269,\n37616:25402,\n37617:25552,\n37618:26799,\n37619:27712,\n37620:30855,\n37621:31118,\n37622:31243,\n37623:32224,\n37624:33351,\n37625:35330,\n37626:35558,\n37627:36420,\n37628:36883,\n37696:37048,\n37697:37165,\n37698:37336,\n37699:40718,\n37700:27877,\n37701:25688,\n37702:25826,\n37703:25973,\n37704:28404,\n37705:30340,\n37706:31515,\n37707:36969,\n37708:37841,\n37709:28346,\n37710:21746,\n37711:24505,\n37712:25764,\n37713:36685,\n37714:36845,\n37715:37444,\n37716:20856,\n37717:22635,\n37718:22825,\n37719:23637,\n37720:24215,\n37721:28155,\n37722:32399,\n37723:29980,\n37724:36028,\n37725:36578,\n37726:39003,\n37727:28857,\n37728:20253,\n37729:27583,\n37730:28593,\n37731:30000,\n37732:38651,\n37733:20814,\n37734:21520,\n37735:22581,\n37736:22615,\n37737:22956,\n37738:23648,\n37739:24466,\n37740:26007,\n37741:26460,\n37742:28193,\n37743:30331,\n37744:33759,\n37745:36077,\n37746:36884,\n37747:37117,\n37748:37709,\n37749:30757,\n37750:30778,\n37751:21162,\n37752:24230,\n37753:22303,\n37754:22900,\n37755:24594,\n37756:20498,\n37757:20826,\n37758:20908,\n37760:20941,\n37761:20992,\n37762:21776,\n37763:22612,\n37764:22616,\n37765:22871,\n37766:23445,\n37767:23798,\n37768:23947,\n37769:24764,\n37770:25237,\n37771:25645,\n37772:26481,\n37773:26691,\n37774:26812,\n37775:26847,\n37776:30423,\n37777:28120,\n37778:28271,\n37779:28059,\n37780:28783,\n37781:29128,\n37782:24403,\n37783:30168,\n37784:31095,\n37785:31561,\n37786:31572,\n37787:31570,\n37788:31958,\n37789:32113,\n37790:21040,\n37791:33891,\n37792:34153,\n37793:34276,\n37794:35342,\n37795:35588,\n37796:35910,\n37797:36367,\n37798:36867,\n37799:36879,\n37800:37913,\n37801:38518,\n37802:38957,\n37803:39472,\n37804:38360,\n37805:20685,\n37806:21205,\n37807:21516,\n37808:22530,\n37809:23566,\n37810:24999,\n37811:25758,\n37812:27934,\n37813:30643,\n37814:31461,\n37815:33012,\n37816:33796,\n37817:36947,\n37818:37509,\n37819:23776,\n37820:40199,\n37821:21311,\n37822:24471,\n37823:24499,\n37824:28060,\n37825:29305,\n37826:30563,\n37827:31167,\n37828:31716,\n37829:27602,\n37830:29420,\n37831:35501,\n37832:26627,\n37833:27233,\n37834:20984,\n37835:31361,\n37836:26932,\n37837:23626,\n37838:40182,\n37839:33515,\n37840:23493,\n37841:37193,\n37842:28702,\n37843:22136,\n37844:23663,\n37845:24775,\n37846:25958,\n37847:27788,\n37848:35930,\n37849:36929,\n37850:38931,\n37851:21585,\n37852:26311,\n37853:37389,\n37854:22856,\n37855:37027,\n37856:20869,\n37857:20045,\n37858:20970,\n37859:34201,\n37860:35598,\n37861:28760,\n37862:25466,\n37863:37707,\n37864:26978,\n37865:39348,\n37866:32260,\n37867:30071,\n37868:21335,\n37869:26976,\n37870:36575,\n37871:38627,\n37872:27741,\n37873:20108,\n37874:23612,\n37875:24336,\n37876:36841,\n37877:21250,\n37878:36049,\n37879:32905,\n37880:34425,\n37881:24319,\n37882:26085,\n37883:20083,\n37884:20837,\n37952:22914,\n37953:23615,\n37954:38894,\n37955:20219,\n37956:22922,\n37957:24525,\n37958:35469,\n37959:28641,\n37960:31152,\n37961:31074,\n37962:23527,\n37963:33905,\n37964:29483,\n37965:29105,\n37966:24180,\n37967:24565,\n37968:25467,\n37969:25754,\n37970:29123,\n37971:31896,\n37972:20035,\n37973:24316,\n37974:20043,\n37975:22492,\n37976:22178,\n37977:24745,\n37978:28611,\n37979:32013,\n37980:33021,\n37981:33075,\n37982:33215,\n37983:36786,\n37984:35223,\n37985:34468,\n37986:24052,\n37987:25226,\n37988:25773,\n37989:35207,\n37990:26487,\n37991:27874,\n37992:27966,\n37993:29750,\n37994:30772,\n37995:23110,\n37996:32629,\n37997:33453,\n37998:39340,\n37999:20467,\n38000:24259,\n38001:25309,\n38002:25490,\n38003:25943,\n38004:26479,\n38005:30403,\n38006:29260,\n38007:32972,\n38008:32954,\n38009:36649,\n38010:37197,\n38011:20493,\n38012:22521,\n38013:23186,\n38014:26757,\n38016:26995,\n38017:29028,\n38018:29437,\n38019:36023,\n38020:22770,\n38021:36064,\n38022:38506,\n38023:36889,\n38024:34687,\n38025:31204,\n38026:30695,\n38027:33833,\n38028:20271,\n38029:21093,\n38030:21338,\n38031:25293,\n38032:26575,\n38033:27850,\n38034:30333,\n38035:31636,\n38036:31893,\n38037:33334,\n38038:34180,\n38039:36843,\n38040:26333,\n38041:28448,\n38042:29190,\n38043:32283,\n38044:33707,\n38045:39361,\n38046:40614,\n38047:20989,\n38048:31665,\n38049:30834,\n38050:31672,\n38051:32903,\n38052:31560,\n38053:27368,\n38054:24161,\n38055:32908,\n38056:30033,\n38057:30048,\n38058:20843,\n38059:37474,\n38060:28300,\n38061:30330,\n38062:37271,\n38063:39658,\n38064:20240,\n38065:32624,\n38066:25244,\n38067:31567,\n38068:38309,\n38069:40169,\n38070:22138,\n38071:22617,\n38072:34532,\n38073:38588,\n38074:20276,\n38075:21028,\n38076:21322,\n38077:21453,\n38078:21467,\n38079:24070,\n38080:25644,\n38081:26001,\n38082:26495,\n38083:27710,\n38084:27726,\n38085:29256,\n38086:29359,\n38087:29677,\n38088:30036,\n38089:32321,\n38090:33324,\n38091:34281,\n38092:36009,\n38093:31684,\n38094:37318,\n38095:29033,\n38096:38930,\n38097:39151,\n38098:25405,\n38099:26217,\n38100:30058,\n38101:30436,\n38102:30928,\n38103:34115,\n38104:34542,\n38105:21290,\n38106:21329,\n38107:21542,\n38108:22915,\n38109:24199,\n38110:24444,\n38111:24754,\n38112:25161,\n38113:25209,\n38114:25259,\n38115:26000,\n38116:27604,\n38117:27852,\n38118:30130,\n38119:30382,\n38120:30865,\n38121:31192,\n38122:32203,\n38123:32631,\n38124:32933,\n38125:34987,\n38126:35513,\n38127:36027,\n38128:36991,\n38129:38750,\n38130:39131,\n38131:27147,\n38132:31800,\n38133:20633,\n38134:23614,\n38135:24494,\n38136:26503,\n38137:27608,\n38138:29749,\n38139:30473,\n38140:32654,\n38208:40763,\n38209:26570,\n38210:31255,\n38211:21305,\n38212:30091,\n38213:39661,\n38214:24422,\n38215:33181,\n38216:33777,\n38217:32920,\n38218:24380,\n38219:24517,\n38220:30050,\n38221:31558,\n38222:36924,\n38223:26727,\n38224:23019,\n38225:23195,\n38226:32016,\n38227:30334,\n38228:35628,\n38229:20469,\n38230:24426,\n38231:27161,\n38232:27703,\n38233:28418,\n38234:29922,\n38235:31080,\n38236:34920,\n38237:35413,\n38238:35961,\n38239:24287,\n38240:25551,\n38241:30149,\n38242:31186,\n38243:33495,\n38244:37672,\n38245:37618,\n38246:33948,\n38247:34541,\n38248:39981,\n38249:21697,\n38250:24428,\n38251:25996,\n38252:27996,\n38253:28693,\n38254:36007,\n38255:36051,\n38256:38971,\n38257:25935,\n38258:29942,\n38259:19981,\n38260:20184,\n38261:22496,\n38262:22827,\n38263:23142,\n38264:23500,\n38265:20904,\n38266:24067,\n38267:24220,\n38268:24598,\n38269:25206,\n38270:25975,\n38272:26023,\n38273:26222,\n38274:28014,\n38275:29238,\n38276:31526,\n38277:33104,\n38278:33178,\n38279:33433,\n38280:35676,\n38281:36000,\n38282:36070,\n38283:36212,\n38284:38428,\n38285:38468,\n38286:20398,\n38287:25771,\n38288:27494,\n38289:33310,\n38290:33889,\n38291:34154,\n38292:37096,\n38293:23553,\n38294:26963,\n38295:39080,\n38296:33914,\n38297:34135,\n38298:20239,\n38299:21103,\n38300:24489,\n38301:24133,\n38302:26381,\n38303:31119,\n38304:33145,\n38305:35079,\n38306:35206,\n38307:28149,\n38308:24343,\n38309:25173,\n38310:27832,\n38311:20175,\n38312:29289,\n38313:39826,\n38314:20998,\n38315:21563,\n38316:22132,\n38317:22707,\n38318:24996,\n38319:25198,\n38320:28954,\n38321:22894,\n38322:31881,\n38323:31966,\n38324:32027,\n38325:38640,\n38326:25991,\n38327:32862,\n38328:19993,\n38329:20341,\n38330:20853,\n38331:22592,\n38332:24163,\n38333:24179,\n38334:24330,\n38335:26564,\n38336:20006,\n38337:34109,\n38338:38281,\n38339:38491,\n38340:31859,\n38341:38913,\n38342:20731,\n38343:22721,\n38344:30294,\n38345:30887,\n38346:21029,\n38347:30629,\n38348:34065,\n38349:31622,\n38350:20559,\n38351:22793,\n38352:29255,\n38353:31687,\n38354:32232,\n38355:36794,\n38356:36820,\n38357:36941,\n38358:20415,\n38359:21193,\n38360:23081,\n38361:24321,\n38362:38829,\n38363:20445,\n38364:33303,\n38365:37610,\n38366:22275,\n38367:25429,\n38368:27497,\n38369:29995,\n38370:35036,\n38371:36628,\n38372:31298,\n38373:21215,\n38374:22675,\n38375:24917,\n38376:25098,\n38377:26286,\n38378:27597,\n38379:31807,\n38380:33769,\n38381:20515,\n38382:20472,\n38383:21253,\n38384:21574,\n38385:22577,\n38386:22857,\n38387:23453,\n38388:23792,\n38389:23791,\n38390:23849,\n38391:24214,\n38392:25265,\n38393:25447,\n38394:25918,\n38395:26041,\n38396:26379,\n38464:27861,\n38465:27873,\n38466:28921,\n38467:30770,\n38468:32299,\n38469:32990,\n38470:33459,\n38471:33804,\n38472:34028,\n38473:34562,\n38474:35090,\n38475:35370,\n38476:35914,\n38477:37030,\n38478:37586,\n38479:39165,\n38480:40179,\n38481:40300,\n38482:20047,\n38483:20129,\n38484:20621,\n38485:21078,\n38486:22346,\n38487:22952,\n38488:24125,\n38489:24536,\n38490:24537,\n38491:25151,\n38492:26292,\n38493:26395,\n38494:26576,\n38495:26834,\n38496:20882,\n38497:32033,\n38498:32938,\n38499:33192,\n38500:35584,\n38501:35980,\n38502:36031,\n38503:37502,\n38504:38450,\n38505:21536,\n38506:38956,\n38507:21271,\n38508:20693,\n38509:21340,\n38510:22696,\n38511:25778,\n38512:26420,\n38513:29287,\n38514:30566,\n38515:31302,\n38516:37350,\n38517:21187,\n38518:27809,\n38519:27526,\n38520:22528,\n38521:24140,\n38522:22868,\n38523:26412,\n38524:32763,\n38525:20961,\n38526:30406,\n38528:25705,\n38529:30952,\n38530:39764,\n38531:40635,\n38532:22475,\n38533:22969,\n38534:26151,\n38535:26522,\n38536:27598,\n38537:21737,\n38538:27097,\n38539:24149,\n38540:33180,\n38541:26517,\n38542:39850,\n38543:26622,\n38544:40018,\n38545:26717,\n38546:20134,\n38547:20451,\n38548:21448,\n38549:25273,\n38550:26411,\n38551:27819,\n38552:36804,\n38553:20397,\n38554:32365,\n38555:40639,\n38556:19975,\n38557:24930,\n38558:28288,\n38559:28459,\n38560:34067,\n38561:21619,\n38562:26410,\n38563:39749,\n38564:24051,\n38565:31637,\n38566:23724,\n38567:23494,\n38568:34588,\n38569:28234,\n38570:34001,\n38571:31252,\n38572:33032,\n38573:22937,\n38574:31885,\n38575:27665,\n38576:30496,\n38577:21209,\n38578:22818,\n38579:28961,\n38580:29279,\n38581:30683,\n38582:38695,\n38583:40289,\n38584:26891,\n38585:23167,\n38586:23064,\n38587:20901,\n38588:21517,\n38589:21629,\n38590:26126,\n38591:30431,\n38592:36855,\n38593:37528,\n38594:40180,\n38595:23018,\n38596:29277,\n38597:28357,\n38598:20813,\n38599:26825,\n38600:32191,\n38601:32236,\n38602:38754,\n38603:40634,\n38604:25720,\n38605:27169,\n38606:33538,\n38607:22916,\n38608:23391,\n38609:27611,\n38610:29467,\n38611:30450,\n38612:32178,\n38613:32791,\n38614:33945,\n38615:20786,\n38616:26408,\n38617:40665,\n38618:30446,\n38619:26466,\n38620:21247,\n38621:39173,\n38622:23588,\n38623:25147,\n38624:31870,\n38625:36016,\n38626:21839,\n38627:24758,\n38628:32011,\n38629:38272,\n38630:21249,\n38631:20063,\n38632:20918,\n38633:22812,\n38634:29242,\n38635:32822,\n38636:37326,\n38637:24357,\n38638:30690,\n38639:21380,\n38640:24441,\n38641:32004,\n38642:34220,\n38643:35379,\n38644:36493,\n38645:38742,\n38646:26611,\n38647:34222,\n38648:37971,\n38649:24841,\n38650:24840,\n38651:27833,\n38652:30290,\n38720:35565,\n38721:36664,\n38722:21807,\n38723:20305,\n38724:20778,\n38725:21191,\n38726:21451,\n38727:23461,\n38728:24189,\n38729:24736,\n38730:24962,\n38731:25558,\n38732:26377,\n38733:26586,\n38734:28263,\n38735:28044,\n38736:29494,\n38737:29495,\n38738:30001,\n38739:31056,\n38740:35029,\n38741:35480,\n38742:36938,\n38743:37009,\n38744:37109,\n38745:38596,\n38746:34701,\n38747:22805,\n38748:20104,\n38749:20313,\n38750:19982,\n38751:35465,\n38752:36671,\n38753:38928,\n38754:20653,\n38755:24188,\n38756:22934,\n38757:23481,\n38758:24248,\n38759:25562,\n38760:25594,\n38761:25793,\n38762:26332,\n38763:26954,\n38764:27096,\n38765:27915,\n38766:28342,\n38767:29076,\n38768:29992,\n38769:31407,\n38770:32650,\n38771:32768,\n38772:33865,\n38773:33993,\n38774:35201,\n38775:35617,\n38776:36362,\n38777:36965,\n38778:38525,\n38779:39178,\n38780:24958,\n38781:25233,\n38782:27442,\n38784:27779,\n38785:28020,\n38786:32716,\n38787:32764,\n38788:28096,\n38789:32645,\n38790:34746,\n38791:35064,\n38792:26469,\n38793:33713,\n38794:38972,\n38795:38647,\n38796:27931,\n38797:32097,\n38798:33853,\n38799:37226,\n38800:20081,\n38801:21365,\n38802:23888,\n38803:27396,\n38804:28651,\n38805:34253,\n38806:34349,\n38807:35239,\n38808:21033,\n38809:21519,\n38810:23653,\n38811:26446,\n38812:26792,\n38813:29702,\n38814:29827,\n38815:30178,\n38816:35023,\n38817:35041,\n38818:37324,\n38819:38626,\n38820:38520,\n38821:24459,\n38822:29575,\n38823:31435,\n38824:33870,\n38825:25504,\n38826:30053,\n38827:21129,\n38828:27969,\n38829:28316,\n38830:29705,\n38831:30041,\n38832:30827,\n38833:31890,\n38834:38534,\n38835:31452,\n38836:40845,\n38837:20406,\n38838:24942,\n38839:26053,\n38840:34396,\n38841:20102,\n38842:20142,\n38843:20698,\n38844:20001,\n38845:20940,\n38846:23534,\n38847:26009,\n38848:26753,\n38849:28092,\n38850:29471,\n38851:30274,\n38852:30637,\n38853:31260,\n38854:31975,\n38855:33391,\n38856:35538,\n38857:36988,\n38858:37327,\n38859:38517,\n38860:38936,\n38861:21147,\n38862:32209,\n38863:20523,\n38864:21400,\n38865:26519,\n38866:28107,\n38867:29136,\n38868:29747,\n38869:33256,\n38870:36650,\n38871:38563,\n38872:40023,\n38873:40607,\n38874:29792,\n38875:22593,\n38876:28057,\n38877:32047,\n38878:39006,\n38879:20196,\n38880:20278,\n38881:20363,\n38882:20919,\n38883:21169,\n38884:23994,\n38885:24604,\n38886:29618,\n38887:31036,\n38888:33491,\n38889:37428,\n38890:38583,\n38891:38646,\n38892:38666,\n38893:40599,\n38894:40802,\n38895:26278,\n38896:27508,\n38897:21015,\n38898:21155,\n38899:28872,\n38900:35010,\n38901:24265,\n38902:24651,\n38903:24976,\n38904:28451,\n38905:29001,\n38906:31806,\n38907:32244,\n38908:32879,\n38976:34030,\n38977:36899,\n38978:37676,\n38979:21570,\n38980:39791,\n38981:27347,\n38982:28809,\n38983:36034,\n38984:36335,\n38985:38706,\n38986:21172,\n38987:23105,\n38988:24266,\n38989:24324,\n38990:26391,\n38991:27004,\n38992:27028,\n38993:28010,\n38994:28431,\n38995:29282,\n38996:29436,\n38997:31725,\n38998:32769,\n38999:32894,\n39000:34635,\n39001:37070,\n39002:20845,\n39003:40595,\n39004:31108,\n39005:32907,\n39006:37682,\n39007:35542,\n39008:20525,\n39009:21644,\n39010:35441,\n39011:27498,\n39012:36036,\n39013:33031,\n39014:24785,\n39015:26528,\n39016:40434,\n39017:20121,\n39018:20120,\n39019:39952,\n39020:35435,\n39021:34241,\n39022:34152,\n39023:26880,\n39024:28286,\n39025:30871,\n39026:33109,\n39071:24332,\n39072:19984,\n39073:19989,\n39074:20010,\n39075:20017,\n39076:20022,\n39077:20028,\n39078:20031,\n39079:20034,\n39080:20054,\n39081:20056,\n39082:20098,\n39083:20101,\n39084:35947,\n39085:20106,\n39086:33298,\n39087:24333,\n39088:20110,\n39089:20126,\n39090:20127,\n39091:20128,\n39092:20130,\n39093:20144,\n39094:20147,\n39095:20150,\n39096:20174,\n39097:20173,\n39098:20164,\n39099:20166,\n39100:20162,\n39101:20183,\n39102:20190,\n39103:20205,\n39104:20191,\n39105:20215,\n39106:20233,\n39107:20314,\n39108:20272,\n39109:20315,\n39110:20317,\n39111:20311,\n39112:20295,\n39113:20342,\n39114:20360,\n39115:20367,\n39116:20376,\n39117:20347,\n39118:20329,\n39119:20336,\n39120:20369,\n39121:20335,\n39122:20358,\n39123:20374,\n39124:20760,\n39125:20436,\n39126:20447,\n39127:20430,\n39128:20440,\n39129:20443,\n39130:20433,\n39131:20442,\n39132:20432,\n39133:20452,\n39134:20453,\n39135:20506,\n39136:20520,\n39137:20500,\n39138:20522,\n39139:20517,\n39140:20485,\n39141:20252,\n39142:20470,\n39143:20513,\n39144:20521,\n39145:20524,\n39146:20478,\n39147:20463,\n39148:20497,\n39149:20486,\n39150:20547,\n39151:20551,\n39152:26371,\n39153:20565,\n39154:20560,\n39155:20552,\n39156:20570,\n39157:20566,\n39158:20588,\n39159:20600,\n39160:20608,\n39161:20634,\n39162:20613,\n39163:20660,\n39164:20658,\n39232:20681,\n39233:20682,\n39234:20659,\n39235:20674,\n39236:20694,\n39237:20702,\n39238:20709,\n39239:20717,\n39240:20707,\n39241:20718,\n39242:20729,\n39243:20725,\n39244:20745,\n39245:20737,\n39246:20738,\n39247:20758,\n39248:20757,\n39249:20756,\n39250:20762,\n39251:20769,\n39252:20794,\n39253:20791,\n39254:20796,\n39255:20795,\n39256:20799,\n39257:20800,\n39258:20818,\n39259:20812,\n39260:20820,\n39261:20834,\n39262:31480,\n39263:20841,\n39264:20842,\n39265:20846,\n39266:20864,\n39267:20866,\n39268:22232,\n39269:20876,\n39270:20873,\n39271:20879,\n39272:20881,\n39273:20883,\n39274:20885,\n39275:20886,\n39276:20900,\n39277:20902,\n39278:20898,\n39279:20905,\n39280:20906,\n39281:20907,\n39282:20915,\n39283:20913,\n39284:20914,\n39285:20912,\n39286:20917,\n39287:20925,\n39288:20933,\n39289:20937,\n39290:20955,\n39291:20960,\n39292:34389,\n39293:20969,\n39294:20973,\n39296:20976,\n39297:20981,\n39298:20990,\n39299:20996,\n39300:21003,\n39301:21012,\n39302:21006,\n39303:21031,\n39304:21034,\n39305:21038,\n39306:21043,\n39307:21049,\n39308:21071,\n39309:21060,\n39310:21067,\n39311:21068,\n39312:21086,\n39313:21076,\n39314:21098,\n39315:21108,\n39316:21097,\n39317:21107,\n39318:21119,\n39319:21117,\n39320:21133,\n39321:21140,\n39322:21138,\n39323:21105,\n39324:21128,\n39325:21137,\n39326:36776,\n39327:36775,\n39328:21164,\n39329:21165,\n39330:21180,\n39331:21173,\n39332:21185,\n39333:21197,\n39334:21207,\n39335:21214,\n39336:21219,\n39337:21222,\n39338:39149,\n39339:21216,\n39340:21235,\n39341:21237,\n39342:21240,\n39343:21241,\n39344:21254,\n39345:21256,\n39346:30008,\n39347:21261,\n39348:21264,\n39349:21263,\n39350:21269,\n39351:21274,\n39352:21283,\n39353:21295,\n39354:21297,\n39355:21299,\n39356:21304,\n39357:21312,\n39358:21318,\n39359:21317,\n39360:19991,\n39361:21321,\n39362:21325,\n39363:20950,\n39364:21342,\n39365:21353,\n39366:21358,\n39367:22808,\n39368:21371,\n39369:21367,\n39370:21378,\n39371:21398,\n39372:21408,\n39373:21414,\n39374:21413,\n39375:21422,\n39376:21424,\n39377:21430,\n39378:21443,\n39379:31762,\n39380:38617,\n39381:21471,\n39382:26364,\n39383:29166,\n39384:21486,\n39385:21480,\n39386:21485,\n39387:21498,\n39388:21505,\n39389:21565,\n39390:21568,\n39391:21548,\n39392:21549,\n39393:21564,\n39394:21550,\n39395:21558,\n39396:21545,\n39397:21533,\n39398:21582,\n39399:21647,\n39400:21621,\n39401:21646,\n39402:21599,\n39403:21617,\n39404:21623,\n39405:21616,\n39406:21650,\n39407:21627,\n39408:21632,\n39409:21622,\n39410:21636,\n39411:21648,\n39412:21638,\n39413:21703,\n39414:21666,\n39415:21688,\n39416:21669,\n39417:21676,\n39418:21700,\n39419:21704,\n39420:21672,\n39488:21675,\n39489:21698,\n39490:21668,\n39491:21694,\n39492:21692,\n39493:21720,\n39494:21733,\n39495:21734,\n39496:21775,\n39497:21780,\n39498:21757,\n39499:21742,\n39500:21741,\n39501:21754,\n39502:21730,\n39503:21817,\n39504:21824,\n39505:21859,\n39506:21836,\n39507:21806,\n39508:21852,\n39509:21829,\n39510:21846,\n39511:21847,\n39512:21816,\n39513:21811,\n39514:21853,\n39515:21913,\n39516:21888,\n39517:21679,\n39518:21898,\n39519:21919,\n39520:21883,\n39521:21886,\n39522:21912,\n39523:21918,\n39524:21934,\n39525:21884,\n39526:21891,\n39527:21929,\n39528:21895,\n39529:21928,\n39530:21978,\n39531:21957,\n39532:21983,\n39533:21956,\n39534:21980,\n39535:21988,\n39536:21972,\n39537:22036,\n39538:22007,\n39539:22038,\n39540:22014,\n39541:22013,\n39542:22043,\n39543:22009,\n39544:22094,\n39545:22096,\n39546:29151,\n39547:22068,\n39548:22070,\n39549:22066,\n39550:22072,\n39552:22123,\n39553:22116,\n39554:22063,\n39555:22124,\n39556:22122,\n39557:22150,\n39558:22144,\n39559:22154,\n39560:22176,\n39561:22164,\n39562:22159,\n39563:22181,\n39564:22190,\n39565:22198,\n39566:22196,\n39567:22210,\n39568:22204,\n39569:22209,\n39570:22211,\n39571:22208,\n39572:22216,\n39573:22222,\n39574:22225,\n39575:22227,\n39576:22231,\n39577:22254,\n39578:22265,\n39579:22272,\n39580:22271,\n39581:22276,\n39582:22281,\n39583:22280,\n39584:22283,\n39585:22285,\n39586:22291,\n39587:22296,\n39588:22294,\n39589:21959,\n39590:22300,\n39591:22310,\n39592:22327,\n39593:22328,\n39594:22350,\n39595:22331,\n39596:22336,\n39597:22351,\n39598:22377,\n39599:22464,\n39600:22408,\n39601:22369,\n39602:22399,\n39603:22409,\n39604:22419,\n39605:22432,\n39606:22451,\n39607:22436,\n39608:22442,\n39609:22448,\n39610:22467,\n39611:22470,\n39612:22484,\n39613:22482,\n39614:22483,\n39615:22538,\n39616:22486,\n39617:22499,\n39618:22539,\n39619:22553,\n39620:22557,\n39621:22642,\n39622:22561,\n39623:22626,\n39624:22603,\n39625:22640,\n39626:27584,\n39627:22610,\n39628:22589,\n39629:22649,\n39630:22661,\n39631:22713,\n39632:22687,\n39633:22699,\n39634:22714,\n39635:22750,\n39636:22715,\n39637:22712,\n39638:22702,\n39639:22725,\n39640:22739,\n39641:22737,\n39642:22743,\n39643:22745,\n39644:22744,\n39645:22757,\n39646:22748,\n39647:22756,\n39648:22751,\n39649:22767,\n39650:22778,\n39651:22777,\n39652:22779,\n39653:22780,\n39654:22781,\n39655:22786,\n39656:22794,\n39657:22800,\n39658:22811,\n39659:26790,\n39660:22821,\n39661:22828,\n39662:22829,\n39663:22834,\n39664:22840,\n39665:22846,\n39666:31442,\n39667:22869,\n39668:22864,\n39669:22862,\n39670:22874,\n39671:22872,\n39672:22882,\n39673:22880,\n39674:22887,\n39675:22892,\n39676:22889,\n39744:22904,\n39745:22913,\n39746:22941,\n39747:20318,\n39748:20395,\n39749:22947,\n39750:22962,\n39751:22982,\n39752:23016,\n39753:23004,\n39754:22925,\n39755:23001,\n39756:23002,\n39757:23077,\n39758:23071,\n39759:23057,\n39760:23068,\n39761:23049,\n39762:23066,\n39763:23104,\n39764:23148,\n39765:23113,\n39766:23093,\n39767:23094,\n39768:23138,\n39769:23146,\n39770:23194,\n39771:23228,\n39772:23230,\n39773:23243,\n39774:23234,\n39775:23229,\n39776:23267,\n39777:23255,\n39778:23270,\n39779:23273,\n39780:23254,\n39781:23290,\n39782:23291,\n39783:23308,\n39784:23307,\n39785:23318,\n39786:23346,\n39787:23248,\n39788:23338,\n39789:23350,\n39790:23358,\n39791:23363,\n39792:23365,\n39793:23360,\n39794:23377,\n39795:23381,\n39796:23386,\n39797:23387,\n39798:23397,\n39799:23401,\n39800:23408,\n39801:23411,\n39802:23413,\n39803:23416,\n39804:25992,\n39805:23418,\n39806:23424,\n39808:23427,\n39809:23462,\n39810:23480,\n39811:23491,\n39812:23495,\n39813:23497,\n39814:23508,\n39815:23504,\n39816:23524,\n39817:23526,\n39818:23522,\n39819:23518,\n39820:23525,\n39821:23531,\n39822:23536,\n39823:23542,\n39824:23539,\n39825:23557,\n39826:23559,\n39827:23560,\n39828:23565,\n39829:23571,\n39830:23584,\n39831:23586,\n39832:23592,\n39833:23608,\n39834:23609,\n39835:23617,\n39836:23622,\n39837:23630,\n39838:23635,\n39839:23632,\n39840:23631,\n39841:23409,\n39842:23660,\n39843:23662,\n39844:20066,\n39845:23670,\n39846:23673,\n39847:23692,\n39848:23697,\n39849:23700,\n39850:22939,\n39851:23723,\n39852:23739,\n39853:23734,\n39854:23740,\n39855:23735,\n39856:23749,\n39857:23742,\n39858:23751,\n39859:23769,\n39860:23785,\n39861:23805,\n39862:23802,\n39863:23789,\n39864:23948,\n39865:23786,\n39866:23819,\n39867:23829,\n39868:23831,\n39869:23900,\n39870:23839,\n39871:23835,\n39872:23825,\n39873:23828,\n39874:23842,\n39875:23834,\n39876:23833,\n39877:23832,\n39878:23884,\n39879:23890,\n39880:23886,\n39881:23883,\n39882:23916,\n39883:23923,\n39884:23926,\n39885:23943,\n39886:23940,\n39887:23938,\n39888:23970,\n39889:23965,\n39890:23980,\n39891:23982,\n39892:23997,\n39893:23952,\n39894:23991,\n39895:23996,\n39896:24009,\n39897:24013,\n39898:24019,\n39899:24018,\n39900:24022,\n39901:24027,\n39902:24043,\n39903:24050,\n39904:24053,\n39905:24075,\n39906:24090,\n39907:24089,\n39908:24081,\n39909:24091,\n39910:24118,\n39911:24119,\n39912:24132,\n39913:24131,\n39914:24128,\n39915:24142,\n39916:24151,\n39917:24148,\n39918:24159,\n39919:24162,\n39920:24164,\n39921:24135,\n39922:24181,\n39923:24182,\n39924:24186,\n39925:40636,\n39926:24191,\n39927:24224,\n39928:24257,\n39929:24258,\n39930:24264,\n39931:24272,\n39932:24271,\n40000:24278,\n40001:24291,\n40002:24285,\n40003:24282,\n40004:24283,\n40005:24290,\n40006:24289,\n40007:24296,\n40008:24297,\n40009:24300,\n40010:24305,\n40011:24307,\n40012:24304,\n40013:24308,\n40014:24312,\n40015:24318,\n40016:24323,\n40017:24329,\n40018:24413,\n40019:24412,\n40020:24331,\n40021:24337,\n40022:24342,\n40023:24361,\n40024:24365,\n40025:24376,\n40026:24385,\n40027:24392,\n40028:24396,\n40029:24398,\n40030:24367,\n40031:24401,\n40032:24406,\n40033:24407,\n40034:24409,\n40035:24417,\n40036:24429,\n40037:24435,\n40038:24439,\n40039:24451,\n40040:24450,\n40041:24447,\n40042:24458,\n40043:24456,\n40044:24465,\n40045:24455,\n40046:24478,\n40047:24473,\n40048:24472,\n40049:24480,\n40050:24488,\n40051:24493,\n40052:24508,\n40053:24534,\n40054:24571,\n40055:24548,\n40056:24568,\n40057:24561,\n40058:24541,\n40059:24755,\n40060:24575,\n40061:24609,\n40062:24672,\n40064:24601,\n40065:24592,\n40066:24617,\n40067:24590,\n40068:24625,\n40069:24603,\n40070:24597,\n40071:24619,\n40072:24614,\n40073:24591,\n40074:24634,\n40075:24666,\n40076:24641,\n40077:24682,\n40078:24695,\n40079:24671,\n40080:24650,\n40081:24646,\n40082:24653,\n40083:24675,\n40084:24643,\n40085:24676,\n40086:24642,\n40087:24684,\n40088:24683,\n40089:24665,\n40090:24705,\n40091:24717,\n40092:24807,\n40093:24707,\n40094:24730,\n40095:24708,\n40096:24731,\n40097:24726,\n40098:24727,\n40099:24722,\n40100:24743,\n40101:24715,\n40102:24801,\n40103:24760,\n40104:24800,\n40105:24787,\n40106:24756,\n40107:24560,\n40108:24765,\n40109:24774,\n40110:24757,\n40111:24792,\n40112:24909,\n40113:24853,\n40114:24838,\n40115:24822,\n40116:24823,\n40117:24832,\n40118:24820,\n40119:24826,\n40120:24835,\n40121:24865,\n40122:24827,\n40123:24817,\n40124:24845,\n40125:24846,\n40126:24903,\n40127:24894,\n40128:24872,\n40129:24871,\n40130:24906,\n40131:24895,\n40132:24892,\n40133:24876,\n40134:24884,\n40135:24893,\n40136:24898,\n40137:24900,\n40138:24947,\n40139:24951,\n40140:24920,\n40141:24921,\n40142:24922,\n40143:24939,\n40144:24948,\n40145:24943,\n40146:24933,\n40147:24945,\n40148:24927,\n40149:24925,\n40150:24915,\n40151:24949,\n40152:24985,\n40153:24982,\n40154:24967,\n40155:25004,\n40156:24980,\n40157:24986,\n40158:24970,\n40159:24977,\n40160:25003,\n40161:25006,\n40162:25036,\n40163:25034,\n40164:25033,\n40165:25079,\n40166:25032,\n40167:25027,\n40168:25030,\n40169:25018,\n40170:25035,\n40171:32633,\n40172:25037,\n40173:25062,\n40174:25059,\n40175:25078,\n40176:25082,\n40177:25076,\n40178:25087,\n40179:25085,\n40180:25084,\n40181:25086,\n40182:25088,\n40183:25096,\n40184:25097,\n40185:25101,\n40186:25100,\n40187:25108,\n40188:25115,\n40256:25118,\n40257:25121,\n40258:25130,\n40259:25134,\n40260:25136,\n40261:25138,\n40262:25139,\n40263:25153,\n40264:25166,\n40265:25182,\n40266:25187,\n40267:25179,\n40268:25184,\n40269:25192,\n40270:25212,\n40271:25218,\n40272:25225,\n40273:25214,\n40274:25234,\n40275:25235,\n40276:25238,\n40277:25300,\n40278:25219,\n40279:25236,\n40280:25303,\n40281:25297,\n40282:25275,\n40283:25295,\n40284:25343,\n40285:25286,\n40286:25812,\n40287:25288,\n40288:25308,\n40289:25292,\n40290:25290,\n40291:25282,\n40292:25287,\n40293:25243,\n40294:25289,\n40295:25356,\n40296:25326,\n40297:25329,\n40298:25383,\n40299:25346,\n40300:25352,\n40301:25327,\n40302:25333,\n40303:25424,\n40304:25406,\n40305:25421,\n40306:25628,\n40307:25423,\n40308:25494,\n40309:25486,\n40310:25472,\n40311:25515,\n40312:25462,\n40313:25507,\n40314:25487,\n40315:25481,\n40316:25503,\n40317:25525,\n40318:25451,\n40320:25449,\n40321:25534,\n40322:25577,\n40323:25536,\n40324:25542,\n40325:25571,\n40326:25545,\n40327:25554,\n40328:25590,\n40329:25540,\n40330:25622,\n40331:25652,\n40332:25606,\n40333:25619,\n40334:25638,\n40335:25654,\n40336:25885,\n40337:25623,\n40338:25640,\n40339:25615,\n40340:25703,\n40341:25711,\n40342:25718,\n40343:25678,\n40344:25898,\n40345:25749,\n40346:25747,\n40347:25765,\n40348:25769,\n40349:25736,\n40350:25788,\n40351:25818,\n40352:25810,\n40353:25797,\n40354:25799,\n40355:25787,\n40356:25816,\n40357:25794,\n40358:25841,\n40359:25831,\n40360:33289,\n40361:25824,\n40362:25825,\n40363:25260,\n40364:25827,\n40365:25839,\n40366:25900,\n40367:25846,\n40368:25844,\n40369:25842,\n40370:25850,\n40371:25856,\n40372:25853,\n40373:25880,\n40374:25884,\n40375:25861,\n40376:25892,\n40377:25891,\n40378:25899,\n40379:25908,\n40380:25909,\n40381:25911,\n40382:25910,\n40383:25912,\n40384:30027,\n40385:25928,\n40386:25942,\n40387:25941,\n40388:25933,\n40389:25944,\n40390:25950,\n40391:25949,\n40392:25970,\n40393:25976,\n40394:25986,\n40395:25987,\n40396:35722,\n40397:26011,\n40398:26015,\n40399:26027,\n40400:26039,\n40401:26051,\n40402:26054,\n40403:26049,\n40404:26052,\n40405:26060,\n40406:26066,\n40407:26075,\n40408:26073,\n40409:26080,\n40410:26081,\n40411:26097,\n40412:26482,\n40413:26122,\n40414:26115,\n40415:26107,\n40416:26483,\n40417:26165,\n40418:26166,\n40419:26164,\n40420:26140,\n40421:26191,\n40422:26180,\n40423:26185,\n40424:26177,\n40425:26206,\n40426:26205,\n40427:26212,\n40428:26215,\n40429:26216,\n40430:26207,\n40431:26210,\n40432:26224,\n40433:26243,\n40434:26248,\n40435:26254,\n40436:26249,\n40437:26244,\n40438:26264,\n40439:26269,\n40440:26305,\n40441:26297,\n40442:26313,\n40443:26302,\n40444:26300,\n40512:26308,\n40513:26296,\n40514:26326,\n40515:26330,\n40516:26336,\n40517:26175,\n40518:26342,\n40519:26345,\n40520:26352,\n40521:26357,\n40522:26359,\n40523:26383,\n40524:26390,\n40525:26398,\n40526:26406,\n40527:26407,\n40528:38712,\n40529:26414,\n40530:26431,\n40531:26422,\n40532:26433,\n40533:26424,\n40534:26423,\n40535:26438,\n40536:26462,\n40537:26464,\n40538:26457,\n40539:26467,\n40540:26468,\n40541:26505,\n40542:26480,\n40543:26537,\n40544:26492,\n40545:26474,\n40546:26508,\n40547:26507,\n40548:26534,\n40549:26529,\n40550:26501,\n40551:26551,\n40552:26607,\n40553:26548,\n40554:26604,\n40555:26547,\n40556:26601,\n40557:26552,\n40558:26596,\n40559:26590,\n40560:26589,\n40561:26594,\n40562:26606,\n40563:26553,\n40564:26574,\n40565:26566,\n40566:26599,\n40567:27292,\n40568:26654,\n40569:26694,\n40570:26665,\n40571:26688,\n40572:26701,\n40573:26674,\n40574:26702,\n40576:26803,\n40577:26667,\n40578:26713,\n40579:26723,\n40580:26743,\n40581:26751,\n40582:26783,\n40583:26767,\n40584:26797,\n40585:26772,\n40586:26781,\n40587:26779,\n40588:26755,\n40589:27310,\n40590:26809,\n40591:26740,\n40592:26805,\n40593:26784,\n40594:26810,\n40595:26895,\n40596:26765,\n40597:26750,\n40598:26881,\n40599:26826,\n40600:26888,\n40601:26840,\n40602:26914,\n40603:26918,\n40604:26849,\n40605:26892,\n40606:26829,\n40607:26836,\n40608:26855,\n40609:26837,\n40610:26934,\n40611:26898,\n40612:26884,\n40613:26839,\n40614:26851,\n40615:26917,\n40616:26873,\n40617:26848,\n40618:26863,\n40619:26920,\n40620:26922,\n40621:26906,\n40622:26915,\n40623:26913,\n40624:26822,\n40625:27001,\n40626:26999,\n40627:26972,\n40628:27000,\n40629:26987,\n40630:26964,\n40631:27006,\n40632:26990,\n40633:26937,\n40634:26996,\n40635:26941,\n40636:26969,\n40637:26928,\n40638:26977,\n40639:26974,\n40640:26973,\n40641:27009,\n40642:26986,\n40643:27058,\n40644:27054,\n40645:27088,\n40646:27071,\n40647:27073,\n40648:27091,\n40649:27070,\n40650:27086,\n40651:23528,\n40652:27082,\n40653:27101,\n40654:27067,\n40655:27075,\n40656:27047,\n40657:27182,\n40658:27025,\n40659:27040,\n40660:27036,\n40661:27029,\n40662:27060,\n40663:27102,\n40664:27112,\n40665:27138,\n40666:27163,\n40667:27135,\n40668:27402,\n40669:27129,\n40670:27122,\n40671:27111,\n40672:27141,\n40673:27057,\n40674:27166,\n40675:27117,\n40676:27156,\n40677:27115,\n40678:27146,\n40679:27154,\n40680:27329,\n40681:27171,\n40682:27155,\n40683:27204,\n40684:27148,\n40685:27250,\n40686:27190,\n40687:27256,\n40688:27207,\n40689:27234,\n40690:27225,\n40691:27238,\n40692:27208,\n40693:27192,\n40694:27170,\n40695:27280,\n40696:27277,\n40697:27296,\n40698:27268,\n40699:27298,\n40700:27299,\n40768:27287,\n40769:34327,\n40770:27323,\n40771:27331,\n40772:27330,\n40773:27320,\n40774:27315,\n40775:27308,\n40776:27358,\n40777:27345,\n40778:27359,\n40779:27306,\n40780:27354,\n40781:27370,\n40782:27387,\n40783:27397,\n40784:34326,\n40785:27386,\n40786:27410,\n40787:27414,\n40788:39729,\n40789:27423,\n40790:27448,\n40791:27447,\n40792:30428,\n40793:27449,\n40794:39150,\n40795:27463,\n40796:27459,\n40797:27465,\n40798:27472,\n40799:27481,\n40800:27476,\n40801:27483,\n40802:27487,\n40803:27489,\n40804:27512,\n40805:27513,\n40806:27519,\n40807:27520,\n40808:27524,\n40809:27523,\n40810:27533,\n40811:27544,\n40812:27541,\n40813:27550,\n40814:27556,\n40815:27562,\n40816:27563,\n40817:27567,\n40818:27570,\n40819:27569,\n40820:27571,\n40821:27575,\n40822:27580,\n40823:27590,\n40824:27595,\n40825:27603,\n40826:27615,\n40827:27628,\n40828:27627,\n40829:27635,\n40830:27631,\n40832:40638,\n40833:27656,\n40834:27667,\n40835:27668,\n40836:27675,\n40837:27684,\n40838:27683,\n40839:27742,\n40840:27733,\n40841:27746,\n40842:27754,\n40843:27778,\n40844:27789,\n40845:27802,\n40846:27777,\n40847:27803,\n40848:27774,\n40849:27752,\n40850:27763,\n40851:27794,\n40852:27792,\n40853:27844,\n40854:27889,\n40855:27859,\n40856:27837,\n40857:27863,\n40858:27845,\n40859:27869,\n40860:27822,\n40861:27825,\n40862:27838,\n40863:27834,\n40864:27867,\n40865:27887,\n40866:27865,\n40867:27882,\n40868:27935,\n40869:34893,\n40870:27958,\n40871:27947,\n40872:27965,\n40873:27960,\n40874:27929,\n40875:27957,\n40876:27955,\n40877:27922,\n40878:27916,\n40879:28003,\n40880:28051,\n40881:28004,\n40882:27994,\n40883:28025,\n40884:27993,\n40885:28046,\n40886:28053,\n40887:28644,\n40888:28037,\n40889:28153,\n40890:28181,\n40891:28170,\n40892:28085,\n40893:28103,\n40894:28134,\n40895:28088,\n40896:28102,\n40897:28140,\n40898:28126,\n40899:28108,\n40900:28136,\n40901:28114,\n40902:28101,\n40903:28154,\n40904:28121,\n40905:28132,\n40906:28117,\n40907:28138,\n40908:28142,\n40909:28205,\n40910:28270,\n40911:28206,\n40912:28185,\n40913:28274,\n40914:28255,\n40915:28222,\n40916:28195,\n40917:28267,\n40918:28203,\n40919:28278,\n40920:28237,\n40921:28191,\n40922:28227,\n40923:28218,\n40924:28238,\n40925:28196,\n40926:28415,\n40927:28189,\n40928:28216,\n40929:28290,\n40930:28330,\n40931:28312,\n40932:28361,\n40933:28343,\n40934:28371,\n40935:28349,\n40936:28335,\n40937:28356,\n40938:28338,\n40939:28372,\n40940:28373,\n40941:28303,\n40942:28325,\n40943:28354,\n40944:28319,\n40945:28481,\n40946:28433,\n40947:28748,\n40948:28396,\n40949:28408,\n40950:28414,\n40951:28479,\n40952:28402,\n40953:28465,\n40954:28399,\n40955:28466,\n40956:28364,\n57408:28478,\n57409:28435,\n57410:28407,\n57411:28550,\n57412:28538,\n57413:28536,\n57414:28545,\n57415:28544,\n57416:28527,\n57417:28507,\n57418:28659,\n57419:28525,\n57420:28546,\n57421:28540,\n57422:28504,\n57423:28558,\n57424:28561,\n57425:28610,\n57426:28518,\n57427:28595,\n57428:28579,\n57429:28577,\n57430:28580,\n57431:28601,\n57432:28614,\n57433:28586,\n57434:28639,\n57435:28629,\n57436:28652,\n57437:28628,\n57438:28632,\n57439:28657,\n57440:28654,\n57441:28635,\n57442:28681,\n57443:28683,\n57444:28666,\n57445:28689,\n57446:28673,\n57447:28687,\n57448:28670,\n57449:28699,\n57450:28698,\n57451:28532,\n57452:28701,\n57453:28696,\n57454:28703,\n57455:28720,\n57456:28734,\n57457:28722,\n57458:28753,\n57459:28771,\n57460:28825,\n57461:28818,\n57462:28847,\n57463:28913,\n57464:28844,\n57465:28856,\n57466:28851,\n57467:28846,\n57468:28895,\n57469:28875,\n57470:28893,\n57472:28889,\n57473:28937,\n57474:28925,\n57475:28956,\n57476:28953,\n57477:29029,\n57478:29013,\n57479:29064,\n57480:29030,\n57481:29026,\n57482:29004,\n57483:29014,\n57484:29036,\n57485:29071,\n57486:29179,\n57487:29060,\n57488:29077,\n57489:29096,\n57490:29100,\n57491:29143,\n57492:29113,\n57493:29118,\n57494:29138,\n57495:29129,\n57496:29140,\n57497:29134,\n57498:29152,\n57499:29164,\n57500:29159,\n57501:29173,\n57502:29180,\n57503:29177,\n57504:29183,\n57505:29197,\n57506:29200,\n57507:29211,\n57508:29224,\n57509:29229,\n57510:29228,\n57511:29232,\n57512:29234,\n57513:29243,\n57514:29244,\n57515:29247,\n57516:29248,\n57517:29254,\n57518:29259,\n57519:29272,\n57520:29300,\n57521:29310,\n57522:29314,\n57523:29313,\n57524:29319,\n57525:29330,\n57526:29334,\n57527:29346,\n57528:29351,\n57529:29369,\n57530:29362,\n57531:29379,\n57532:29382,\n57533:29380,\n57534:29390,\n57535:29394,\n57536:29410,\n57537:29408,\n57538:29409,\n57539:29433,\n57540:29431,\n57541:20495,\n57542:29463,\n57543:29450,\n57544:29468,\n57545:29462,\n57546:29469,\n57547:29492,\n57548:29487,\n57549:29481,\n57550:29477,\n57551:29502,\n57552:29518,\n57553:29519,\n57554:40664,\n57555:29527,\n57556:29546,\n57557:29544,\n57558:29552,\n57559:29560,\n57560:29557,\n57561:29563,\n57562:29562,\n57563:29640,\n57564:29619,\n57565:29646,\n57566:29627,\n57567:29632,\n57568:29669,\n57569:29678,\n57570:29662,\n57571:29858,\n57572:29701,\n57573:29807,\n57574:29733,\n57575:29688,\n57576:29746,\n57577:29754,\n57578:29781,\n57579:29759,\n57580:29791,\n57581:29785,\n57582:29761,\n57583:29788,\n57584:29801,\n57585:29808,\n57586:29795,\n57587:29802,\n57588:29814,\n57589:29822,\n57590:29835,\n57591:29854,\n57592:29863,\n57593:29898,\n57594:29903,\n57595:29908,\n57596:29681,\n57664:29920,\n57665:29923,\n57666:29927,\n57667:29929,\n57668:29934,\n57669:29938,\n57670:29936,\n57671:29937,\n57672:29944,\n57673:29943,\n57674:29956,\n57675:29955,\n57676:29957,\n57677:29964,\n57678:29966,\n57679:29965,\n57680:29973,\n57681:29971,\n57682:29982,\n57683:29990,\n57684:29996,\n57685:30012,\n57686:30020,\n57687:30029,\n57688:30026,\n57689:30025,\n57690:30043,\n57691:30022,\n57692:30042,\n57693:30057,\n57694:30052,\n57695:30055,\n57696:30059,\n57697:30061,\n57698:30072,\n57699:30070,\n57700:30086,\n57701:30087,\n57702:30068,\n57703:30090,\n57704:30089,\n57705:30082,\n57706:30100,\n57707:30106,\n57708:30109,\n57709:30117,\n57710:30115,\n57711:30146,\n57712:30131,\n57713:30147,\n57714:30133,\n57715:30141,\n57716:30136,\n57717:30140,\n57718:30129,\n57719:30157,\n57720:30154,\n57721:30162,\n57722:30169,\n57723:30179,\n57724:30174,\n57725:30206,\n57726:30207,\n57728:30204,\n57729:30209,\n57730:30192,\n57731:30202,\n57732:30194,\n57733:30195,\n57734:30219,\n57735:30221,\n57736:30217,\n57737:30239,\n57738:30247,\n57739:30240,\n57740:30241,\n57741:30242,\n57742:30244,\n57743:30260,\n57744:30256,\n57745:30267,\n57746:30279,\n57747:30280,\n57748:30278,\n57749:30300,\n57750:30296,\n57751:30305,\n57752:30306,\n57753:30312,\n57754:30313,\n57755:30314,\n57756:30311,\n57757:30316,\n57758:30320,\n57759:30322,\n57760:30326,\n57761:30328,\n57762:30332,\n57763:30336,\n57764:30339,\n57765:30344,\n57766:30347,\n57767:30350,\n57768:30358,\n57769:30355,\n57770:30361,\n57771:30362,\n57772:30384,\n57773:30388,\n57774:30392,\n57775:30393,\n57776:30394,\n57777:30402,\n57778:30413,\n57779:30422,\n57780:30418,\n57781:30430,\n57782:30433,\n57783:30437,\n57784:30439,\n57785:30442,\n57786:34351,\n57787:30459,\n57788:30472,\n57789:30471,\n57790:30468,\n57791:30505,\n57792:30500,\n57793:30494,\n57794:30501,\n57795:30502,\n57796:30491,\n57797:30519,\n57798:30520,\n57799:30535,\n57800:30554,\n57801:30568,\n57802:30571,\n57803:30555,\n57804:30565,\n57805:30591,\n57806:30590,\n57807:30585,\n57808:30606,\n57809:30603,\n57810:30609,\n57811:30624,\n57812:30622,\n57813:30640,\n57814:30646,\n57815:30649,\n57816:30655,\n57817:30652,\n57818:30653,\n57819:30651,\n57820:30663,\n57821:30669,\n57822:30679,\n57823:30682,\n57824:30684,\n57825:30691,\n57826:30702,\n57827:30716,\n57828:30732,\n57829:30738,\n57830:31014,\n57831:30752,\n57832:31018,\n57833:30789,\n57834:30862,\n57835:30836,\n57836:30854,\n57837:30844,\n57838:30874,\n57839:30860,\n57840:30883,\n57841:30901,\n57842:30890,\n57843:30895,\n57844:30929,\n57845:30918,\n57846:30923,\n57847:30932,\n57848:30910,\n57849:30908,\n57850:30917,\n57851:30922,\n57852:30956,\n57920:30951,\n57921:30938,\n57922:30973,\n57923:30964,\n57924:30983,\n57925:30994,\n57926:30993,\n57927:31001,\n57928:31020,\n57929:31019,\n57930:31040,\n57931:31072,\n57932:31063,\n57933:31071,\n57934:31066,\n57935:31061,\n57936:31059,\n57937:31098,\n57938:31103,\n57939:31114,\n57940:31133,\n57941:31143,\n57942:40779,\n57943:31146,\n57944:31150,\n57945:31155,\n57946:31161,\n57947:31162,\n57948:31177,\n57949:31189,\n57950:31207,\n57951:31212,\n57952:31201,\n57953:31203,\n57954:31240,\n57955:31245,\n57956:31256,\n57957:31257,\n57958:31264,\n57959:31263,\n57960:31104,\n57961:31281,\n57962:31291,\n57963:31294,\n57964:31287,\n57965:31299,\n57966:31319,\n57967:31305,\n57968:31329,\n57969:31330,\n57970:31337,\n57971:40861,\n57972:31344,\n57973:31353,\n57974:31357,\n57975:31368,\n57976:31383,\n57977:31381,\n57978:31384,\n57979:31382,\n57980:31401,\n57981:31432,\n57982:31408,\n57984:31414,\n57985:31429,\n57986:31428,\n57987:31423,\n57988:36995,\n57989:31431,\n57990:31434,\n57991:31437,\n57992:31439,\n57993:31445,\n57994:31443,\n57995:31449,\n57996:31450,\n57997:31453,\n57998:31457,\n57999:31458,\n58000:31462,\n58001:31469,\n58002:31472,\n58003:31490,\n58004:31503,\n58005:31498,\n58006:31494,\n58007:31539,\n58008:31512,\n58009:31513,\n58010:31518,\n58011:31541,\n58012:31528,\n58013:31542,\n58014:31568,\n58015:31610,\n58016:31492,\n58017:31565,\n58018:31499,\n58019:31564,\n58020:31557,\n58021:31605,\n58022:31589,\n58023:31604,\n58024:31591,\n58025:31600,\n58026:31601,\n58027:31596,\n58028:31598,\n58029:31645,\n58030:31640,\n58031:31647,\n58032:31629,\n58033:31644,\n58034:31642,\n58035:31627,\n58036:31634,\n58037:31631,\n58038:31581,\n58039:31641,\n58040:31691,\n58041:31681,\n58042:31692,\n58043:31695,\n58044:31668,\n58045:31686,\n58046:31709,\n58047:31721,\n58048:31761,\n58049:31764,\n58050:31718,\n58051:31717,\n58052:31840,\n58053:31744,\n58054:31751,\n58055:31763,\n58056:31731,\n58057:31735,\n58058:31767,\n58059:31757,\n58060:31734,\n58061:31779,\n58062:31783,\n58063:31786,\n58064:31775,\n58065:31799,\n58066:31787,\n58067:31805,\n58068:31820,\n58069:31811,\n58070:31828,\n58071:31823,\n58072:31808,\n58073:31824,\n58074:31832,\n58075:31839,\n58076:31844,\n58077:31830,\n58078:31845,\n58079:31852,\n58080:31861,\n58081:31875,\n58082:31888,\n58083:31908,\n58084:31917,\n58085:31906,\n58086:31915,\n58087:31905,\n58088:31912,\n58089:31923,\n58090:31922,\n58091:31921,\n58092:31918,\n58093:31929,\n58094:31933,\n58095:31936,\n58096:31941,\n58097:31938,\n58098:31960,\n58099:31954,\n58100:31964,\n58101:31970,\n58102:39739,\n58103:31983,\n58104:31986,\n58105:31988,\n58106:31990,\n58107:31994,\n58108:32006,\n58176:32002,\n58177:32028,\n58178:32021,\n58179:32010,\n58180:32069,\n58181:32075,\n58182:32046,\n58183:32050,\n58184:32063,\n58185:32053,\n58186:32070,\n58187:32115,\n58188:32086,\n58189:32078,\n58190:32114,\n58191:32104,\n58192:32110,\n58193:32079,\n58194:32099,\n58195:32147,\n58196:32137,\n58197:32091,\n58198:32143,\n58199:32125,\n58200:32155,\n58201:32186,\n58202:32174,\n58203:32163,\n58204:32181,\n58205:32199,\n58206:32189,\n58207:32171,\n58208:32317,\n58209:32162,\n58210:32175,\n58211:32220,\n58212:32184,\n58213:32159,\n58214:32176,\n58215:32216,\n58216:32221,\n58217:32228,\n58218:32222,\n58219:32251,\n58220:32242,\n58221:32225,\n58222:32261,\n58223:32266,\n58224:32291,\n58225:32289,\n58226:32274,\n58227:32305,\n58228:32287,\n58229:32265,\n58230:32267,\n58231:32290,\n58232:32326,\n58233:32358,\n58234:32315,\n58235:32309,\n58236:32313,\n58237:32323,\n58238:32311,\n58240:32306,\n58241:32314,\n58242:32359,\n58243:32349,\n58244:32342,\n58245:32350,\n58246:32345,\n58247:32346,\n58248:32377,\n58249:32362,\n58250:32361,\n58251:32380,\n58252:32379,\n58253:32387,\n58254:32213,\n58255:32381,\n58256:36782,\n58257:32383,\n58258:32392,\n58259:32393,\n58260:32396,\n58261:32402,\n58262:32400,\n58263:32403,\n58264:32404,\n58265:32406,\n58266:32398,\n58267:32411,\n58268:32412,\n58269:32568,\n58270:32570,\n58271:32581,\n58272:32588,\n58273:32589,\n58274:32590,\n58275:32592,\n58276:32593,\n58277:32597,\n58278:32596,\n58279:32600,\n58280:32607,\n58281:32608,\n58282:32616,\n58283:32617,\n58284:32615,\n58285:32632,\n58286:32642,\n58287:32646,\n58288:32643,\n58289:32648,\n58290:32647,\n58291:32652,\n58292:32660,\n58293:32670,\n58294:32669,\n58295:32666,\n58296:32675,\n58297:32687,\n58298:32690,\n58299:32697,\n58300:32686,\n58301:32694,\n58302:32696,\n58303:35697,\n58304:32709,\n58305:32710,\n58306:32714,\n58307:32725,\n58308:32724,\n58309:32737,\n58310:32742,\n58311:32745,\n58312:32755,\n58313:32761,\n58314:39132,\n58315:32774,\n58316:32772,\n58317:32779,\n58318:32786,\n58319:32792,\n58320:32793,\n58321:32796,\n58322:32801,\n58323:32808,\n58324:32831,\n58325:32827,\n58326:32842,\n58327:32838,\n58328:32850,\n58329:32856,\n58330:32858,\n58331:32863,\n58332:32866,\n58333:32872,\n58334:32883,\n58335:32882,\n58336:32880,\n58337:32886,\n58338:32889,\n58339:32893,\n58340:32895,\n58341:32900,\n58342:32902,\n58343:32901,\n58344:32923,\n58345:32915,\n58346:32922,\n58347:32941,\n58348:20880,\n58349:32940,\n58350:32987,\n58351:32997,\n58352:32985,\n58353:32989,\n58354:32964,\n58355:32986,\n58356:32982,\n58357:33033,\n58358:33007,\n58359:33009,\n58360:33051,\n58361:33065,\n58362:33059,\n58363:33071,\n58364:33099,\n58432:38539,\n58433:33094,\n58434:33086,\n58435:33107,\n58436:33105,\n58437:33020,\n58438:33137,\n58439:33134,\n58440:33125,\n58441:33126,\n58442:33140,\n58443:33155,\n58444:33160,\n58445:33162,\n58446:33152,\n58447:33154,\n58448:33184,\n58449:33173,\n58450:33188,\n58451:33187,\n58452:33119,\n58453:33171,\n58454:33193,\n58455:33200,\n58456:33205,\n58457:33214,\n58458:33208,\n58459:33213,\n58460:33216,\n58461:33218,\n58462:33210,\n58463:33225,\n58464:33229,\n58465:33233,\n58466:33241,\n58467:33240,\n58468:33224,\n58469:33242,\n58470:33247,\n58471:33248,\n58472:33255,\n58473:33274,\n58474:33275,\n58475:33278,\n58476:33281,\n58477:33282,\n58478:33285,\n58479:33287,\n58480:33290,\n58481:33293,\n58482:33296,\n58483:33302,\n58484:33321,\n58485:33323,\n58486:33336,\n58487:33331,\n58488:33344,\n58489:33369,\n58490:33368,\n58491:33373,\n58492:33370,\n58493:33375,\n58494:33380,\n58496:33378,\n58497:33384,\n58498:33386,\n58499:33387,\n58500:33326,\n58501:33393,\n58502:33399,\n58503:33400,\n58504:33406,\n58505:33421,\n58506:33426,\n58507:33451,\n58508:33439,\n58509:33467,\n58510:33452,\n58511:33505,\n58512:33507,\n58513:33503,\n58514:33490,\n58515:33524,\n58516:33523,\n58517:33530,\n58518:33683,\n58519:33539,\n58520:33531,\n58521:33529,\n58522:33502,\n58523:33542,\n58524:33500,\n58525:33545,\n58526:33497,\n58527:33589,\n58528:33588,\n58529:33558,\n58530:33586,\n58531:33585,\n58532:33600,\n58533:33593,\n58534:33616,\n58535:33605,\n58536:33583,\n58537:33579,\n58538:33559,\n58539:33560,\n58540:33669,\n58541:33690,\n58542:33706,\n58543:33695,\n58544:33698,\n58545:33686,\n58546:33571,\n58547:33678,\n58548:33671,\n58549:33674,\n58550:33660,\n58551:33717,\n58552:33651,\n58553:33653,\n58554:33696,\n58555:33673,\n58556:33704,\n58557:33780,\n58558:33811,\n58559:33771,\n58560:33742,\n58561:33789,\n58562:33795,\n58563:33752,\n58564:33803,\n58565:33729,\n58566:33783,\n58567:33799,\n58568:33760,\n58569:33778,\n58570:33805,\n58571:33826,\n58572:33824,\n58573:33725,\n58574:33848,\n58575:34054,\n58576:33787,\n58577:33901,\n58578:33834,\n58579:33852,\n58580:34138,\n58581:33924,\n58582:33911,\n58583:33899,\n58584:33965,\n58585:33902,\n58586:33922,\n58587:33897,\n58588:33862,\n58589:33836,\n58590:33903,\n58591:33913,\n58592:33845,\n58593:33994,\n58594:33890,\n58595:33977,\n58596:33983,\n58597:33951,\n58598:34009,\n58599:33997,\n58600:33979,\n58601:34010,\n58602:34000,\n58603:33985,\n58604:33990,\n58605:34006,\n58606:33953,\n58607:34081,\n58608:34047,\n58609:34036,\n58610:34071,\n58611:34072,\n58612:34092,\n58613:34079,\n58614:34069,\n58615:34068,\n58616:34044,\n58617:34112,\n58618:34147,\n58619:34136,\n58620:34120,\n58688:34113,\n58689:34306,\n58690:34123,\n58691:34133,\n58692:34176,\n58693:34212,\n58694:34184,\n58695:34193,\n58696:34186,\n58697:34216,\n58698:34157,\n58699:34196,\n58700:34203,\n58701:34282,\n58702:34183,\n58703:34204,\n58704:34167,\n58705:34174,\n58706:34192,\n58707:34249,\n58708:34234,\n58709:34255,\n58710:34233,\n58711:34256,\n58712:34261,\n58713:34269,\n58714:34277,\n58715:34268,\n58716:34297,\n58717:34314,\n58718:34323,\n58719:34315,\n58720:34302,\n58721:34298,\n58722:34310,\n58723:34338,\n58724:34330,\n58725:34352,\n58726:34367,\n58727:34381,\n58728:20053,\n58729:34388,\n58730:34399,\n58731:34407,\n58732:34417,\n58733:34451,\n58734:34467,\n58735:34473,\n58736:34474,\n58737:34443,\n58738:34444,\n58739:34486,\n58740:34479,\n58741:34500,\n58742:34502,\n58743:34480,\n58744:34505,\n58745:34851,\n58746:34475,\n58747:34516,\n58748:34526,\n58749:34537,\n58750:34540,\n58752:34527,\n58753:34523,\n58754:34543,\n58755:34578,\n58756:34566,\n58757:34568,\n58758:34560,\n58759:34563,\n58760:34555,\n58761:34577,\n58762:34569,\n58763:34573,\n58764:34553,\n58765:34570,\n58766:34612,\n58767:34623,\n58768:34615,\n58769:34619,\n58770:34597,\n58771:34601,\n58772:34586,\n58773:34656,\n58774:34655,\n58775:34680,\n58776:34636,\n58777:34638,\n58778:34676,\n58779:34647,\n58780:34664,\n58781:34670,\n58782:34649,\n58783:34643,\n58784:34659,\n58785:34666,\n58786:34821,\n58787:34722,\n58788:34719,\n58789:34690,\n58790:34735,\n58791:34763,\n58792:34749,\n58793:34752,\n58794:34768,\n58795:38614,\n58796:34731,\n58797:34756,\n58798:34739,\n58799:34759,\n58800:34758,\n58801:34747,\n58802:34799,\n58803:34802,\n58804:34784,\n58805:34831,\n58806:34829,\n58807:34814,\n58808:34806,\n58809:34807,\n58810:34830,\n58811:34770,\n58812:34833,\n58813:34838,\n58814:34837,\n58815:34850,\n58816:34849,\n58817:34865,\n58818:34870,\n58819:34873,\n58820:34855,\n58821:34875,\n58822:34884,\n58823:34882,\n58824:34898,\n58825:34905,\n58826:34910,\n58827:34914,\n58828:34923,\n58829:34945,\n58830:34942,\n58831:34974,\n58832:34933,\n58833:34941,\n58834:34997,\n58835:34930,\n58836:34946,\n58837:34967,\n58838:34962,\n58839:34990,\n58840:34969,\n58841:34978,\n58842:34957,\n58843:34980,\n58844:34992,\n58845:35007,\n58846:34993,\n58847:35011,\n58848:35012,\n58849:35028,\n58850:35032,\n58851:35033,\n58852:35037,\n58853:35065,\n58854:35074,\n58855:35068,\n58856:35060,\n58857:35048,\n58858:35058,\n58859:35076,\n58860:35084,\n58861:35082,\n58862:35091,\n58863:35139,\n58864:35102,\n58865:35109,\n58866:35114,\n58867:35115,\n58868:35137,\n58869:35140,\n58870:35131,\n58871:35126,\n58872:35128,\n58873:35148,\n58874:35101,\n58875:35168,\n58876:35166,\n58944:35174,\n58945:35172,\n58946:35181,\n58947:35178,\n58948:35183,\n58949:35188,\n58950:35191,\n58951:35198,\n58952:35203,\n58953:35208,\n58954:35210,\n58955:35219,\n58956:35224,\n58957:35233,\n58958:35241,\n58959:35238,\n58960:35244,\n58961:35247,\n58962:35250,\n58963:35258,\n58964:35261,\n58965:35263,\n58966:35264,\n58967:35290,\n58968:35292,\n58969:35293,\n58970:35303,\n58971:35316,\n58972:35320,\n58973:35331,\n58974:35350,\n58975:35344,\n58976:35340,\n58977:35355,\n58978:35357,\n58979:35365,\n58980:35382,\n58981:35393,\n58982:35419,\n58983:35410,\n58984:35398,\n58985:35400,\n58986:35452,\n58987:35437,\n58988:35436,\n58989:35426,\n58990:35461,\n58991:35458,\n58992:35460,\n58993:35496,\n58994:35489,\n58995:35473,\n58996:35493,\n58997:35494,\n58998:35482,\n58999:35491,\n59000:35524,\n59001:35533,\n59002:35522,\n59003:35546,\n59004:35563,\n59005:35571,\n59006:35559,\n59008:35556,\n59009:35569,\n59010:35604,\n59011:35552,\n59012:35554,\n59013:35575,\n59014:35550,\n59015:35547,\n59016:35596,\n59017:35591,\n59018:35610,\n59019:35553,\n59020:35606,\n59021:35600,\n59022:35607,\n59023:35616,\n59024:35635,\n59025:38827,\n59026:35622,\n59027:35627,\n59028:35646,\n59029:35624,\n59030:35649,\n59031:35660,\n59032:35663,\n59033:35662,\n59034:35657,\n59035:35670,\n59036:35675,\n59037:35674,\n59038:35691,\n59039:35679,\n59040:35692,\n59041:35695,\n59042:35700,\n59043:35709,\n59044:35712,\n59045:35724,\n59046:35726,\n59047:35730,\n59048:35731,\n59049:35734,\n59050:35737,\n59051:35738,\n59052:35898,\n59053:35905,\n59054:35903,\n59055:35912,\n59056:35916,\n59057:35918,\n59058:35920,\n59059:35925,\n59060:35938,\n59061:35948,\n59062:35960,\n59063:35962,\n59064:35970,\n59065:35977,\n59066:35973,\n59067:35978,\n59068:35981,\n59069:35982,\n59070:35988,\n59071:35964,\n59072:35992,\n59073:25117,\n59074:36013,\n59075:36010,\n59076:36029,\n59077:36018,\n59078:36019,\n59079:36014,\n59080:36022,\n59081:36040,\n59082:36033,\n59083:36068,\n59084:36067,\n59085:36058,\n59086:36093,\n59087:36090,\n59088:36091,\n59089:36100,\n59090:36101,\n59091:36106,\n59092:36103,\n59093:36111,\n59094:36109,\n59095:36112,\n59096:40782,\n59097:36115,\n59098:36045,\n59099:36116,\n59100:36118,\n59101:36199,\n59102:36205,\n59103:36209,\n59104:36211,\n59105:36225,\n59106:36249,\n59107:36290,\n59108:36286,\n59109:36282,\n59110:36303,\n59111:36314,\n59112:36310,\n59113:36300,\n59114:36315,\n59115:36299,\n59116:36330,\n59117:36331,\n59118:36319,\n59119:36323,\n59120:36348,\n59121:36360,\n59122:36361,\n59123:36351,\n59124:36381,\n59125:36382,\n59126:36368,\n59127:36383,\n59128:36418,\n59129:36405,\n59130:36400,\n59131:36404,\n59132:36426,\n59200:36423,\n59201:36425,\n59202:36428,\n59203:36432,\n59204:36424,\n59205:36441,\n59206:36452,\n59207:36448,\n59208:36394,\n59209:36451,\n59210:36437,\n59211:36470,\n59212:36466,\n59213:36476,\n59214:36481,\n59215:36487,\n59216:36485,\n59217:36484,\n59218:36491,\n59219:36490,\n59220:36499,\n59221:36497,\n59222:36500,\n59223:36505,\n59224:36522,\n59225:36513,\n59226:36524,\n59227:36528,\n59228:36550,\n59229:36529,\n59230:36542,\n59231:36549,\n59232:36552,\n59233:36555,\n59234:36571,\n59235:36579,\n59236:36604,\n59237:36603,\n59238:36587,\n59239:36606,\n59240:36618,\n59241:36613,\n59242:36629,\n59243:36626,\n59244:36633,\n59245:36627,\n59246:36636,\n59247:36639,\n59248:36635,\n59249:36620,\n59250:36646,\n59251:36659,\n59252:36667,\n59253:36665,\n59254:36677,\n59255:36674,\n59256:36670,\n59257:36684,\n59258:36681,\n59259:36678,\n59260:36686,\n59261:36695,\n59262:36700,\n59264:36706,\n59265:36707,\n59266:36708,\n59267:36764,\n59268:36767,\n59269:36771,\n59270:36781,\n59271:36783,\n59272:36791,\n59273:36826,\n59274:36837,\n59275:36834,\n59276:36842,\n59277:36847,\n59278:36999,\n59279:36852,\n59280:36869,\n59281:36857,\n59282:36858,\n59283:36881,\n59284:36885,\n59285:36897,\n59286:36877,\n59287:36894,\n59288:36886,\n59289:36875,\n59290:36903,\n59291:36918,\n59292:36917,\n59293:36921,\n59294:36856,\n59295:36943,\n59296:36944,\n59297:36945,\n59298:36946,\n59299:36878,\n59300:36937,\n59301:36926,\n59302:36950,\n59303:36952,\n59304:36958,\n59305:36968,\n59306:36975,\n59307:36982,\n59308:38568,\n59309:36978,\n59310:36994,\n59311:36989,\n59312:36993,\n59313:36992,\n59314:37002,\n59315:37001,\n59316:37007,\n59317:37032,\n59318:37039,\n59319:37041,\n59320:37045,\n59321:37090,\n59322:37092,\n59323:25160,\n59324:37083,\n59325:37122,\n59326:37138,\n59327:37145,\n59328:37170,\n59329:37168,\n59330:37194,\n59331:37206,\n59332:37208,\n59333:37219,\n59334:37221,\n59335:37225,\n59336:37235,\n59337:37234,\n59338:37259,\n59339:37257,\n59340:37250,\n59341:37282,\n59342:37291,\n59343:37295,\n59344:37290,\n59345:37301,\n59346:37300,\n59347:37306,\n59348:37312,\n59349:37313,\n59350:37321,\n59351:37323,\n59352:37328,\n59353:37334,\n59354:37343,\n59355:37345,\n59356:37339,\n59357:37372,\n59358:37365,\n59359:37366,\n59360:37406,\n59361:37375,\n59362:37396,\n59363:37420,\n59364:37397,\n59365:37393,\n59366:37470,\n59367:37463,\n59368:37445,\n59369:37449,\n59370:37476,\n59371:37448,\n59372:37525,\n59373:37439,\n59374:37451,\n59375:37456,\n59376:37532,\n59377:37526,\n59378:37523,\n59379:37531,\n59380:37466,\n59381:37583,\n59382:37561,\n59383:37559,\n59384:37609,\n59385:37647,\n59386:37626,\n59387:37700,\n59388:37678,\n59456:37657,\n59457:37666,\n59458:37658,\n59459:37667,\n59460:37690,\n59461:37685,\n59462:37691,\n59463:37724,\n59464:37728,\n59465:37756,\n59466:37742,\n59467:37718,\n59468:37808,\n59469:37804,\n59470:37805,\n59471:37780,\n59472:37817,\n59473:37846,\n59474:37847,\n59475:37864,\n59476:37861,\n59477:37848,\n59478:37827,\n59479:37853,\n59480:37840,\n59481:37832,\n59482:37860,\n59483:37914,\n59484:37908,\n59485:37907,\n59486:37891,\n59487:37895,\n59488:37904,\n59489:37942,\n59490:37931,\n59491:37941,\n59492:37921,\n59493:37946,\n59494:37953,\n59495:37970,\n59496:37956,\n59497:37979,\n59498:37984,\n59499:37986,\n59500:37982,\n59501:37994,\n59502:37417,\n59503:38000,\n59504:38005,\n59505:38007,\n59506:38013,\n59507:37978,\n59508:38012,\n59509:38014,\n59510:38017,\n59511:38015,\n59512:38274,\n59513:38279,\n59514:38282,\n59515:38292,\n59516:38294,\n59517:38296,\n59518:38297,\n59520:38304,\n59521:38312,\n59522:38311,\n59523:38317,\n59524:38332,\n59525:38331,\n59526:38329,\n59527:38334,\n59528:38346,\n59529:28662,\n59530:38339,\n59531:38349,\n59532:38348,\n59533:38357,\n59534:38356,\n59535:38358,\n59536:38364,\n59537:38369,\n59538:38373,\n59539:38370,\n59540:38433,\n59541:38440,\n59542:38446,\n59543:38447,\n59544:38466,\n59545:38476,\n59546:38479,\n59547:38475,\n59548:38519,\n59549:38492,\n59550:38494,\n59551:38493,\n59552:38495,\n59553:38502,\n59554:38514,\n59555:38508,\n59556:38541,\n59557:38552,\n59558:38549,\n59559:38551,\n59560:38570,\n59561:38567,\n59562:38577,\n59563:38578,\n59564:38576,\n59565:38580,\n59566:38582,\n59567:38584,\n59568:38585,\n59569:38606,\n59570:38603,\n59571:38601,\n59572:38605,\n59573:35149,\n59574:38620,\n59575:38669,\n59576:38613,\n59577:38649,\n59578:38660,\n59579:38662,\n59580:38664,\n59581:38675,\n59582:38670,\n59583:38673,\n59584:38671,\n59585:38678,\n59586:38681,\n59587:38692,\n59588:38698,\n59589:38704,\n59590:38713,\n59591:38717,\n59592:38718,\n59593:38724,\n59594:38726,\n59595:38728,\n59596:38722,\n59597:38729,\n59598:38748,\n59599:38752,\n59600:38756,\n59601:38758,\n59602:38760,\n59603:21202,\n59604:38763,\n59605:38769,\n59606:38777,\n59607:38789,\n59608:38780,\n59609:38785,\n59610:38778,\n59611:38790,\n59612:38795,\n59613:38799,\n59614:38800,\n59615:38812,\n59616:38824,\n59617:38822,\n59618:38819,\n59619:38835,\n59620:38836,\n59621:38851,\n59622:38854,\n59623:38856,\n59624:38859,\n59625:38876,\n59626:38893,\n59627:40783,\n59628:38898,\n59629:31455,\n59630:38902,\n59631:38901,\n59632:38927,\n59633:38924,\n59634:38968,\n59635:38948,\n59636:38945,\n59637:38967,\n59638:38973,\n59639:38982,\n59640:38991,\n59641:38987,\n59642:39019,\n59643:39023,\n59644:39024,\n59712:39025,\n59713:39028,\n59714:39027,\n59715:39082,\n59716:39087,\n59717:39089,\n59718:39094,\n59719:39108,\n59720:39107,\n59721:39110,\n59722:39145,\n59723:39147,\n59724:39171,\n59725:39177,\n59726:39186,\n59727:39188,\n59728:39192,\n59729:39201,\n59730:39197,\n59731:39198,\n59732:39204,\n59733:39200,\n59734:39212,\n59735:39214,\n59736:39229,\n59737:39230,\n59738:39234,\n59739:39241,\n59740:39237,\n59741:39248,\n59742:39243,\n59743:39249,\n59744:39250,\n59745:39244,\n59746:39253,\n59747:39319,\n59748:39320,\n59749:39333,\n59750:39341,\n59751:39342,\n59752:39356,\n59753:39391,\n59754:39387,\n59755:39389,\n59756:39384,\n59757:39377,\n59758:39405,\n59759:39406,\n59760:39409,\n59761:39410,\n59762:39419,\n59763:39416,\n59764:39425,\n59765:39439,\n59766:39429,\n59767:39394,\n59768:39449,\n59769:39467,\n59770:39479,\n59771:39493,\n59772:39490,\n59773:39488,\n59774:39491,\n59776:39486,\n59777:39509,\n59778:39501,\n59779:39515,\n59780:39511,\n59781:39519,\n59782:39522,\n59783:39525,\n59784:39524,\n59785:39529,\n59786:39531,\n59787:39530,\n59788:39597,\n59789:39600,\n59790:39612,\n59791:39616,\n59792:39631,\n59793:39633,\n59794:39635,\n59795:39636,\n59796:39646,\n59797:39647,\n59798:39650,\n59799:39651,\n59800:39654,\n59801:39663,\n59802:39659,\n59803:39662,\n59804:39668,\n59805:39665,\n59806:39671,\n59807:39675,\n59808:39686,\n59809:39704,\n59810:39706,\n59811:39711,\n59812:39714,\n59813:39715,\n59814:39717,\n59815:39719,\n59816:39720,\n59817:39721,\n59818:39722,\n59819:39726,\n59820:39727,\n59821:39730,\n59822:39748,\n59823:39747,\n59824:39759,\n59825:39757,\n59826:39758,\n59827:39761,\n59828:39768,\n59829:39796,\n59830:39827,\n59831:39811,\n59832:39825,\n59833:39830,\n59834:39831,\n59835:39839,\n59836:39840,\n59837:39848,\n59838:39860,\n59839:39872,\n59840:39882,\n59841:39865,\n59842:39878,\n59843:39887,\n59844:39889,\n59845:39890,\n59846:39907,\n59847:39906,\n59848:39908,\n59849:39892,\n59850:39905,\n59851:39994,\n59852:39922,\n59853:39921,\n59854:39920,\n59855:39957,\n59856:39956,\n59857:39945,\n59858:39955,\n59859:39948,\n59860:39942,\n59861:39944,\n59862:39954,\n59863:39946,\n59864:39940,\n59865:39982,\n59866:39963,\n59867:39973,\n59868:39972,\n59869:39969,\n59870:39984,\n59871:40007,\n59872:39986,\n59873:40006,\n59874:39998,\n59875:40026,\n59876:40032,\n59877:40039,\n59878:40054,\n59879:40056,\n59880:40167,\n59881:40172,\n59882:40176,\n59883:40201,\n59884:40200,\n59885:40171,\n59886:40195,\n59887:40198,\n59888:40234,\n59889:40230,\n59890:40367,\n59891:40227,\n59892:40223,\n59893:40260,\n59894:40213,\n59895:40210,\n59896:40257,\n59897:40255,\n59898:40254,\n59899:40262,\n59900:40264,\n59968:40285,\n59969:40286,\n59970:40292,\n59971:40273,\n59972:40272,\n59973:40281,\n59974:40306,\n59975:40329,\n59976:40327,\n59977:40363,\n59978:40303,\n59979:40314,\n59980:40346,\n59981:40356,\n59982:40361,\n59983:40370,\n59984:40388,\n59985:40385,\n59986:40379,\n59987:40376,\n59988:40378,\n59989:40390,\n59990:40399,\n59991:40386,\n59992:40409,\n59993:40403,\n59994:40440,\n59995:40422,\n59996:40429,\n59997:40431,\n59998:40445,\n59999:40474,\n60000:40475,\n60001:40478,\n60002:40565,\n60003:40569,\n60004:40573,\n60005:40577,\n60006:40584,\n60007:40587,\n60008:40588,\n60009:40594,\n60010:40597,\n60011:40593,\n60012:40605,\n60013:40613,\n60014:40617,\n60015:40632,\n60016:40618,\n60017:40621,\n60018:38753,\n60019:40652,\n60020:40654,\n60021:40655,\n60022:40656,\n60023:40660,\n60024:40668,\n60025:40670,\n60026:40669,\n60027:40672,\n60028:40677,\n60029:40680,\n60030:40687,\n60032:40692,\n60033:40694,\n60034:40695,\n60035:40697,\n60036:40699,\n60037:40700,\n60038:40701,\n60039:40711,\n60040:40712,\n60041:30391,\n60042:40725,\n60043:40737,\n60044:40748,\n60045:40766,\n60046:40778,\n60047:40786,\n60048:40788,\n60049:40803,\n60050:40799,\n60051:40800,\n60052:40801,\n60053:40806,\n60054:40807,\n60055:40812,\n60056:40810,\n60057:40823,\n60058:40818,\n60059:40822,\n60060:40853,\n60061:40860,\n60062:40864,\n60063:22575,\n60064:27079,\n60065:36953,\n60066:29796,\n60067:20956,\n60068:29081,\n60736:32394,\n60737:35100,\n60738:37704,\n60739:37512,\n60740:34012,\n60741:20425,\n60742:28859,\n60743:26161,\n60744:26824,\n60745:37625,\n60746:26363,\n60747:24389,\n60748:20008,\n60749:20193,\n60750:20220,\n60751:20224,\n60752:20227,\n60753:20281,\n60754:20310,\n60755:20370,\n60756:20362,\n60757:20378,\n60758:20372,\n60759:20429,\n60760:20544,\n60761:20514,\n60762:20479,\n60763:20510,\n60764:20550,\n60765:20592,\n60766:20546,\n60767:20628,\n60768:20724,\n60769:20696,\n60770:20810,\n60771:20836,\n60772:20893,\n60773:20926,\n60774:20972,\n60775:21013,\n60776:21148,\n60777:21158,\n60778:21184,\n60779:21211,\n60780:21248,\n60781:21255,\n60782:21284,\n60783:21362,\n60784:21395,\n60785:21426,\n60786:21469,\n60787:64014,\n60788:21660,\n60789:21642,\n60790:21673,\n60791:21759,\n60792:21894,\n60793:22361,\n60794:22373,\n60795:22444,\n60796:22472,\n60797:22471,\n60798:64015,\n60800:64016,\n60801:22686,\n60802:22706,\n60803:22795,\n60804:22867,\n60805:22875,\n60806:22877,\n60807:22883,\n60808:22948,\n60809:22970,\n60810:23382,\n60811:23488,\n60812:29999,\n60813:23512,\n60814:23532,\n60815:23582,\n60816:23718,\n60817:23738,\n60818:23797,\n60819:23847,\n60820:23891,\n60821:64017,\n60822:23874,\n60823:23917,\n60824:23992,\n60825:23993,\n60826:24016,\n60827:24353,\n60828:24372,\n60829:24423,\n60830:24503,\n60831:24542,\n60832:24669,\n60833:24709,\n60834:24714,\n60835:24798,\n60836:24789,\n60837:24864,\n60838:24818,\n60839:24849,\n60840:24887,\n60841:24880,\n60842:24984,\n60843:25107,\n60844:25254,\n60845:25589,\n60846:25696,\n60847:25757,\n60848:25806,\n60849:25934,\n60850:26112,\n60851:26133,\n60852:26171,\n60853:26121,\n60854:26158,\n60855:26142,\n60856:26148,\n60857:26213,\n60858:26199,\n60859:26201,\n60860:64018,\n60861:26227,\n60862:26265,\n60863:26272,\n60864:26290,\n60865:26303,\n60866:26362,\n60867:26382,\n60868:63785,\n60869:26470,\n60870:26555,\n60871:26706,\n60872:26560,\n60873:26625,\n60874:26692,\n60875:26831,\n60876:64019,\n60877:26984,\n60878:64020,\n60879:27032,\n60880:27106,\n60881:27184,\n60882:27243,\n60883:27206,\n60884:27251,\n60885:27262,\n60886:27362,\n60887:27364,\n60888:27606,\n60889:27711,\n60890:27740,\n60891:27782,\n60892:27759,\n60893:27866,\n60894:27908,\n60895:28039,\n60896:28015,\n60897:28054,\n60898:28076,\n60899:28111,\n60900:28152,\n60901:28146,\n60902:28156,\n60903:28217,\n60904:28252,\n60905:28199,\n60906:28220,\n60907:28351,\n60908:28552,\n60909:28597,\n60910:28661,\n60911:28677,\n60912:28679,\n60913:28712,\n60914:28805,\n60915:28843,\n60916:28943,\n60917:28932,\n60918:29020,\n60919:28998,\n60920:28999,\n60921:64021,\n60922:29121,\n60923:29182,\n60924:29361,\n60992:29374,\n60993:29476,\n60994:64022,\n60995:29559,\n60996:29629,\n60997:29641,\n60998:29654,\n60999:29667,\n61000:29650,\n61001:29703,\n61002:29685,\n61003:29734,\n61004:29738,\n61005:29737,\n61006:29742,\n61007:29794,\n61008:29833,\n61009:29855,\n61010:29953,\n61011:30063,\n61012:30338,\n61013:30364,\n61014:30366,\n61015:30363,\n61016:30374,\n61017:64023,\n61018:30534,\n61019:21167,\n61020:30753,\n61021:30798,\n61022:30820,\n61023:30842,\n61024:31024,\n61025:64024,\n61026:64025,\n61027:64026,\n61028:31124,\n61029:64027,\n61030:31131,\n61031:31441,\n61032:31463,\n61033:64028,\n61034:31467,\n61035:31646,\n61036:64029,\n61037:32072,\n61038:32092,\n61039:32183,\n61040:32160,\n61041:32214,\n61042:32338,\n61043:32583,\n61044:32673,\n61045:64030,\n61046:33537,\n61047:33634,\n61048:33663,\n61049:33735,\n61050:33782,\n61051:33864,\n61052:33972,\n61053:34131,\n61054:34137,\n61056:34155,\n61057:64031,\n61058:34224,\n61059:64032,\n61060:64033,\n61061:34823,\n61062:35061,\n61063:35346,\n61064:35383,\n61065:35449,\n61066:35495,\n61067:35518,\n61068:35551,\n61069:64034,\n61070:35574,\n61071:35667,\n61072:35711,\n61073:36080,\n61074:36084,\n61075:36114,\n61076:36214,\n61077:64035,\n61078:36559,\n61079:64036,\n61080:64037,\n61081:36967,\n61082:37086,\n61083:64038,\n61084:37141,\n61085:37159,\n61086:37338,\n61087:37335,\n61088:37342,\n61089:37357,\n61090:37358,\n61091:37348,\n61092:37349,\n61093:37382,\n61094:37392,\n61095:37386,\n61096:37434,\n61097:37440,\n61098:37436,\n61099:37454,\n61100:37465,\n61101:37457,\n61102:37433,\n61103:37479,\n61104:37543,\n61105:37495,\n61106:37496,\n61107:37607,\n61108:37591,\n61109:37593,\n61110:37584,\n61111:64039,\n61112:37589,\n61113:37600,\n61114:37587,\n61115:37669,\n61116:37665,\n61117:37627,\n61118:64040,\n61119:37662,\n61120:37631,\n61121:37661,\n61122:37634,\n61123:37744,\n61124:37719,\n61125:37796,\n61126:37830,\n61127:37854,\n61128:37880,\n61129:37937,\n61130:37957,\n61131:37960,\n61132:38290,\n61133:63964,\n61134:64041,\n61135:38557,\n61136:38575,\n61137:38707,\n61138:38715,\n61139:38723,\n61140:38733,\n61141:38735,\n61142:38737,\n61143:38741,\n61144:38999,\n61145:39013,\n61146:64042,\n61147:64043,\n61148:39207,\n61149:64044,\n61150:39326,\n61151:39502,\n61152:39641,\n61153:39644,\n61154:39797,\n61155:39794,\n61156:39823,\n61157:39857,\n61158:39867,\n61159:39936,\n61160:40304,\n61161:40299,\n61162:64045,\n61163:40473,\n61164:40657,\n61167:8560,\n61168:8561,\n61169:8562,\n61170:8563,\n61171:8564,\n61172:8565,\n61173:8566,\n61174:8567,\n61175:8568,\n61176:8569,\n61177:65506,\n61178:65508,\n61179:65287,\n61180:65282,\n61504:57344,\n61505:57345,\n61506:57346,\n61507:57347,\n61508:57348,\n61509:57349,\n61510:57350,\n61511:57351,\n61512:57352,\n61513:57353,\n61514:57354,\n61515:57355,\n61516:57356,\n61517:57357,\n61518:57358,\n61519:57359,\n61520:57360,\n61521:57361,\n61522:57362,\n61523:57363,\n61524:57364,\n61525:57365,\n61526:57366,\n61527:57367,\n61528:57368,\n61529:57369,\n61530:57370,\n61531:57371,\n61532:57372,\n61533:57373,\n61534:57374,\n61535:57375,\n61536:57376,\n61537:57377,\n61538:57378,\n61539:57379,\n61540:57380,\n61541:57381,\n61542:57382,\n61543:57383,\n61544:57384,\n61545:57385,\n61546:57386,\n61547:57387,\n61548:57388,\n61549:57389,\n61550:57390,\n61551:57391,\n61552:57392,\n61553:57393,\n61554:57394,\n61555:57395,\n61556:57396,\n61557:57397,\n61558:57398,\n61559:57399,\n61560:57400,\n61561:57401,\n61562:57402,\n61563:57403,\n61564:57404,\n61565:57405,\n61566:57406,\n61568:57407,\n61569:57408,\n61570:57409,\n61571:57410,\n61572:57411,\n61573:57412,\n61574:57413,\n61575:57414,\n61576:57415,\n61577:57416,\n61578:57417,\n61579:57418,\n61580:57419,\n61581:57420,\n61582:57421,\n61583:57422,\n61584:57423,\n61585:57424,\n61586:57425,\n61587:57426,\n61588:57427,\n61589:57428,\n61590:57429,\n61591:57430,\n61592:57431,\n61593:57432,\n61594:57433,\n61595:57434,\n61596:57435,\n61597:57436,\n61598:57437,\n61599:57438,\n61600:57439,\n61601:57440,\n61602:57441,\n61603:57442,\n61604:57443,\n61605:57444,\n61606:57445,\n61607:57446,\n61608:57447,\n61609:57448,\n61610:57449,\n61611:57450,\n61612:57451,\n61613:57452,\n61614:57453,\n61615:57454,\n61616:57455,\n61617:57456,\n61618:57457,\n61619:57458,\n61620:57459,\n61621:57460,\n61622:57461,\n61623:57462,\n61624:57463,\n61625:57464,\n61626:57465,\n61627:57466,\n61628:57467,\n61629:57468,\n61630:57469,\n61631:57470,\n61632:57471,\n61633:57472,\n61634:57473,\n61635:57474,\n61636:57475,\n61637:57476,\n61638:57477,\n61639:57478,\n61640:57479,\n61641:57480,\n61642:57481,\n61643:57482,\n61644:57483,\n61645:57484,\n61646:57485,\n61647:57486,\n61648:57487,\n61649:57488,\n61650:57489,\n61651:57490,\n61652:57491,\n61653:57492,\n61654:57493,\n61655:57494,\n61656:57495,\n61657:57496,\n61658:57497,\n61659:57498,\n61660:57499,\n61661:57500,\n61662:57501,\n61663:57502,\n61664:57503,\n61665:57504,\n61666:57505,\n61667:57506,\n61668:57507,\n61669:57508,\n61670:57509,\n61671:57510,\n61672:57511,\n61673:57512,\n61674:57513,\n61675:57514,\n61676:57515,\n61677:57516,\n61678:57517,\n61679:57518,\n61680:57519,\n61681:57520,\n61682:57521,\n61683:57522,\n61684:57523,\n61685:57524,\n61686:57525,\n61687:57526,\n61688:57527,\n61689:57528,\n61690:57529,\n61691:57530,\n61692:57531,\n61760:57532,\n61761:57533,\n61762:57534,\n61763:57535,\n61764:57536,\n61765:57537,\n61766:57538,\n61767:57539,\n61768:57540,\n61769:57541,\n61770:57542,\n61771:57543,\n61772:57544,\n61773:57545,\n61774:57546,\n61775:57547,\n61776:57548,\n61777:57549,\n61778:57550,\n61779:57551,\n61780:57552,\n61781:57553,\n61782:57554,\n61783:57555,\n61784:57556,\n61785:57557,\n61786:57558,\n61787:57559,\n61788:57560,\n61789:57561,\n61790:57562,\n61791:57563,\n61792:57564,\n61793:57565,\n61794:57566,\n61795:57567,\n61796:57568,\n61797:57569,\n61798:57570,\n61799:57571,\n61800:57572,\n61801:57573,\n61802:57574,\n61803:57575,\n61804:57576,\n61805:57577,\n61806:57578,\n61807:57579,\n61808:57580,\n61809:57581,\n61810:57582,\n61811:57583,\n61812:57584,\n61813:57585,\n61814:57586,\n61815:57587,\n61816:57588,\n61817:57589,\n61818:57590,\n61819:57591,\n61820:57592,\n61821:57593,\n61822:57594,\n61824:57595,\n61825:57596,\n61826:57597,\n61827:57598,\n61828:57599,\n61829:57600,\n61830:57601,\n61831:57602,\n61832:57603,\n61833:57604,\n61834:57605,\n61835:57606,\n61836:57607,\n61837:57608,\n61838:57609,\n61839:57610,\n61840:57611,\n61841:57612,\n61842:57613,\n61843:57614,\n61844:57615,\n61845:57616,\n61846:57617,\n61847:57618,\n61848:57619,\n61849:57620,\n61850:57621,\n61851:57622,\n61852:57623,\n61853:57624,\n61854:57625,\n61855:57626,\n61856:57627,\n61857:57628,\n61858:57629,\n61859:57630,\n61860:57631,\n61861:57632,\n61862:57633,\n61863:57634,\n61864:57635,\n61865:57636,\n61866:57637,\n61867:57638,\n61868:57639,\n61869:57640,\n61870:57641,\n61871:57642,\n61872:57643,\n61873:57644,\n61874:57645,\n61875:57646,\n61876:57647,\n61877:57648,\n61878:57649,\n61879:57650,\n61880:57651,\n61881:57652,\n61882:57653,\n61883:57654,\n61884:57655,\n61885:57656,\n61886:57657,\n61887:57658,\n61888:57659,\n61889:57660,\n61890:57661,\n61891:57662,\n61892:57663,\n61893:57664,\n61894:57665,\n61895:57666,\n61896:57667,\n61897:57668,\n61898:57669,\n61899:57670,\n61900:57671,\n61901:57672,\n61902:57673,\n61903:57674,\n61904:57675,\n61905:57676,\n61906:57677,\n61907:57678,\n61908:57679,\n61909:57680,\n61910:57681,\n61911:57682,\n61912:57683,\n61913:57684,\n61914:57685,\n61915:57686,\n61916:57687,\n61917:57688,\n61918:57689,\n61919:57690,\n61920:57691,\n61921:57692,\n61922:57693,\n61923:57694,\n61924:57695,\n61925:57696,\n61926:57697,\n61927:57698,\n61928:57699,\n61929:57700,\n61930:57701,\n61931:57702,\n61932:57703,\n61933:57704,\n61934:57705,\n61935:57706,\n61936:57707,\n61937:57708,\n61938:57709,\n61939:57710,\n61940:57711,\n61941:57712,\n61942:57713,\n61943:57714,\n61944:57715,\n61945:57716,\n61946:57717,\n61947:57718,\n61948:57719,\n62016:57720,\n62017:57721,\n62018:57722,\n62019:57723,\n62020:57724,\n62021:57725,\n62022:57726,\n62023:57727,\n62024:57728,\n62025:57729,\n62026:57730,\n62027:57731,\n62028:57732,\n62029:57733,\n62030:57734,\n62031:57735,\n62032:57736,\n62033:57737,\n62034:57738,\n62035:57739,\n62036:57740,\n62037:57741,\n62038:57742,\n62039:57743,\n62040:57744,\n62041:57745,\n62042:57746,\n62043:57747,\n62044:57748,\n62045:57749,\n62046:57750,\n62047:57751,\n62048:57752,\n62049:57753,\n62050:57754,\n62051:57755,\n62052:57756,\n62053:57757,\n62054:57758,\n62055:57759,\n62056:57760,\n62057:57761,\n62058:57762,\n62059:57763,\n62060:57764,\n62061:57765,\n62062:57766,\n62063:57767,\n62064:57768,\n62065:57769,\n62066:57770,\n62067:57771,\n62068:57772,\n62069:57773,\n62070:57774,\n62071:57775,\n62072:57776,\n62073:57777,\n62074:57778,\n62075:57779,\n62076:57780,\n62077:57781,\n62078:57782,\n62080:57783,\n62081:57784,\n62082:57785,\n62083:57786,\n62084:57787,\n62085:57788,\n62086:57789,\n62087:57790,\n62088:57791,\n62089:57792,\n62090:57793,\n62091:57794,\n62092:57795,\n62093:57796,\n62094:57797,\n62095:57798,\n62096:57799,\n62097:57800,\n62098:57801,\n62099:57802,\n62100:57803,\n62101:57804,\n62102:57805,\n62103:57806,\n62104:57807,\n62105:57808,\n62106:57809,\n62107:57810,\n62108:57811,\n62109:57812,\n62110:57813,\n62111:57814,\n62112:57815,\n62113:57816,\n62114:57817,\n62115:57818,\n62116:57819,\n62117:57820,\n62118:57821,\n62119:57822,\n62120:57823,\n62121:57824,\n62122:57825,\n62123:57826,\n62124:57827,\n62125:57828,\n62126:57829,\n62127:57830,\n62128:57831,\n62129:57832,\n62130:57833,\n62131:57834,\n62132:57835,\n62133:57836,\n62134:57837,\n62135:57838,\n62136:57839,\n62137:57840,\n62138:57841,\n62139:57842,\n62140:57843,\n62141:57844,\n62142:57845,\n62143:57846,\n62144:57847,\n62145:57848,\n62146:57849,\n62147:57850,\n62148:57851,\n62149:57852,\n62150:57853,\n62151:57854,\n62152:57855,\n62153:57856,\n62154:57857,\n62155:57858,\n62156:57859,\n62157:57860,\n62158:57861,\n62159:57862,\n62160:57863,\n62161:57864,\n62162:57865,\n62163:57866,\n62164:57867,\n62165:57868,\n62166:57869,\n62167:57870,\n62168:57871,\n62169:57872,\n62170:57873,\n62171:57874,\n62172:57875,\n62173:57876,\n62174:57877,\n62175:57878,\n62176:57879,\n62177:57880,\n62178:57881,\n62179:57882,\n62180:57883,\n62181:57884,\n62182:57885,\n62183:57886,\n62184:57887,\n62185:57888,\n62186:57889,\n62187:57890,\n62188:57891,\n62189:57892,\n62190:57893,\n62191:57894,\n62192:57895,\n62193:57896,\n62194:57897,\n62195:57898,\n62196:57899,\n62197:57900,\n62198:57901,\n62199:57902,\n62200:57903,\n62201:57904,\n62202:57905,\n62203:57906,\n62204:57907,\n62272:57908,\n62273:57909,\n62274:57910,\n62275:57911,\n62276:57912,\n62277:57913,\n62278:57914,\n62279:57915,\n62280:57916,\n62281:57917,\n62282:57918,\n62283:57919,\n62284:57920,\n62285:57921,\n62286:57922,\n62287:57923,\n62288:57924,\n62289:57925,\n62290:57926,\n62291:57927,\n62292:57928,\n62293:57929,\n62294:57930,\n62295:57931,\n62296:57932,\n62297:57933,\n62298:57934,\n62299:57935,\n62300:57936,\n62301:57937,\n62302:57938,\n62303:57939,\n62304:57940,\n62305:57941,\n62306:57942,\n62307:57943,\n62308:57944,\n62309:57945,\n62310:57946,\n62311:57947,\n62312:57948,\n62313:57949,\n62314:57950,\n62315:57951,\n62316:57952,\n62317:57953,\n62318:57954,\n62319:57955,\n62320:57956,\n62321:57957,\n62322:57958,\n62323:57959,\n62324:57960,\n62325:57961,\n62326:57962,\n62327:57963,\n62328:57964,\n62329:57965,\n62330:57966,\n62331:57967,\n62332:57968,\n62333:57969,\n62334:57970,\n62336:57971,\n62337:57972,\n62338:57973,\n62339:57974,\n62340:57975,\n62341:57976,\n62342:57977,\n62343:57978,\n62344:57979,\n62345:57980,\n62346:57981,\n62347:57982,\n62348:57983,\n62349:57984,\n62350:57985,\n62351:57986,\n62352:57987,\n62353:57988,\n62354:57989,\n62355:57990,\n62356:57991,\n62357:57992,\n62358:57993,\n62359:57994,\n62360:57995,\n62361:57996,\n62362:57997,\n62363:57998,\n62364:57999,\n62365:58000,\n62366:58001,\n62367:58002,\n62368:58003,\n62369:58004,\n62370:58005,\n62371:58006,\n62372:58007,\n62373:58008,\n62374:58009,\n62375:58010,\n62376:58011,\n62377:58012,\n62378:58013,\n62379:58014,\n62380:58015,\n62381:58016,\n62382:58017,\n62383:58018,\n62384:58019,\n62385:58020,\n62386:58021,\n62387:58022,\n62388:58023,\n62389:58024,\n62390:58025,\n62391:58026,\n62392:58027,\n62393:58028,\n62394:58029,\n62395:58030,\n62396:58031,\n62397:58032,\n62398:58033,\n62399:58034,\n62400:58035,\n62401:58036,\n62402:58037,\n62403:58038,\n62404:58039,\n62405:58040,\n62406:58041,\n62407:58042,\n62408:58043,\n62409:58044,\n62410:58045,\n62411:58046,\n62412:58047,\n62413:58048,\n62414:58049,\n62415:58050,\n62416:58051,\n62417:58052,\n62418:58053,\n62419:58054,\n62420:58055,\n62421:58056,\n62422:58057,\n62423:58058,\n62424:58059,\n62425:58060,\n62426:58061,\n62427:58062,\n62428:58063,\n62429:58064,\n62430:58065,\n62431:58066,\n62432:58067,\n62433:58068,\n62434:58069,\n62435:58070,\n62436:58071,\n62437:58072,\n62438:58073,\n62439:58074,\n62440:58075,\n62441:58076,\n62442:58077,\n62443:58078,\n62444:58079,\n62445:58080,\n62446:58081,\n62447:58082,\n62448:58083,\n62449:58084,\n62450:58085,\n62451:58086,\n62452:58087,\n62453:58088,\n62454:58089,\n62455:58090,\n62456:58091,\n62457:58092,\n62458:58093,\n62459:58094,\n62460:58095,\n62528:58096,\n62529:58097,\n62530:58098,\n62531:58099,\n62532:58100,\n62533:58101,\n62534:58102,\n62535:58103,\n62536:58104,\n62537:58105,\n62538:58106,\n62539:58107,\n62540:58108,\n62541:58109,\n62542:58110,\n62543:58111,\n62544:58112,\n62545:58113,\n62546:58114,\n62547:58115,\n62548:58116,\n62549:58117,\n62550:58118,\n62551:58119,\n62552:58120,\n62553:58121,\n62554:58122,\n62555:58123,\n62556:58124,\n62557:58125,\n62558:58126,\n62559:58127,\n62560:58128,\n62561:58129,\n62562:58130,\n62563:58131,\n62564:58132,\n62565:58133,\n62566:58134,\n62567:58135,\n62568:58136,\n62569:58137,\n62570:58138,\n62571:58139,\n62572:58140,\n62573:58141,\n62574:58142,\n62575:58143,\n62576:58144,\n62577:58145,\n62578:58146,\n62579:58147,\n62580:58148,\n62581:58149,\n62582:58150,\n62583:58151,\n62584:58152,\n62585:58153,\n62586:58154,\n62587:58155,\n62588:58156,\n62589:58157,\n62590:58158,\n62592:58159,\n62593:58160,\n62594:58161,\n62595:58162,\n62596:58163,\n62597:58164,\n62598:58165,\n62599:58166,\n62600:58167,\n62601:58168,\n62602:58169,\n62603:58170,\n62604:58171,\n62605:58172,\n62606:58173,\n62607:58174,\n62608:58175,\n62609:58176,\n62610:58177,\n62611:58178,\n62612:58179,\n62613:58180,\n62614:58181,\n62615:58182,\n62616:58183,\n62617:58184,\n62618:58185,\n62619:58186,\n62620:58187,\n62621:58188,\n62622:58189,\n62623:58190,\n62624:58191,\n62625:58192,\n62626:58193,\n62627:58194,\n62628:58195,\n62629:58196,\n62630:58197,\n62631:58198,\n62632:58199,\n62633:58200,\n62634:58201,\n62635:58202,\n62636:58203,\n62637:58204,\n62638:58205,\n62639:58206,\n62640:58207,\n62641:58208,\n62642:58209,\n62643:58210,\n62644:58211,\n62645:58212,\n62646:58213,\n62647:58214,\n62648:58215,\n62649:58216,\n62650:58217,\n62651:58218,\n62652:58219,\n62653:58220,\n62654:58221,\n62655:58222,\n62656:58223,\n62657:58224,\n62658:58225,\n62659:58226,\n62660:58227,\n62661:58228,\n62662:58229,\n62663:58230,\n62664:58231,\n62665:58232,\n62666:58233,\n62667:58234,\n62668:58235,\n62669:58236,\n62670:58237,\n62671:58238,\n62672:58239,\n62673:58240,\n62674:58241,\n62675:58242,\n62676:58243,\n62677:58244,\n62678:58245,\n62679:58246,\n62680:58247,\n62681:58248,\n62682:58249,\n62683:58250,\n62684:58251,\n62685:58252,\n62686:58253,\n62687:58254,\n62688:58255,\n62689:58256,\n62690:58257,\n62691:58258,\n62692:58259,\n62693:58260,\n62694:58261,\n62695:58262,\n62696:58263,\n62697:58264,\n62698:58265,\n62699:58266,\n62700:58267,\n62701:58268,\n62702:58269,\n62703:58270,\n62704:58271,\n62705:58272,\n62706:58273,\n62707:58274,\n62708:58275,\n62709:58276,\n62710:58277,\n62711:58278,\n62712:58279,\n62713:58280,\n62714:58281,\n62715:58282,\n62716:58283,\n62784:58284,\n62785:58285,\n62786:58286,\n62787:58287,\n62788:58288,\n62789:58289,\n62790:58290,\n62791:58291,\n62792:58292,\n62793:58293,\n62794:58294,\n62795:58295,\n62796:58296,\n62797:58297,\n62798:58298,\n62799:58299,\n62800:58300,\n62801:58301,\n62802:58302,\n62803:58303,\n62804:58304,\n62805:58305,\n62806:58306,\n62807:58307,\n62808:58308,\n62809:58309,\n62810:58310,\n62811:58311,\n62812:58312,\n62813:58313,\n62814:58314,\n62815:58315,\n62816:58316,\n62817:58317,\n62818:58318,\n62819:58319,\n62820:58320,\n62821:58321,\n62822:58322,\n62823:58323,\n62824:58324,\n62825:58325,\n62826:58326,\n62827:58327,\n62828:58328,\n62829:58329,\n62830:58330,\n62831:58331,\n62832:58332,\n62833:58333,\n62834:58334,\n62835:58335,\n62836:58336,\n62837:58337,\n62838:58338,\n62839:58339,\n62840:58340,\n62841:58341,\n62842:58342,\n62843:58343,\n62844:58344,\n62845:58345,\n62846:58346,\n62848:58347,\n62849:58348,\n62850:58349,\n62851:58350,\n62852:58351,\n62853:58352,\n62854:58353,\n62855:58354,\n62856:58355,\n62857:58356,\n62858:58357,\n62859:58358,\n62860:58359,\n62861:58360,\n62862:58361,\n62863:58362,\n62864:58363,\n62865:58364,\n62866:58365,\n62867:58366,\n62868:58367,\n62869:58368,\n62870:58369,\n62871:58370,\n62872:58371,\n62873:58372,\n62874:58373,\n62875:58374,\n62876:58375,\n62877:58376,\n62878:58377,\n62879:58378,\n62880:58379,\n62881:58380,\n62882:58381,\n62883:58382,\n62884:58383,\n62885:58384,\n62886:58385,\n62887:58386,\n62888:58387,\n62889:58388,\n62890:58389,\n62891:58390,\n62892:58391,\n62893:58392,\n62894:58393,\n62895:58394,\n62896:58395,\n62897:58396,\n62898:58397,\n62899:58398,\n62900:58399,\n62901:58400,\n62902:58401,\n62903:58402,\n62904:58403,\n62905:58404,\n62906:58405,\n62907:58406,\n62908:58407,\n62909:58408,\n62910:58409,\n62911:58410,\n62912:58411,\n62913:58412,\n62914:58413,\n62915:58414,\n62916:58415,\n62917:58416,\n62918:58417,\n62919:58418,\n62920:58419,\n62921:58420,\n62922:58421,\n62923:58422,\n62924:58423,\n62925:58424,\n62926:58425,\n62927:58426,\n62928:58427,\n62929:58428,\n62930:58429,\n62931:58430,\n62932:58431,\n62933:58432,\n62934:58433,\n62935:58434,\n62936:58435,\n62937:58436,\n62938:58437,\n62939:58438,\n62940:58439,\n62941:58440,\n62942:58441,\n62943:58442,\n62944:58443,\n62945:58444,\n62946:58445,\n62947:58446,\n62948:58447,\n62949:58448,\n62950:58449,\n62951:58450,\n62952:58451,\n62953:58452,\n62954:58453,\n62955:58454,\n62956:58455,\n62957:58456,\n62958:58457,\n62959:58458,\n62960:58459,\n62961:58460,\n62962:58461,\n62963:58462,\n62964:58463,\n62965:58464,\n62966:58465,\n62967:58466,\n62968:58467,\n62969:58468,\n62970:58469,\n62971:58470,\n62972:58471,\n63040:58472,\n63041:58473,\n63042:58474,\n63043:58475,\n63044:58476,\n63045:58477,\n63046:58478,\n63047:58479,\n63048:58480,\n63049:58481,\n63050:58482,\n63051:58483,\n63052:58484,\n63053:58485,\n63054:58486,\n63055:58487,\n63056:58488,\n63057:58489,\n63058:58490,\n63059:58491,\n63060:58492,\n63061:58493,\n63062:58494,\n63063:58495,\n63064:58496,\n63065:58497,\n63066:58498,\n63067:58499,\n63068:58500,\n63069:58501,\n63070:58502,\n63071:58503,\n63072:58504,\n63073:58505,\n63074:58506,\n63075:58507,\n63076:58508,\n63077:58509,\n63078:58510,\n63079:58511,\n63080:58512,\n63081:58513,\n63082:58514,\n63083:58515,\n63084:58516,\n63085:58517,\n63086:58518,\n63087:58519,\n63088:58520,\n63089:58521,\n63090:58522,\n63091:58523,\n63092:58524,\n63093:58525,\n63094:58526,\n63095:58527,\n63096:58528,\n63097:58529,\n63098:58530,\n63099:58531,\n63100:58532,\n63101:58533,\n63102:58534,\n63104:58535,\n63105:58536,\n63106:58537,\n63107:58538,\n63108:58539,\n63109:58540,\n63110:58541,\n63111:58542,\n63112:58543,\n63113:58544,\n63114:58545,\n63115:58546,\n63116:58547,\n63117:58548,\n63118:58549,\n63119:58550,\n63120:58551,\n63121:58552,\n63122:58553,\n63123:58554,\n63124:58555,\n63125:58556,\n63126:58557,\n63127:58558,\n63128:58559,\n63129:58560,\n63130:58561,\n63131:58562,\n63132:58563,\n63133:58564,\n63134:58565,\n63135:58566,\n63136:58567,\n63137:58568,\n63138:58569,\n63139:58570,\n63140:58571,\n63141:58572,\n63142:58573,\n63143:58574,\n63144:58575,\n63145:58576,\n63146:58577,\n63147:58578,\n63148:58579,\n63149:58580,\n63150:58581,\n63151:58582,\n63152:58583,\n63153:58584,\n63154:58585,\n63155:58586,\n63156:58587,\n63157:58588,\n63158:58589,\n63159:58590,\n63160:58591,\n63161:58592,\n63162:58593,\n63163:58594,\n63164:58595,\n63165:58596,\n63166:58597,\n63167:58598,\n63168:58599,\n63169:58600,\n63170:58601,\n63171:58602,\n63172:58603,\n63173:58604,\n63174:58605,\n63175:58606,\n63176:58607,\n63177:58608,\n63178:58609,\n63179:58610,\n63180:58611,\n63181:58612,\n63182:58613,\n63183:58614,\n63184:58615,\n63185:58616,\n63186:58617,\n63187:58618,\n63188:58619,\n63189:58620,\n63190:58621,\n63191:58622,\n63192:58623,\n63193:58624,\n63194:58625,\n63195:58626,\n63196:58627,\n63197:58628,\n63198:58629,\n63199:58630,\n63200:58631,\n63201:58632,\n63202:58633,\n63203:58634,\n63204:58635,\n63205:58636,\n63206:58637,\n63207:58638,\n63208:58639,\n63209:58640,\n63210:58641,\n63211:58642,\n63212:58643,\n63213:58644,\n63214:58645,\n63215:58646,\n63216:58647,\n63217:58648,\n63218:58649,\n63219:58650,\n63220:58651,\n63221:58652,\n63222:58653,\n63223:58654,\n63224:58655,\n63225:58656,\n63226:58657,\n63227:58658,\n63228:58659,\n63296:58660,\n63297:58661,\n63298:58662,\n63299:58663,\n63300:58664,\n63301:58665,\n63302:58666,\n63303:58667,\n63304:58668,\n63305:58669,\n63306:58670,\n63307:58671,\n63308:58672,\n63309:58673,\n63310:58674,\n63311:58675,\n63312:58676,\n63313:58677,\n63314:58678,\n63315:58679,\n63316:58680,\n63317:58681,\n63318:58682,\n63319:58683,\n63320:58684,\n63321:58685,\n63322:58686,\n63323:58687,\n63324:58688,\n63325:58689,\n63326:58690,\n63327:58691,\n63328:58692,\n63329:58693,\n63330:58694,\n63331:58695,\n63332:58696,\n63333:58697,\n63334:58698,\n63335:58699,\n63336:58700,\n63337:58701,\n63338:58702,\n63339:58703,\n63340:58704,\n63341:58705,\n63342:58706,\n63343:58707,\n63344:58708,\n63345:58709,\n63346:58710,\n63347:58711,\n63348:58712,\n63349:58713,\n63350:58714,\n63351:58715,\n63352:58716,\n63353:58717,\n63354:58718,\n63355:58719,\n63356:58720,\n63357:58721,\n63358:58722,\n63360:58723,\n63361:58724,\n63362:58725,\n63363:58726,\n63364:58727,\n63365:58728,\n63366:58729,\n63367:58730,\n63368:58731,\n63369:58732,\n63370:58733,\n63371:58734,\n63372:58735,\n63373:58736,\n63374:58737,\n63375:58738,\n63376:58739,\n63377:58740,\n63378:58741,\n63379:58742,\n63380:58743,\n63381:58744,\n63382:58745,\n63383:58746,\n63384:58747,\n63385:58748,\n63386:58749,\n63387:58750,\n63388:58751,\n63389:58752,\n63390:58753,\n63391:58754,\n63392:58755,\n63393:58756,\n63394:58757,\n63395:58758,\n63396:58759,\n63397:58760,\n63398:58761,\n63399:58762,\n63400:58763,\n63401:58764,\n63402:58765,\n63403:58766,\n63404:58767,\n63405:58768,\n63406:58769,\n63407:58770,\n63408:58771,\n63409:58772,\n63410:58773,\n63411:58774,\n63412:58775,\n63413:58776,\n63414:58777,\n63415:58778,\n63416:58779,\n63417:58780,\n63418:58781,\n63419:58782,\n63420:58783,\n63421:58784,\n63422:58785,\n63423:58786,\n63424:58787,\n63425:58788,\n63426:58789,\n63427:58790,\n63428:58791,\n63429:58792,\n63430:58793,\n63431:58794,\n63432:58795,\n63433:58796,\n63434:58797,\n63435:58798,\n63436:58799,\n63437:58800,\n63438:58801,\n63439:58802,\n63440:58803,\n63441:58804,\n63442:58805,\n63443:58806,\n63444:58807,\n63445:58808,\n63446:58809,\n63447:58810,\n63448:58811,\n63449:58812,\n63450:58813,\n63451:58814,\n63452:58815,\n63453:58816,\n63454:58817,\n63455:58818,\n63456:58819,\n63457:58820,\n63458:58821,\n63459:58822,\n63460:58823,\n63461:58824,\n63462:58825,\n63463:58826,\n63464:58827,\n63465:58828,\n63466:58829,\n63467:58830,\n63468:58831,\n63469:58832,\n63470:58833,\n63471:58834,\n63472:58835,\n63473:58836,\n63474:58837,\n63475:58838,\n63476:58839,\n63477:58840,\n63478:58841,\n63479:58842,\n63480:58843,\n63481:58844,\n63482:58845,\n63483:58846,\n63484:58847,\n63552:58848,\n63553:58849,\n63554:58850,\n63555:58851,\n63556:58852,\n63557:58853,\n63558:58854,\n63559:58855,\n63560:58856,\n63561:58857,\n63562:58858,\n63563:58859,\n63564:58860,\n63565:58861,\n63566:58862,\n63567:58863,\n63568:58864,\n63569:58865,\n63570:58866,\n63571:58867,\n63572:58868,\n63573:58869,\n63574:58870,\n63575:58871,\n63576:58872,\n63577:58873,\n63578:58874,\n63579:58875,\n63580:58876,\n63581:58877,\n63582:58878,\n63583:58879,\n63584:58880,\n63585:58881,\n63586:58882,\n63587:58883,\n63588:58884,\n63589:58885,\n63590:58886,\n63591:58887,\n63592:58888,\n63593:58889,\n63594:58890,\n63595:58891,\n63596:58892,\n63597:58893,\n63598:58894,\n63599:58895,\n63600:58896,\n63601:58897,\n63602:58898,\n63603:58899,\n63604:58900,\n63605:58901,\n63606:58902,\n63607:58903,\n63608:58904,\n63609:58905,\n63610:58906,\n63611:58907,\n63612:58908,\n63613:58909,\n63614:58910,\n63616:58911,\n63617:58912,\n63618:58913,\n63619:58914,\n63620:58915,\n63621:58916,\n63622:58917,\n63623:58918,\n63624:58919,\n63625:58920,\n63626:58921,\n63627:58922,\n63628:58923,\n63629:58924,\n63630:58925,\n63631:58926,\n63632:58927,\n63633:58928,\n63634:58929,\n63635:58930,\n63636:58931,\n63637:58932,\n63638:58933,\n63639:58934,\n63640:58935,\n63641:58936,\n63642:58937,\n63643:58938,\n63644:58939,\n63645:58940,\n63646:58941,\n63647:58942,\n63648:58943,\n63649:58944,\n63650:58945,\n63651:58946,\n63652:58947,\n63653:58948,\n63654:58949,\n63655:58950,\n63656:58951,\n63657:58952,\n63658:58953,\n63659:58954,\n63660:58955,\n63661:58956,\n63662:58957,\n63663:58958,\n63664:58959,\n63665:58960,\n63666:58961,\n63667:58962,\n63668:58963,\n63669:58964,\n63670:58965,\n63671:58966,\n63672:58967,\n63673:58968,\n63674:58969,\n63675:58970,\n63676:58971,\n63677:58972,\n63678:58973,\n63679:58974,\n63680:58975,\n63681:58976,\n63682:58977,\n63683:58978,\n63684:58979,\n63685:58980,\n63686:58981,\n63687:58982,\n63688:58983,\n63689:58984,\n63690:58985,\n63691:58986,\n63692:58987,\n63693:58988,\n63694:58989,\n63695:58990,\n63696:58991,\n63697:58992,\n63698:58993,\n63699:58994,\n63700:58995,\n63701:58996,\n63702:58997,\n63703:58998,\n63704:58999,\n63705:59000,\n63706:59001,\n63707:59002,\n63708:59003,\n63709:59004,\n63710:59005,\n63711:59006,\n63712:59007,\n63713:59008,\n63714:59009,\n63715:59010,\n63716:59011,\n63717:59012,\n63718:59013,\n63719:59014,\n63720:59015,\n63721:59016,\n63722:59017,\n63723:59018,\n63724:59019,\n63725:59020,\n63726:59021,\n63727:59022,\n63728:59023,\n63729:59024,\n63730:59025,\n63731:59026,\n63732:59027,\n63733:59028,\n63734:59029,\n63735:59030,\n63736:59031,\n63737:59032,\n63738:59033,\n63739:59034,\n63740:59035,\n64064:8560,\n64065:8561,\n64066:8562,\n64067:8563,\n64068:8564,\n64069:8565,\n64070:8566,\n64071:8567,\n64072:8568,\n64073:8569,\n64074:8544,\n64075:8545,\n64076:8546,\n64077:8547,\n64078:8548,\n64079:8549,\n64080:8550,\n64081:8551,\n64082:8552,\n64083:8553,\n64084:65506,\n64085:65508,\n64086:65287,\n64087:65282,\n64088:12849,\n64089:8470,\n64090:8481,\n64091:8757,\n64092:32394,\n64093:35100,\n64094:37704,\n64095:37512,\n64096:34012,\n64097:20425,\n64098:28859,\n64099:26161,\n64100:26824,\n64101:37625,\n64102:26363,\n64103:24389,\n64104:20008,\n64105:20193,\n64106:20220,\n64107:20224,\n64108:20227,\n64109:20281,\n64110:20310,\n64111:20370,\n64112:20362,\n64113:20378,\n64114:20372,\n64115:20429,\n64116:20544,\n64117:20514,\n64118:20479,\n64119:20510,\n64120:20550,\n64121:20592,\n64122:20546,\n64123:20628,\n64124:20724,\n64125:20696,\n64126:20810,\n64128:20836,\n64129:20893,\n64130:20926,\n64131:20972,\n64132:21013,\n64133:21148,\n64134:21158,\n64135:21184,\n64136:21211,\n64137:21248,\n64138:21255,\n64139:21284,\n64140:21362,\n64141:21395,\n64142:21426,\n64143:21469,\n64144:64014,\n64145:21660,\n64146:21642,\n64147:21673,\n64148:21759,\n64149:21894,\n64150:22361,\n64151:22373,\n64152:22444,\n64153:22472,\n64154:22471,\n64155:64015,\n64156:64016,\n64157:22686,\n64158:22706,\n64159:22795,\n64160:22867,\n64161:22875,\n64162:22877,\n64163:22883,\n64164:22948,\n64165:22970,\n64166:23382,\n64167:23488,\n64168:29999,\n64169:23512,\n64170:23532,\n64171:23582,\n64172:23718,\n64173:23738,\n64174:23797,\n64175:23847,\n64176:23891,\n64177:64017,\n64178:23874,\n64179:23917,\n64180:23992,\n64181:23993,\n64182:24016,\n64183:24353,\n64184:24372,\n64185:24423,\n64186:24503,\n64187:24542,\n64188:24669,\n64189:24709,\n64190:24714,\n64191:24798,\n64192:24789,\n64193:24864,\n64194:24818,\n64195:24849,\n64196:24887,\n64197:24880,\n64198:24984,\n64199:25107,\n64200:25254,\n64201:25589,\n64202:25696,\n64203:25757,\n64204:25806,\n64205:25934,\n64206:26112,\n64207:26133,\n64208:26171,\n64209:26121,\n64210:26158,\n64211:26142,\n64212:26148,\n64213:26213,\n64214:26199,\n64215:26201,\n64216:64018,\n64217:26227,\n64218:26265,\n64219:26272,\n64220:26290,\n64221:26303,\n64222:26362,\n64223:26382,\n64224:63785,\n64225:26470,\n64226:26555,\n64227:26706,\n64228:26560,\n64229:26625,\n64230:26692,\n64231:26831,\n64232:64019,\n64233:26984,\n64234:64020,\n64235:27032,\n64236:27106,\n64237:27184,\n64238:27243,\n64239:27206,\n64240:27251,\n64241:27262,\n64242:27362,\n64243:27364,\n64244:27606,\n64245:27711,\n64246:27740,\n64247:27782,\n64248:27759,\n64249:27866,\n64250:27908,\n64251:28039,\n64252:28015,\n64320:28054,\n64321:28076,\n64322:28111,\n64323:28152,\n64324:28146,\n64325:28156,\n64326:28217,\n64327:28252,\n64328:28199,\n64329:28220,\n64330:28351,\n64331:28552,\n64332:28597,\n64333:28661,\n64334:28677,\n64335:28679,\n64336:28712,\n64337:28805,\n64338:28843,\n64339:28943,\n64340:28932,\n64341:29020,\n64342:28998,\n64343:28999,\n64344:64021,\n64345:29121,\n64346:29182,\n64347:29361,\n64348:29374,\n64349:29476,\n64350:64022,\n64351:29559,\n64352:29629,\n64353:29641,\n64354:29654,\n64355:29667,\n64356:29650,\n64357:29703,\n64358:29685,\n64359:29734,\n64360:29738,\n64361:29737,\n64362:29742,\n64363:29794,\n64364:29833,\n64365:29855,\n64366:29953,\n64367:30063,\n64368:30338,\n64369:30364,\n64370:30366,\n64371:30363,\n64372:30374,\n64373:64023,\n64374:30534,\n64375:21167,\n64376:30753,\n64377:30798,\n64378:30820,\n64379:30842,\n64380:31024,\n64381:64024,\n64382:64025,\n64384:64026,\n64385:31124,\n64386:64027,\n64387:31131,\n64388:31441,\n64389:31463,\n64390:64028,\n64391:31467,\n64392:31646,\n64393:64029,\n64394:32072,\n64395:32092,\n64396:32183,\n64397:32160,\n64398:32214,\n64399:32338,\n64400:32583,\n64401:32673,\n64402:64030,\n64403:33537,\n64404:33634,\n64405:33663,\n64406:33735,\n64407:33782,\n64408:33864,\n64409:33972,\n64410:34131,\n64411:34137,\n64412:34155,\n64413:64031,\n64414:34224,\n64415:64032,\n64416:64033,\n64417:34823,\n64418:35061,\n64419:35346,\n64420:35383,\n64421:35449,\n64422:35495,\n64423:35518,\n64424:35551,\n64425:64034,\n64426:35574,\n64427:35667,\n64428:35711,\n64429:36080,\n64430:36084,\n64431:36114,\n64432:36214,\n64433:64035,\n64434:36559,\n64435:64036,\n64436:64037,\n64437:36967,\n64438:37086,\n64439:64038,\n64440:37141,\n64441:37159,\n64442:37338,\n64443:37335,\n64444:37342,\n64445:37357,\n64446:37358,\n64447:37348,\n64448:37349,\n64449:37382,\n64450:37392,\n64451:37386,\n64452:37434,\n64453:37440,\n64454:37436,\n64455:37454,\n64456:37465,\n64457:37457,\n64458:37433,\n64459:37479,\n64460:37543,\n64461:37495,\n64462:37496,\n64463:37607,\n64464:37591,\n64465:37593,\n64466:37584,\n64467:64039,\n64468:37589,\n64469:37600,\n64470:37587,\n64471:37669,\n64472:37665,\n64473:37627,\n64474:64040,\n64475:37662,\n64476:37631,\n64477:37661,\n64478:37634,\n64479:37744,\n64480:37719,\n64481:37796,\n64482:37830,\n64483:37854,\n64484:37880,\n64485:37937,\n64486:37957,\n64487:37960,\n64488:38290,\n64489:63964,\n64490:64041,\n64491:38557,\n64492:38575,\n64493:38707,\n64494:38715,\n64495:38723,\n64496:38733,\n64497:38735,\n64498:38737,\n64499:38741,\n64500:38999,\n64501:39013,\n64502:64042,\n64503:64043,\n64504:39207,\n64505:64044,\n64506:39326,\n64507:39502,\n64508:39641,\n64576:39644,\n64577:39797,\n64578:39794,\n64579:39823,\n64580:39857,\n64581:39867,\n64582:39936,\n64583:40304,\n64584:40299,\n64585:64045,\n64586:40473,\n64587:40657\n};\n\n/**\n * @author takahiro / https://github.com/takahirox\n */\n\nfunction DataViewEx ( buffer, littleEndian ) {\n\n\tthis.dv = new DataView( buffer );\n\tthis.offset = 0;\n\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\tthis.encoder = new CharsetEncoder();\n\n}\n\nDataViewEx.prototype = {\n\n\tconstructor: DataViewEx,\n\n\tgetInt8: function () {\n\n\t\tvar value = this.dv.getInt8( this.offset );\n\t\tthis.offset += 1;\n\t\treturn value;\n\n\t},\n\n\tgetInt8Array: function ( size ) {\n\n\t\tvar a = [];\n\n\t\tfor ( var i = 0; i < size; i++ ) {\n\n\t\t\ta.push( this.getInt8() );\n\n\t\t}\n\n\t\treturn a;\n\n\t},\n\n\tgetUint8: function () {\n\n\t\tvar value = this.dv.getUint8( this.offset );\n\t\tthis.offset += 1;\n\t\treturn value;\n\n\t},\n\n\tgetUint8Array: function ( size ) {\n\n\t\tvar a = [];\n\n\t\tfor ( var i = 0; i < size; i++ ) {\n\n\t\t\ta.push( this.getUint8() );\n\n\t\t}\n\n\t\treturn a;\n\n\t},\n\n\n\tgetInt16: function () {\n\n\t\tvar value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\tthis.offset += 2;\n\t\treturn value;\n\n\t},\n\n\tgetInt16Array: function ( size ) {\n\n\t\tvar a = [];\n\n\t\tfor ( var i = 0; i < size; i++ ) {\n\n\t\t\ta.push( this.getInt16() );\n\n\t\t}\n\n\t\treturn a;\n\n\t},\n\n\tgetUint16: function () {\n\n\t\tvar value = this.dv.getUint16( this.offset, this.littleEndian );\n\t\tthis.offset += 2;\n\t\treturn value;\n\n\t},\n\n\tgetUint16Array: function ( size ) {\n\n\t\tvar a = [];\n\n\t\tfor ( var i = 0; i < size; i++ ) {\n\n\t\t\ta.push( this.getUint16() );\n\n\t\t}\n\n\t\treturn a;\n\n\t},\n\n\tgetInt32: function () {\n\n\t\tvar value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t},\n\n\tgetInt32Array: function ( size ) {\n\n\t\tvar a = [];\n\n\t\tfor ( var i = 0; i < size; i++ ) {\n\n\t\t\ta.push( this.getInt32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t},\n\n\tgetUint32: function () {\n\n\t\tvar value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t},\n\n\tgetUint32Array: function ( size ) {\n\n\t\tvar a = [];\n\n\t\tfor ( var i = 0; i < size; i++ ) {\n\n\t\t\ta.push( this.getUint32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t},\n\n\tgetFloat32: function () {\n\n\t\tvar value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t},\n\n\tgetFloat32Array: function( size ) {\n\n\t\tvar a = [];\n\n\t\tfor ( var i = 0; i < size; i++ ) {\n\n\t\t\ta.push( this.getFloat32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t},\n\n\tgetFloat64: function () {\n\n\t\tvar value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\tthis.offset += 8;\n\t\treturn value;\n\n\t},\n\n\tgetFloat64Array: function( size ) {\n\n\t\tvar a = [];\n\n\t\tfor ( var i = 0; i < size; i++ ) {\n\n\t\t\ta.push( this.getFloat64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t},\n\n\tgetIndex: function ( type, isUnsigned ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 1:\n\t\t\t\treturn ( isUnsigned === true ) ? this.getUint8() : this.getInt8();\n\n\t\t\tcase 2:\n\t\t\t\treturn ( isUnsigned === true ) ? this.getUint16() : this.getInt16();\n\n\t\t\tcase 4:\n\t\t\t\treturn this.getInt32(); // No Uint32\n\n\t\t\tdefault:\n\t\t\t\tthrow 'unknown number type ' + type + ' exception.';\n\n\t\t}\n\n\t},\n\n\tgetIndexArray: function ( type, size, isUnsigned ) {\n\n\t\tvar a = [];\n\n\t\tfor ( var i = 0; i < size; i++ ) {\n\n\t\t\ta.push( this.getIndex( type, isUnsigned ) );\n\n\t\t}\n\n\t\treturn a;\n\n\t},\n\n\tgetChars: function ( size ) {\n\n\t\tvar str = '';\n\n\t\twhile ( size > 0 ) {\n\n\t\t\tvar value = this.getUint8();\n\t\t\tsize--;\n\n\t\t\tif ( value === 0 ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tstr += String.fromCharCode( value );\n\n\t\t}\n\n\t\twhile ( size > 0 ) {\n\n\t\t\tthis.getUint8();\n\t\t\tsize--;\n\n\t\t}\n\n\t\treturn str;\n\n\t},\n\n\tgetSjisStringsAsUnicode: function ( size ) {\n\n\t\tvar a = [];\n\n\t\twhile ( size > 0 ) {\n\n\t\t\tvar value = this.getUint8();\n\t\t\tsize--;\n\n\t\t\tif ( value === 0 ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\ta.push( value );\n\n\t\t}\n\n\t\twhile ( size > 0 ) {\n\n\t\t\tthis.getUint8();\n\t\t\tsize--;\n\n\t\t}\n\n\t\treturn this.encoder.s2u( new Uint8Array( a ) );\n\n\t},\n\n\tgetUnicodeStrings: function ( size ) {\n\n\t\tvar str = '';\n\n\t\twhile ( size > 0 ) {\n\n\t\t\tvar value = this.getUint16();\n\t\t\tsize -= 2;\n\n\t\t\tif ( value === 0 ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tstr += String.fromCharCode( value );\n\n\t\t}\n\n\t\twhile ( size > 0 ) {\n\n\t\t\tthis.getUint8();\n\t\t\tsize--;\n\n\t\t}\n\n\t\treturn str;\n\n\t},\n\n\tgetTextBuffer: function () {\n\n\t\tvar size = this.getUint32();\n\t\treturn this.getUnicodeStrings( size );\n\n\t}\n\n};\n\n/**\n * @author takahiro / https://github.com/takahirox\n */\n\nfunction DataCreationHelper () {\n}\n\nDataCreationHelper.prototype = {\n\n\tconstructor: DataCreationHelper,\n\n\tleftToRightVector3: function ( v ) {\n\n\t\tv[ 2 ] = -v[ 2 ];\n\n\t},\n\n\tleftToRightQuaternion: function ( q ) {\n\n\t\tq[ 0 ] = -q[ 0 ];\n\t\tq[ 1 ] = -q[ 1 ];\n\n\t},\n\n\tleftToRightEuler: function ( r ) {\n\n\t\tr[ 0 ] = -r[ 0 ];\n\t\tr[ 1 ] = -r[ 1 ];\n\n\t},\n\n\tleftToRightIndexOrder: function ( p ) {\n\n\t\tvar tmp = p[ 2 ];\n\t\tp[ 2 ] = p[ 0 ];\n\t\tp[ 0 ] = tmp;\n\n\t},\n\n\tleftToRightVector3Range: function ( v1, v2 ) {\n\n\t\tvar tmp = -v2[ 2 ];\n\t\tv2[ 2 ] = -v1[ 2 ];\n\t\tv1[ 2 ] = tmp;\n\n\t},\n\n\tleftToRightEulerRange: function ( r1, r2 ) {\n\n\t\tvar tmp1 = -r2[ 0 ];\n\t\tvar tmp2 = -r2[ 1 ];\n\t\tr2[ 0 ] = -r1[ 0 ];\n\t\tr2[ 1 ] = -r1[ 1 ];\n\t\tr1[ 0 ] = tmp1;\n\t\tr1[ 1 ] = tmp2;\n\n\t}\n\n};\n\n/**\n * @author takahiro / https://github.com/takahirox\n */\n\nfunction Parser() {\n}\n\nParser.prototype.parsePmd = function ( buffer, leftToRight ) {\n\n\tvar pmd = {};\n\tvar dv = new DataViewEx( buffer );\n\n\tpmd.metadata = {};\n\tpmd.metadata.format = 'pmd';\n\tpmd.metadata.coordinateSystem = 'left';\n\n\tvar parseHeader = function () {\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.magic = dv.getChars( 3 );\n\n\t\tif ( metadata.magic !== 'Pmd' ) {\n\n\t\t\tthrow 'PMD file magic is not Pmd, but ' + metadata.magic;\n\n\t\t}\n\n\t\tmetadata.version = dv.getFloat32();\n\t\tmetadata.modelName = dv.getSjisStringsAsUnicode( 20 );\n\t\tmetadata.comment = dv.getSjisStringsAsUnicode( 256 );\n\n\t};\n\n\tvar parseVertices = function () {\n\n\t\tvar parseVertex = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.position = dv.getFloat32Array( 3 );\n\t\t\tp.normal = dv.getFloat32Array( 3 );\n\t\t\tp.uv = dv.getFloat32Array( 2 );\n\t\t\tp.skinIndices = dv.getUint16Array( 2 );\n\t\t\tp.skinWeights = [ dv.getUint8() / 100 ];\n\t\t\tp.skinWeights.push( 1.0 - p.skinWeights[ 0 ] );\n\t\t\tp.edgeFlag = dv.getUint8();\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.vertexCount = dv.getUint32();\n\n\t\tpmd.vertices = [];\n\n\t\tfor ( var i = 0; i < metadata.vertexCount; i++ ) {\n\n\t\t\tpmd.vertices.push( parseVertex() );\n\n\t\t}\n\n\t};\n\n\tvar parseFaces = function () {\n\n\t\tvar parseFace = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.indices = dv.getUint16Array( 3 );\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.faceCount = dv.getUint32() / 3;\n\n\t\tpmd.faces = [];\n\n\t\tfor ( var i = 0; i < metadata.faceCount; i++ ) {\n\n\t\t\tpmd.faces.push( parseFace() );\n\n\t\t}\n\n\t};\n\n\tvar parseMaterials = function () {\n\n\t\tvar parseMaterial = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.diffuse = dv.getFloat32Array( 4 );\n\t\t\tp.shininess = dv.getFloat32();\n\t\t\tp.specular = dv.getFloat32Array( 3 );\n\t\t\tp.ambient = dv.getFloat32Array( 3 );\n\t\t\tp.toonIndex = dv.getInt8();\n\t\t\tp.edgeFlag = dv.getUint8();\n\t\t\tp.faceCount = dv.getUint32() / 3;\n\t\t\tp.fileName = dv.getSjisStringsAsUnicode( 20 );\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.materialCount = dv.getUint32();\n\n\t\tpmd.materials = [];\n\n\t\tfor ( var i = 0; i < metadata.materialCount; i++ ) {\n\n\t\t\tpmd.materials.push( parseMaterial() );\n\n\t\t}\n\n\t};\n\n\tvar parseBones = function () {\n\n\t\tvar parseBone = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getSjisStringsAsUnicode( 20 );\n\t\t\tp.parentIndex = dv.getInt16();\n\t\t\tp.tailIndex = dv.getInt16();\n\t\t\tp.type = dv.getUint8();\n\t\t\tp.ikIndex = dv.getInt16();\n\t\t\tp.position = dv.getFloat32Array( 3 );\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.boneCount = dv.getUint16();\n\n\t\tpmd.bones = [];\n\n\t\tfor ( var i = 0; i < metadata.boneCount; i++ ) {\n\n\t\t\tpmd.bones.push( parseBone() );\n\n\t\t}\n\n\t};\n\n\tvar parseIks = function () {\n\n\t\tvar parseIk = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.target = dv.getUint16();\n\t\t\tp.effector = dv.getUint16();\n\t\t\tp.linkCount = dv.getUint8();\n\t\t\tp.iteration = dv.getUint16();\n\t\t\tp.maxAngle = dv.getFloat32();\n\n\t\t\tp.links = [];\n\t\t\tfor ( var i = 0; i < p.linkCount; i++ ) {\n\n\t\t\t\tvar link = {};\n\t\t\t\tlink.index = dv.getUint16();\n\t\t\t\tp.links.push( link );\n\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.ikCount = dv.getUint16();\n\n\t\tpmd.iks = [];\n\n\t\tfor ( var i = 0; i < metadata.ikCount; i++ ) {\n\n\t\t\tpmd.iks.push( parseIk() );\n\n\t\t}\n\n\t};\n\n\tvar parseMorphs = function () {\n\n\t\tvar parseMorph = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getSjisStringsAsUnicode( 20 );\n\t\t\tp.elementCount = dv.getUint32();\n\t\t\tp.type = dv.getUint8();\n\n\t\t\tp.elements = [];\n\t\t\tfor ( var i = 0; i < p.elementCount; i++ ) {\n\n\t\t\t\tp.elements.push( {\n\t\t\t\t\tindex: dv.getUint32(),\n\t\t\t\t\tposition: dv.getFloat32Array( 3 )\n\t\t\t\t} ) ;\n\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.morphCount = dv.getUint16();\n\n\t\tpmd.morphs = [];\n\n\t\tfor ( var i = 0; i < metadata.morphCount; i++ ) {\n\n\t\t\tpmd.morphs.push( parseMorph() );\n\n\t\t}\n\n\n\t};\n\n\tvar parseMorphFrames = function () {\n\n\t\tvar parseMorphFrame = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.index = dv.getUint16();\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.morphFrameCount = dv.getUint8();\n\n\t\tpmd.morphFrames = [];\n\n\t\tfor ( var i = 0; i < metadata.morphFrameCount; i++ ) {\n\n\t\t\tpmd.morphFrames.push( parseMorphFrame() );\n\n\t\t}\n\n\t};\n\n\tvar parseBoneFrameNames = function () {\n\n\t\tvar parseBoneFrameName = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getSjisStringsAsUnicode( 50 );\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.boneFrameNameCount = dv.getUint8();\n\n\t\tpmd.boneFrameNames = [];\n\n\t\tfor ( var i = 0; i < metadata.boneFrameNameCount; i++ ) {\n\n\t\t\tpmd.boneFrameNames.push( parseBoneFrameName() );\n\n\t\t}\n\n\t};\n\n\tvar parseBoneFrames = function () {\n\n\t\tvar parseBoneFrame = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.boneIndex = dv.getInt16();\n\t\t\tp.frameIndex = dv.getUint8();\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.boneFrameCount = dv.getUint32();\n\n\t\tpmd.boneFrames = [];\n\n\t\tfor ( var i = 0; i < metadata.boneFrameCount; i++ ) {\n\n\t\t\tpmd.boneFrames.push( parseBoneFrame() );\n\n\t\t}\n\n\t};\n\n\tvar parseEnglishHeader = function () {\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.englishCompatibility = dv.getUint8();\n\n\t\tif ( metadata.englishCompatibility > 0 ) {\n\n\t\t\tmetadata.englishModelName = dv.getSjisStringsAsUnicode( 20 );\n\t\t\tmetadata.englishComment = dv.getSjisStringsAsUnicode( 256 );\n\n\t\t}\n\n\t};\n\n\tvar parseEnglishBoneNames = function () {\n\n\t\tvar parseEnglishBoneName = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getSjisStringsAsUnicode( 20 );\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\n\t\tif ( metadata.englishCompatibility === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tpmd.englishBoneNames = [];\n\n\t\tfor ( var i = 0; i < metadata.boneCount; i++ ) {\n\n\t\t\tpmd.englishBoneNames.push( parseEnglishBoneName() );\n\n\t\t}\n\n\t};\n\n\tvar parseEnglishMorphNames = function () {\n\n\t\tvar parseEnglishMorphName = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getSjisStringsAsUnicode( 20 );\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\n\t\tif ( metadata.englishCompatibility === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tpmd.englishMorphNames = [];\n\n\t\tfor ( var i = 0; i < metadata.morphCount - 1; i++ ) {\n\n\t\t\tpmd.englishMorphNames.push( parseEnglishMorphName() );\n\n\t\t}\n\n\t};\n\n\tvar parseEnglishBoneFrameNames = function () {\n\n\t\tvar parseEnglishBoneFrameName = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getSjisStringsAsUnicode( 50 );\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\n\t\tif ( metadata.englishCompatibility === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tpmd.englishBoneFrameNames = [];\n\n\t\tfor ( var i = 0; i < metadata.boneFrameNameCount; i++ ) {\n\n\t\t\tpmd.englishBoneFrameNames.push( parseEnglishBoneFrameName() );\n\n\t\t}\n\n\t};\n\n\tvar parseToonTextures = function () {\n\n\t\tvar parseToonTexture = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.fileName = dv.getSjisStringsAsUnicode( 100 );\n\t\t\treturn p;\n\n\t\t};\n\n\t\tpmd.toonTextures = [];\n\n\t\tfor ( var i = 0; i < 10; i++ ) {\n\n\t\t\tpmd.toonTextures.push( parseToonTexture() );\n\n\t\t}\n\n\t};\n\n\tvar parseRigidBodies = function () {\n\n\t\tvar parseRigidBody = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getSjisStringsAsUnicode( 20 );\n\t\t\tp.boneIndex = dv.getInt16();\n\t\t\tp.groupIndex = dv.getUint8();\n\t\t\tp.groupTarget = dv.getUint16();\n\t\t\tp.shapeType = dv.getUint8();\n\t\t\tp.width = dv.getFloat32();\n\t\t\tp.height = dv.getFloat32();\n\t\t\tp.depth = dv.getFloat32();\n\t\t\tp.position = dv.getFloat32Array( 3 );\n\t\t\tp.rotation = dv.getFloat32Array( 3 );\n\t\t\tp.weight = dv.getFloat32();\n\t\t\tp.positionDamping = dv.getFloat32();\n\t\t\tp.rotationDamping = dv.getFloat32();\n\t\t\tp.restitution = dv.getFloat32();\n\t\t\tp.friction = dv.getFloat32();\n\t\t\tp.type = dv.getUint8();\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.rigidBodyCount = dv.getUint32();\n\n\t\tpmd.rigidBodies = [];\n\n\t\tfor ( var i = 0; i < metadata.rigidBodyCount; i++ ) {\n\n\t\t\tpmd.rigidBodies.push( parseRigidBody() );\n\n\t\t}\n\n\t};\n\n\tvar parseConstraints = function () {\n\n\t\tvar parseConstraint = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getSjisStringsAsUnicode( 20 );\n\t\t\tp.rigidBodyIndex1 = dv.getUint32();\n\t\t\tp.rigidBodyIndex2 = dv.getUint32();\n\t\t\tp.position = dv.getFloat32Array( 3 );\n\t\t\tp.rotation = dv.getFloat32Array( 3 );\n\t\t\tp.translationLimitation1 = dv.getFloat32Array( 3 );\n\t\t\tp.translationLimitation2 = dv.getFloat32Array( 3 );\n\t\t\tp.rotationLimitation1 = dv.getFloat32Array( 3 );\n\t\t\tp.rotationLimitation2 = dv.getFloat32Array( 3 );\n\t\t\tp.springPosition = dv.getFloat32Array( 3 );\n\t\t\tp.springRotation = dv.getFloat32Array( 3 );\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmd.metadata;\n\t\tmetadata.constraintCount = dv.getUint32();\n\n\t\tpmd.constraints = [];\n\n\t\tfor ( var i = 0; i < metadata.constraintCount; i++ ) {\n\n\t\t\tpmd.constraints.push( parseConstraint() );\n\n\t\t}\n\n\t};\n\n\tparseHeader();\n\tparseVertices();\n\tparseFaces();\n\tparseMaterials();\n\tparseBones();\n\tparseIks();\n\tparseMorphs();\n\tparseMorphFrames();\n\tparseBoneFrameNames();\n\tparseBoneFrames();\n\tparseEnglishHeader();\n\tparseEnglishBoneNames();\n\tparseEnglishMorphNames();\n\tparseEnglishBoneFrameNames();\n\tparseToonTextures();\n\tparseRigidBodies();\n\tparseConstraints();\n\n\tif ( leftToRight === true ) this.leftToRightModel( pmd );\n\n\t// console.log( pmd ); // for console debug\n\n\treturn pmd;\n\n};\n\nParser.prototype.parsePmx = function ( buffer, leftToRight ) {\n\n\tvar pmx = {};\n\tvar dv = new DataViewEx( buffer );\n\n\tpmx.metadata = {};\n\tpmx.metadata.format = 'pmx';\n\tpmx.metadata.coordinateSystem = 'left';\n\n\tvar parseHeader = function () {\n\n\t\tvar metadata = pmx.metadata;\n\t\tmetadata.magic = dv.getChars( 4 );\n\n\t\t// Note: don't remove the last blank space.\n\t\tif ( metadata.magic !== 'PMX ' ) {\n\n\t\t\tthrow 'PMX file magic is not PMX , but ' + metadata.magic;\n\n\t\t}\n\n\t\tmetadata.version = dv.getFloat32();\n\n\t\tif ( metadata.version !== 2.0 && metadata.version !== 2.1 ) {\n\n\t\t\tthrow 'PMX version ' + metadata.version + ' is not supported.';\n\n\t\t}\n\n\t\tmetadata.headerSize = dv.getUint8();\n\t\tmetadata.encoding = dv.getUint8();\n\t\tmetadata.additionalUvNum = dv.getUint8();\n\t\tmetadata.vertexIndexSize = dv.getUint8();\n\t\tmetadata.textureIndexSize = dv.getUint8();\n\t\tmetadata.materialIndexSize = dv.getUint8();\n\t\tmetadata.boneIndexSize = dv.getUint8();\n\t\tmetadata.morphIndexSize = dv.getUint8();\n\t\tmetadata.rigidBodyIndexSize = dv.getUint8();\n\t\tmetadata.modelName = dv.getTextBuffer();\n\t\tmetadata.englishModelName = dv.getTextBuffer();\n\t\tmetadata.comment = dv.getTextBuffer();\n\t\tmetadata.englishComment = dv.getTextBuffer();\n\n\t};\n\n\tvar parseVertices = function () {\n\n\t\tvar parseVertex = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.position = dv.getFloat32Array( 3 );\n\t\t\tp.normal = dv.getFloat32Array( 3 );\n\t\t\tp.uv = dv.getFloat32Array( 2 );\n\n\t\t\tp.auvs = [];\n\n\t\t\tfor ( var i = 0; i < pmx.metadata.additionalUvNum; i++ ) {\n\n\t\t\t\tp.auvs.push( dv.getFloat32Array( 4 ) );\n\n\t\t\t}\n\n\t\t\tp.type = dv.getUint8();\n\n\t\t\tvar indexSize = metadata.boneIndexSize;\n\n\t\t\tif ( p.type === 0 ) {  // BDEF1\n\n\t\t\t\tp.skinIndices = dv.getIndexArray( indexSize, 1 );\n\t\t\t\tp.skinWeights = [ 1.0 ];\n\n\t\t\t} else if ( p.type === 1 ) {  // BDEF2\n\n\t\t\t\tp.skinIndices = dv.getIndexArray( indexSize, 2 );\n\t\t\t\tp.skinWeights = dv.getFloat32Array( 1 );\n\t\t\t\tp.skinWeights.push( 1.0 - p.skinWeights[ 0 ] );\n\n\t\t\t} else if ( p.type === 2 ) {  // BDEF4\n\n\t\t\t\tp.skinIndices = dv.getIndexArray( indexSize, 4 );\n\t\t\t\tp.skinWeights = dv.getFloat32Array( 4 );\n\n\t\t\t} else if ( p.type === 3 ) {  // SDEF\n\n\t\t\t\tp.skinIndices = dv.getIndexArray( indexSize, 2 );\n\t\t\t\tp.skinWeights = dv.getFloat32Array( 1 );\n\t\t\t\tp.skinWeights.push( 1.0 - p.skinWeights[ 0 ] );\n\n\t\t\t\tp.skinC = dv.getFloat32Array( 3 );\n\t\t\t\tp.skinR0 = dv.getFloat32Array( 3 );\n\t\t\t\tp.skinR1 = dv.getFloat32Array( 3 );\n\n\t\t\t\t// SDEF is not supported yet and is handled as BDEF2 so far.\n\t\t\t\t// TODO: SDEF support\n\t\t\t\tp.type = 1;\n\n\t\t\t} else {\n\n\t\t\t\tthrow 'unsupport bone type ' + p.type + ' exception.';\n\n\t\t\t}\n\n\t\t\tp.edgeRatio = dv.getFloat32();\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmx.metadata;\n\t\tmetadata.vertexCount = dv.getUint32();\n\n\t\tpmx.vertices = [];\n\n\t\tfor ( var i = 0; i < metadata.vertexCount; i++ ) {\n\n\t\t\tpmx.vertices.push( parseVertex() );\n\n\t\t}\n\n\t};\n\n\tvar parseFaces = function () {\n\n\t\tvar parseFace = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.indices = dv.getIndexArray( metadata.vertexIndexSize, 3, true );\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmx.metadata;\n\t\tmetadata.faceCount = dv.getUint32() / 3;\n\n\t\tpmx.faces = [];\n\n\t\tfor ( var i = 0; i < metadata.faceCount; i++ ) {\n\n\t\t\tpmx.faces.push( parseFace() );\n\n\t\t}\n\n\t};\n\n\tvar parseTextures = function () {\n\n\t\tvar parseTexture = function () {\n\n\t\t\treturn dv.getTextBuffer();\n\n\t\t};\n\n\t\tvar metadata = pmx.metadata;\n\t\tmetadata.textureCount = dv.getUint32();\n\n\t\tpmx.textures = [];\n\n\t\tfor ( var i = 0; i < metadata.textureCount; i++ ) {\n\n\t\t\tpmx.textures.push( parseTexture() );\n\n\t\t}\n\n\t};\n\n\tvar parseMaterials = function () {\n\n\t\tvar parseMaterial = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getTextBuffer();\n\t\t\tp.englishName = dv.getTextBuffer();\n\t\t\tp.diffuse = dv.getFloat32Array( 4 );\n\t\t\tp.specular = dv.getFloat32Array( 3 );\n\t\t\tp.shininess = dv.getFloat32();\n\t\t\tp.ambient = dv.getFloat32Array( 3 );\n\t\t\tp.flag = dv.getUint8();\n\t\t\tp.edgeColor = dv.getFloat32Array( 4 );\n\t\t\tp.edgeSize = dv.getFloat32();\n\t\t\tp.textureIndex = dv.getIndex( pmx.metadata.textureIndexSize );\n\t\t\tp.envTextureIndex = dv.getIndex( pmx.metadata.textureIndexSize );\n\t\t\tp.envFlag = dv.getUint8();\n\t\t\tp.toonFlag = dv.getUint8();\n\n\t\t\tif ( p.toonFlag === 0 ) {\n\n\t\t\t\tp.toonIndex = dv.getIndex( pmx.metadata.textureIndexSize );\n\n\t\t\t} else if ( p.toonFlag === 1 ) {\n\n\t\t\t\tp.toonIndex = dv.getInt8();\n\n\t\t\t} else {\n\n\t\t\t\tthrow 'unknown toon flag ' + p.toonFlag + ' exception.';\n\n\t\t\t}\n\n\t\t\tp.comment = dv.getTextBuffer();\n\t\t\tp.faceCount = dv.getUint32() / 3;\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmx.metadata;\n\t\tmetadata.materialCount = dv.getUint32();\n\n\t\tpmx.materials = [];\n\n\t\tfor ( var i = 0; i < metadata.materialCount; i++ ) {\n\n\t\t\tpmx.materials.push( parseMaterial() );\n\n\t\t}\n\n\t};\n\n\tvar parseBones = function () {\n\n\t\tvar parseBone = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getTextBuffer();\n\t\t\tp.englishName = dv.getTextBuffer();\n\t\t\tp.position = dv.getFloat32Array( 3 );\n\t\t\tp.parentIndex = dv.getIndex( pmx.metadata.boneIndexSize );\n\t\t\tp.transformationClass = dv.getUint32();\n\t\t\tp.flag = dv.getUint16();\n\n\t\t\tif ( p.flag & 0x1 ) {\n\n\t\t\t\tp.connectIndex = dv.getIndex( pmx.metadata.boneIndexSize );\n\n\t\t\t} else {\n\n\t\t\t\tp.offsetPosition = dv.getFloat32Array( 3 );\n\n\t\t\t}\n\n\t\t\tif ( p.flag & 0x100 || p.flag & 0x200 ) {\n\n\t\t\t\t// Note: I don't think Grant is an appropriate name\n\t\t\t\t//       but I found that some English translated MMD tools use this term\n\t\t\t\t//       so I've named it Grant so far.\n\t\t\t\t//       I'd rename to more appropriate name from Grant later.\n\t\t\t\tvar grant = {};\n\n\t\t\t\tgrant.isLocal = ( p.flag & 0x80 ) !== 0 ? true : false;\n\t\t\t\tgrant.affectRotation = ( p.flag & 0x100 ) !== 0 ? true : false;\n\t\t\t\tgrant.affectPosition = ( p.flag & 0x200 ) !== 0 ? true : false;\n\t\t\t\tgrant.parentIndex = dv.getIndex( pmx.metadata.boneIndexSize );\n\t\t\t\tgrant.ratio = dv.getFloat32();\n\n\t\t\t\tp.grant = grant;\n\n\t\t\t}\n\n\t\t\tif ( p.flag & 0x400 ) {\n\n\t\t\t\tp.fixAxis = dv.getFloat32Array( 3 );\n\n\t\t\t}\n\n\t\t\tif ( p.flag & 0x800 ) {\n\n\t\t\t\tp.localXVector = dv.getFloat32Array( 3 );\n\t\t\t\tp.localZVector = dv.getFloat32Array( 3 );\n\n\t\t\t}\n\n\t\t\tif ( p.flag & 0x2000 ) {\n\n\t\t\t\tp.key = dv.getUint32();\n\n\t\t\t}\n\n\t\t\tif ( p.flag & 0x20 ) {\n\n\t\t\t\tvar ik = {};\n\n\t\t\t\tik.effector = dv.getIndex( pmx.metadata.boneIndexSize );\n\t\t\t\tik.target = null;\n\t\t\t\tik.iteration = dv.getUint32();\n\t\t\t\tik.maxAngle = dv.getFloat32();\n\t\t\t\tik.linkCount = dv.getUint32();\n\t\t\t\tik.links = [];\n\n\t\t\t\tfor ( var i = 0; i < ik.linkCount; i++ ) {\n\n\t\t\t\t\tvar link = {};\n\t\t\t\t\tlink.index = dv.getIndex( pmx.metadata.boneIndexSize );\n\t\t\t\t\tlink.angleLimitation = dv.getUint8();\n\n\t\t\t\t\tif ( link.angleLimitation === 1 ) {\n\n\t\t\t\t\t\tlink.lowerLimitationAngle = dv.getFloat32Array( 3 );\n\t\t\t\t\t\tlink.upperLimitationAngle = dv.getFloat32Array( 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tik.links.push( link );\n\n\t\t\t\t}\n\n\t\t\t\tp.ik = ik;\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmx.metadata;\n\t\tmetadata.boneCount = dv.getUint32();\n\n\t\tpmx.bones = [];\n\n\t\tfor ( var i = 0; i < metadata.boneCount; i++ ) {\n\n\t\t\tpmx.bones.push( parseBone() );\n\n\t\t}\n\n\t};\n\n\tvar parseMorphs = function () {\n\n\t\tvar parseMorph = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getTextBuffer();\n\t\t\tp.englishName = dv.getTextBuffer();\n\t\t\tp.panel = dv.getUint8();\n\t\t\tp.type = dv.getUint8();\n\t\t\tp.elementCount = dv.getUint32();\n\t\t\tp.elements = [];\n\n\t\t\tfor ( var i = 0; i < p.elementCount; i++ ) {\n\n\t\t\t\tif ( p.type === 0 ) {  // group morph\n\n\t\t\t\t\tvar m = {};\n\t\t\t\t\tm.index = dv.getIndex( pmx.metadata.morphIndexSize );\n\t\t\t\t\tm.ratio = dv.getFloat32();\n\t\t\t\t\tp.elements.push( m );\n\n\t\t\t\t} else if ( p.type === 1 ) {  // vertex morph\n\n\t\t\t\t\tvar m = {};\n\t\t\t\t\tm.index = dv.getIndex( pmx.metadata.vertexIndexSize, true );\n\t\t\t\t\tm.position = dv.getFloat32Array( 3 );\n\t\t\t\t\tp.elements.push( m );\n\n\t\t\t\t} else if ( p.type === 2 ) {  // bone morph\n\n\t\t\t\t\tvar m = {};\n\t\t\t\t\tm.index = dv.getIndex( pmx.metadata.boneIndexSize );\n\t\t\t\t\tm.position = dv.getFloat32Array( 3 );\n\t\t\t\t\tm.rotation = dv.getFloat32Array( 4 );\n\t\t\t\t\tp.elements.push( m );\n\n\t\t\t\t} else if ( p.type === 3 ) {  // uv morph\n\n\t\t\t\t\tvar m = {};\n\t\t\t\t\tm.index = dv.getIndex( pmx.metadata.vertexIndexSize, true );\n\t\t\t\t\tm.uv = dv.getFloat32Array( 4 );\n\t\t\t\t\tp.elements.push( m );\n\n\t\t\t\t} else if ( p.type === 4 ) {  // additional uv1\n\n\t\t\t\t\t// TODO: implement\n\n\t\t\t\t} else if ( p.type === 5 ) {  // additional uv2\n\n\t\t\t\t\t// TODO: implement\n\n\t\t\t\t} else if ( p.type === 6 ) {  // additional uv3\n\n\t\t\t\t\t// TODO: implement\n\n\t\t\t\t} else if ( p.type === 7 ) {  // additional uv4\n\n\t\t\t\t\t// TODO: implement\n\n\t\t\t\t} else if ( p.type === 8 ) {  // material morph\n\n\t\t\t\t\tvar m = {};\n\t\t\t\t\tm.index = dv.getIndex( pmx.metadata.materialIndexSize );\n\t\t\t\t\tm.type = dv.getUint8();\n\t\t\t\t\tm.diffuse = dv.getFloat32Array( 4 );\n\t\t\t\t\tm.specular = dv.getFloat32Array( 3 );\n\t\t\t\t\tm.shininess = dv.getFloat32();\n\t\t\t\t\tm.ambient = dv.getFloat32Array( 3 );\n\t\t\t\t\tm.edgeColor = dv.getFloat32Array( 4 );\n\t\t\t\t\tm.edgeSize = dv.getFloat32();\n\t\t\t\t\tm.textureColor = dv.getFloat32Array( 4 );\n\t\t\t\t\tm.sphereTextureColor = dv.getFloat32Array( 4 );\n\t\t\t\t\tm.toonColor = dv.getFloat32Array( 4 );\n\t\t\t\t\tp.elements.push( m );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmx.metadata;\n\t\tmetadata.morphCount = dv.getUint32();\n\n\t\tpmx.morphs = [];\n\n\t\tfor ( var i = 0; i < metadata.morphCount; i++ ) {\n\n\t\t\tpmx.morphs.push( parseMorph() );\n\n\t\t}\n\n\t};\n\n\tvar parseFrames = function () {\n\n\t\tvar parseFrame = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getTextBuffer();\n\t\t\tp.englishName = dv.getTextBuffer();\n\t\t\tp.type = dv.getUint8();\n\t\t\tp.elementCount = dv.getUint32();\n\t\t\tp.elements = [];\n\n\t\t\tfor ( var i = 0; i < p.elementCount; i++ ) {\n\n\t\t\t\tvar e = {};\n\t\t\t\te.target = dv.getUint8();\n\t\t\t\te.index = ( e.target === 0 ) ? dv.getIndex( pmx.metadata.boneIndexSize ) : dv.getIndex( pmx.metadata.morphIndexSize );\n\t\t\t\tp.elements.push( e );\n\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmx.metadata;\n\t\tmetadata.frameCount = dv.getUint32();\n\n\t\tpmx.frames = [];\n\n\t\tfor ( var i = 0; i < metadata.frameCount; i++ ) {\n\n\t\t\tpmx.frames.push( parseFrame() );\n\n\t\t}\n\n\t};\n\n\tvar parseRigidBodies = function () {\n\n\t\tvar parseRigidBody = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getTextBuffer();\n\t\t\tp.englishName = dv.getTextBuffer();\n\t\t\tp.boneIndex = dv.getIndex( pmx.metadata.boneIndexSize );\n\t\t\tp.groupIndex = dv.getUint8();\n\t\t\tp.groupTarget = dv.getUint16();\n\t\t\tp.shapeType = dv.getUint8();\n\t\t\tp.width = dv.getFloat32();\n\t\t\tp.height = dv.getFloat32();\n\t\t\tp.depth = dv.getFloat32();\n\t\t\tp.position = dv.getFloat32Array( 3 );\n\t\t\tp.rotation = dv.getFloat32Array( 3 );\n\t\t\tp.weight = dv.getFloat32();\n\t\t\tp.positionDamping = dv.getFloat32();\n\t\t\tp.rotationDamping = dv.getFloat32();\n\t\t\tp.restitution = dv.getFloat32();\n\t\t\tp.friction = dv.getFloat32();\n\t\t\tp.type = dv.getUint8();\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmx.metadata;\n\t\tmetadata.rigidBodyCount = dv.getUint32();\n\n\t\tpmx.rigidBodies = [];\n\n\t\tfor ( var i = 0; i < metadata.rigidBodyCount; i++ ) {\n\n\t\t\tpmx.rigidBodies.push( parseRigidBody() );\n\n\t\t}\n\n\t};\n\n\tvar parseConstraints = function () {\n\n\t\tvar parseConstraint = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.name = dv.getTextBuffer();\n\t\t\tp.englishName = dv.getTextBuffer();\n\t\t\tp.type = dv.getUint8();\n\t\t\tp.rigidBodyIndex1 = dv.getIndex( pmx.metadata.rigidBodyIndexSize );\n\t\t\tp.rigidBodyIndex2 = dv.getIndex( pmx.metadata.rigidBodyIndexSize );\n\t\t\tp.position = dv.getFloat32Array( 3 );\n\t\t\tp.rotation = dv.getFloat32Array( 3 );\n\t\t\tp.translationLimitation1 = dv.getFloat32Array( 3 );\n\t\t\tp.translationLimitation2 = dv.getFloat32Array( 3 );\n\t\t\tp.rotationLimitation1 = dv.getFloat32Array( 3 );\n\t\t\tp.rotationLimitation2 = dv.getFloat32Array( 3 );\n\t\t\tp.springPosition = dv.getFloat32Array( 3 );\n\t\t\tp.springRotation = dv.getFloat32Array( 3 );\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = pmx.metadata;\n\t\tmetadata.constraintCount = dv.getUint32();\n\n\t\tpmx.constraints = [];\n\n\t\tfor ( var i = 0; i < metadata.constraintCount; i++ ) {\n\n\t\t\tpmx.constraints.push( parseConstraint() );\n\n\t\t}\n\n\t};\n\n\tparseHeader();\n\tparseVertices();\n\tparseFaces();\n\tparseTextures();\n\tparseMaterials();\n\tparseBones();\n\tparseMorphs();\n\tparseFrames();\n\tparseRigidBodies();\n\tparseConstraints();\n\n\tif ( leftToRight === true ) this.leftToRightModel( pmx );\n\n\t// console.log( pmx ); // for console debug\n\n\treturn pmx;\n\n};\n\nParser.prototype.parseVmd = function ( buffer, leftToRight ) {\n\n\tvar vmd = {};\n\tvar dv = new DataViewEx( buffer );\n\n\tvmd.metadata = {};\n\tvmd.metadata.coordinateSystem = 'left';\n\n\tvar parseHeader = function () {\n\n\t\tvar metadata = vmd.metadata;\n\t\tmetadata.magic = dv.getChars( 30 );\n\n\t\tif ( metadata.magic !== 'Vocaloid Motion Data 0002' ) {\n\n\t\t\tthrow 'VMD file magic is not Vocaloid Motion Data 0002, but ' + metadata.magic;\n\n\t\t}\n\n\t\tmetadata.name = dv.getSjisStringsAsUnicode( 20 );\n\n\t};\n\n\tvar parseMotions = function () {\n\n\t\tvar parseMotion = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.boneName = dv.getSjisStringsAsUnicode( 15 );\n\t\t\tp.frameNum = dv.getUint32();\n\t\t\tp.position = dv.getFloat32Array( 3 );\n\t\t\tp.rotation = dv.getFloat32Array( 4 );\n\t\t\tp.interpolation = dv.getUint8Array( 64 );\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = vmd.metadata;\n\t\tmetadata.motionCount = dv.getUint32();\n\n\t\tvmd.motions = [];\n\t\tfor ( var i = 0; i < metadata.motionCount; i++ ) {\n\n\t\t\tvmd.motions.push( parseMotion() );\n\n\t\t}\n\n\t};\n\n\tvar parseMorphs = function () {\n\n\t\tvar parseMorph = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.morphName = dv.getSjisStringsAsUnicode( 15 );\n\t\t\tp.frameNum = dv.getUint32();\n\t\t\tp.weight = dv.getFloat32();\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = vmd.metadata;\n\t\tmetadata.morphCount = dv.getUint32();\n\n\t\tvmd.morphs = [];\n\t\tfor ( var i = 0; i < metadata.morphCount; i++ ) {\n\n\t\t\tvmd.morphs.push( parseMorph() );\n\n\t\t}\n\n\t};\n\n\tvar parseCameras = function () {\n\n\t\tvar parseCamera = function () {\n\n\t\t\tvar p = {};\n\t\t\tp.frameNum = dv.getUint32();\n\t\t\tp.distance = dv.getFloat32();\n\t\t\tp.position = dv.getFloat32Array( 3 );\n\t\t\tp.rotation = dv.getFloat32Array( 3 );\n\t\t\tp.interpolation = dv.getUint8Array( 24 );\n\t\t\tp.fov = dv.getUint32();\n\t\t\tp.perspective = dv.getUint8();\n\t\t\treturn p;\n\n\t\t};\n\n\t\tvar metadata = vmd.metadata;\n\t\tmetadata.cameraCount = dv.getUint32();\n\n\t\tvmd.cameras = [];\n\t\tfor ( var i = 0; i < metadata.cameraCount; i++ ) {\n\n\t\t\tvmd.cameras.push( parseCamera() );\n\n\t\t}\n\n\t};\n\n\tparseHeader();\n\tparseMotions();\n\tparseMorphs();\n\tparseCameras();\n\n\tif ( leftToRight === true ) this.leftToRightVmd( vmd );\n\n\t// console.log( vmd ); // for console debug\n\n\treturn vmd;\n\n};\n\nParser.prototype.parseVpd = function ( text, leftToRight ) {\n\n\tvar vpd = {};\n\n\tvpd.metadata = {};\n\tvpd.metadata.coordinateSystem = 'left';\n\n\tvpd.bones = [];\n\n\tvar commentPatternG = /\\/\\/\\w*(\\r|\\n|\\r\\n)/g;\n\tvar newlinePattern = /\\r|\\n|\\r\\n/;\n\n\tvar lines = text.replace( commentPatternG, '' ).split( newlinePattern );\n\n\tfunction throwError () {\n\n\t\tthrow 'the file seems not vpd file.';\n\n\t}\n\n\tfunction checkMagic () {\n\n\t\tif ( lines[ 0 ] !== 'Vocaloid Pose Data file' ) {\n\n\t\t\tthrowError();\n\n\t\t}\n\n\t}\n\n\tfunction parseHeader () {\n\n\t\tif ( lines.length < 4 ) {\n\n\t\t\tthrowError();\n\n\t\t}\n\n\t\tvpd.metadata.parentFile = lines[ 2 ];\n\t\tvpd.metadata.boneCount = parseInt( lines[ 3 ] );\n\n\t}\n\n\tfunction parseBones () {\n\n\t\tvar boneHeaderPattern = /^\\s*(Bone[0-9]+)\\s*\\{\\s*(.*)$/;\n\t\tvar boneVectorPattern = /^\\s*(-?[0-9]+\\.[0-9]+)\\s*,\\s*(-?[0-9]+\\.[0-9]+)\\s*,\\s*(-?[0-9]+\\.[0-9]+)\\s*;/;\n\t\tvar boneQuaternionPattern = /^\\s*(-?[0-9]+\\.[0-9]+)\\s*,\\s*(-?[0-9]+\\.[0-9]+)\\s*,\\s*(-?[0-9]+\\.[0-9]+)\\s*,\\s*(-?[0-9]+\\.[0-9]+)\\s*;/;\n\t\tvar boneFooterPattern = /^\\s*}/;\n\n\t\tvar bones = vpd.bones;\n\t\tvar n = null;\n\t\tvar v = null;\n\t\tvar q = null;\n\n\t\tfor ( var i = 4; i < lines.length; i++ ) {\n\n\t\t\tvar line = lines[ i ];\n\n\t\t\tvar result;\n\n\t\t\tresult = line.match( boneHeaderPattern );\n\n\t\t\tif ( result !== null ) {\n\n\t\t\t\tif ( n !== null ) {\n\n\t\t\t\t\tthrowError();\n\n\t\t\t\t}\n\n\t\t\t\tn = result[ 2 ];\n\n\t\t\t}\n\n\t\t\tresult = line.match( boneVectorPattern );\n\n\t\t\tif ( result !== null ) {\n\n\t\t\t\tif ( v !== null ) {\n\n\t\t\t\t\tthrowError();\n\n\t\t\t\t}\n\n\t\t\t\tv = [\n\n\t\t\t\t\tparseFloat( result[ 1 ] ),\n\t\t\t\t\tparseFloat( result[ 2 ] ),\n\t\t\t\t\tparseFloat( result[ 3 ] )\n\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t\tresult = line.match( boneQuaternionPattern );\n\n\t\t\tif ( result !== null ) {\n\n\t\t\t\tif ( q !== null ) {\n\n\t\t\t\t\tthrowError();\n\n\t\t\t\t}\n\n\t\t\t\tq = [\n\n\t\t\t\t\tparseFloat( result[ 1 ] ),\n\t\t\t\t\tparseFloat( result[ 2 ] ),\n\t\t\t\t\tparseFloat( result[ 3 ] ),\n\t\t\t\t\tparseFloat( result[ 4 ] )\n\n\t\t\t\t];\n\n\n\t\t\t}\n\n\t\t\tresult = line.match( boneFooterPattern );\n\n\t\t\tif ( result !== null ) {\n\n\t\t\t\tif ( n === null || v === null || q === null ) {\n\n\t\t\t\t\tthrowError();\n\n\t\t\t\t}\n\n\t\t\t\tbones.push( {\n\n\t\t\t\t\tname: n,\n\t\t\t\t\ttranslation: v,\n\t\t\t\t\tquaternion: q\n\n\t\t\t\t} );\n\n\t\t\t\tn = null;\n\t\t\t\tv = null;\n\t\t\t\tq = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( n !== null || v !== null || q !== null ) {\n\n\t\t\tthrowError();\n\n\t\t}\n\n\t}\n\n\tcheckMagic();\n\tparseHeader();\n\tparseBones();\n\n\tif ( leftToRight === true ) this.leftToRightVpd( vpd );\n\n\t// console.log( vpd );  // for console debug\n\n\treturn vpd;\n\n};\n\nParser.prototype.mergeVmds = function ( vmds ) {\n\n\tvar v = {};\n\tv.metadata = {};\n\tv.metadata.name = vmds[ 0 ].metadata.name;\n\tv.metadata.coordinateSystem = vmds[ 0 ].metadata.coordinateSystem;\n\tv.metadata.motionCount = 0;\n\tv.metadata.morphCount = 0;\n\tv.metadata.cameraCount = 0;\n\tv.motions = [];\n\tv.morphs = [];\n\tv.cameras = [];\n\n\tfor ( var i = 0; i < vmds.length; i++ ) {\n\n\t\tvar v2 = vmds[ i ];\n\n\t\tv.metadata.motionCount += v2.metadata.motionCount;\n\t\tv.metadata.morphCount += v2.metadata.morphCount;\n\t\tv.metadata.cameraCount += v2.metadata.cameraCount;\n\n\t\tfor ( var j = 0; j < v2.metadata.motionCount; j++ ) {\n\n\t\t\tv.motions.push( v2.motions[ j ] );\n\n\t\t}\n\n\t\tfor ( var j = 0; j < v2.metadata.morphCount; j++ ) {\n\n\t\t\tv.morphs.push( v2.morphs[ j ] );\n\n\t\t}\n\n\t\tfor ( var j = 0; j < v2.metadata.cameraCount; j++ ) {\n\n\t\t\tv.cameras.push( v2.cameras[ j ] );\n\n\t\t}\n\n\t}\n\n\treturn v;\n\n};\n\nParser.prototype.leftToRightModel = function ( model ) {\n\n\tif ( model.metadata.coordinateSystem === 'right' ) {\n\n\t\treturn;\n\n\t}\n\n\tmodel.metadata.coordinateSystem = 'right';\n\n\tvar helper = new DataCreationHelper();\n\n\tfor ( var i = 0; i < model.metadata.vertexCount; i++ ) {\n\n\t\thelper.leftToRightVector3( model.vertices[ i ].position );\n\t\thelper.leftToRightVector3( model.vertices[ i ].normal );\n\n\t}\n\n\tfor ( var i = 0; i < model.metadata.faceCount; i++ ) {\n\n\t\thelper.leftToRightIndexOrder( model.faces[ i ].indices );\n\n\t}\n\n\tfor ( var i = 0; i < model.metadata.boneCount; i++ ) {\n\n\t\thelper.leftToRightVector3( model.bones[ i ].position );\n\n\t}\n\n\t// TODO: support other morph for PMX\n\tfor ( var i = 0; i < model.metadata.morphCount; i++ ) {\n\n\t\tvar m = model.morphs[ i ];\n\n\t\tif ( model.metadata.format === 'pmx' && m.type !== 1 ) {\n\n\t\t\t// TODO: implement\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tfor ( var j = 0; j < m.elements.length; j++ ) {\n\n\t\t\thelper.leftToRightVector3( m.elements[ j ].position );\n\n\t\t}\n\n\t}\n\n\tfor ( var i = 0; i < model.metadata.rigidBodyCount; i++ ) {\n\n\t\thelper.leftToRightVector3( model.rigidBodies[ i ].position );\n\t\thelper.leftToRightEuler( model.rigidBodies[ i ].rotation );\n\n\t}\n\n\tfor ( var i = 0; i < model.metadata.constraintCount; i++ ) {\n\n\t\thelper.leftToRightVector3( model.constraints[ i ].position );\n\t\thelper.leftToRightEuler( model.constraints[ i ].rotation );\n\t\thelper.leftToRightVector3Range( model.constraints[ i ].translationLimitation1, model.constraints[ i ].translationLimitation2 );\n\t\thelper.leftToRightEulerRange( model.constraints[ i ].rotationLimitation1, model.constraints[ i ].rotationLimitation2 );\n\n\t}\n\n};\n\nParser.prototype.leftToRightVmd = function ( vmd ) {\n\n\tif ( vmd.metadata.coordinateSystem === 'right' ) {\n\n\t\treturn;\n\n\t}\n\n\tvmd.metadata.coordinateSystem = 'right';\n\n\tvar helper = new DataCreationHelper();\n\n\tfor ( var i = 0; i < vmd.metadata.motionCount; i++ ) {\n\n\t\thelper.leftToRightVector3( vmd.motions[ i ].position );\n\t\thelper.leftToRightQuaternion( vmd.motions[ i ].rotation );\n\n\t}\n\n\tfor ( var i = 0; i < vmd.metadata.cameraCount; i++ ) {\n\n\t\thelper.leftToRightVector3( vmd.cameras[ i ].position );\n\t\thelper.leftToRightEuler( vmd.cameras[ i ].rotation );\n\n\t}\n\n};\n\nParser.prototype.leftToRightVpd = function ( vpd ) {\n\n\tif ( vpd.metadata.coordinateSystem === 'right' ) {\n\n\t\treturn;\n\n\t}\n\n\tvpd.metadata.coordinateSystem = 'right';\n\n\tvar helper = new DataCreationHelper();\n\n\tfor ( var i = 0; i < vpd.bones.length; i++ ) {\n\n\t\thelper.leftToRightVector3( vpd.bones[ i ].translation );\n\t\thelper.leftToRightQuaternion( vpd.bones[ i ].quaternion );\n\n\t}\n\n};\n\nvar MMDParser = {\n  CharsetEncoder: CharsetEncoder,\n  Parser: Parser\n};\n\nexport { MMDParser, CharsetEncoder, Parser };\n", "import mod from \"../lib/src/api.js\";\n\nexport default mod;\nexport const Alternation = mod.Alternation;\nexport const Alternative = mod.Alternative;\nexport const CstParser = mod.CstParser;\nexport const EMPTY_ALT = mod.EMPTY_ALT;\nexport const EOF = mod.EOF;\nexport const EarlyExitException = mod.EarlyExitException;\nexport const EmbeddedActionsParser = mod.EmbeddedActionsParser;\nexport const GAstVisitor = mod.GAstVisitor;\nexport const LLkLookaheadStrategy = mod.LLkLookaheadStrategy;\nexport const Lexer = mod.Lexer;\nexport const LexerDefinitionErrorType = mod.LexerDefinitionErrorType;\nexport const MismatchedTokenException = mod.MismatchedTokenException;\nexport const NoViableAltException = mod.NoViableAltException;\nexport const NonTerminal = mod.NonTerminal;\nexport const NotAllInputParsedException = mod.NotAllInputParsedException;\nexport const Option = mod.Option;\nexport const Parser = mod.Parser;\nexport const ParserDefinitionErrorType = mod.ParserDefinitionErrorType;\nexport const Repetition = mod.Repetition;\nexport const RepetitionMandatory = mod.RepetitionMandatory;\nexport const RepetitionMandatoryWithSeparator = mod.RepetitionMandatoryWithSeparator;\nexport const RepetitionWithSeparator = mod.RepetitionWithSeparator;\nexport const Rule = mod.Rule;\nexport const Terminal = mod.Terminal;\nexport const VERSION = mod.VERSION;\nexport const clearCache = mod.clearCache;\nexport const createSyntaxDiagramsCode = mod.createSyntaxDiagramsCode;\nexport const createToken = mod.createToken;\nexport const createTokenInstance = mod.createTokenInstance;\nexport const defaultLexerErrorProvider = mod.defaultLexerErrorProvider;\nexport const defaultParserErrorProvider = mod.defaultParserErrorProvider;\nexport const generateCstDts = mod.generateCstDts;\nexport const getLookaheadPaths = mod.getLookaheadPaths;\nexport const isRecognitionException = mod.isRecognitionException;\nexport const serializeGrammar = mod.serializeGrammar;\nexport const serializeProduction = mod.serializeProduction;\nexport const tokenLabel = mod.tokenLabel;\nexport const tokenMatcher = mod.tokenMatcher;\nexport const tokenName = mod.tokenName;\n", "///////////////////////////////////////////////////\n// KTX2 Header.\n///////////////////////////////////////////////////\n\nexport const KHR_SUPERCOMPRESSION_NONE = 0;\nexport const KHR_SUPERCOMPRESSION_BASISLZ = 1;\nexport const KHR_SUPERCOMPRESSION_ZSTD = 2;\nexport const KHR_SUPERCOMPRESSION_ZLIB = 3;\n\n///////////////////////////////////////////////////\n// Data Format Descriptor (DFD).\n///////////////////////////////////////////////////\n\nexport const KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT = 0;\nexport const KHR_DF_VENDORID_KHRONOS = 0;\nexport const KHR_DF_VERSION = 2;\n\nexport const KHR_DF_MODEL_UNSPECIFIED = 0;\nexport const KHR_DF_MODEL_RGBSDA = 1;\n// ...\nexport const KHR_DF_MODEL_ETC1 = 160;\nexport const KHR_DF_MODEL_ETC2 = 161;\nexport const KHR_DF_MODEL_ASTC = 162;\nexport const KHR_DF_MODEL_ETC1S = 163;\nexport const KHR_DF_MODEL_UASTC = 166;\n\nexport const KHR_DF_FLAG_ALPHA_STRAIGHT = 0;\nexport const KHR_DF_FLAG_ALPHA_PREMULTIPLIED = 1;\n\nexport const KHR_DF_TRANSFER_UNSPECIFIED = 0;\nexport const KHR_DF_TRANSFER_LINEAR = 1;\nexport const KHR_DF_TRANSFER_SRGB = 2;\nexport const KHR_DF_TRANSFER_ITU = 3;\nexport const KHR_DF_TRANSFER_NTSC = 4;\nexport const KHR_DF_TRANSFER_SLOG = 5;\nexport const KHR_DF_TRANSFER_SLOG2 = 6;\nexport const KHR_DF_TRANSFER_BT1886 = 7;\nexport const KHR_DF_TRANSFER_HLG_OETF = 8;\nexport const KHR_DF_TRANSFER_HLG_EOTF = 9;\nexport const KHR_DF_TRANSFER_PQ_EOTF = 10;\nexport const KHR_DF_TRANSFER_PQ_OETF = 11;\nexport const KHR_DF_TRANSFER_DCIP3 = 12;\nexport const KHR_DF_TRANSFER_PAL_OETF = 13;\nexport const KHR_DF_TRANSFER_PAL625_EOTF = 14;\nexport const KHR_DF_TRANSFER_ST240 = 15;\nexport const KHR_DF_TRANSFER_ACESCC = 16;\nexport const KHR_DF_TRANSFER_ACESCCT = 17;\nexport const KHR_DF_TRANSFER_ADOBERGB = 18;\n\nexport const KHR_DF_PRIMARIES_UNSPECIFIED = 0;\nexport const KHR_DF_PRIMARIES_BT709 = 1;\nexport const KHR_DF_PRIMARIES_BT601_EBU = 2;\nexport const KHR_DF_PRIMARIES_BT601_SMPTE = 3;\nexport const KHR_DF_PRIMARIES_BT2020 = 4;\nexport const KHR_DF_PRIMARIES_CIEXYZ = 5;\nexport const KHR_DF_PRIMARIES_ACES = 6;\nexport const KHR_DF_PRIMARIES_ACESCC = 7;\nexport const KHR_DF_PRIMARIES_NTSC1953 = 8;\nexport const KHR_DF_PRIMARIES_PAL525 = 9;\nexport const KHR_DF_PRIMARIES_DISPLAYP3 = 10;\nexport const KHR_DF_PRIMARIES_ADOBERGB = 11;\n\nexport const KHR_DF_CHANNEL_RGBSDA_RED = 0;\nexport const KHR_DF_CHANNEL_RGBSDA_GREEN = 1;\nexport const KHR_DF_CHANNEL_RGBSDA_BLUE = 2;\nexport const KHR_DF_CHANNEL_RGBSDA_STENCIL = 13;\nexport const KHR_DF_CHANNEL_RGBSDA_DEPTH = 14;\nexport const KHR_DF_CHANNEL_RGBSDA_ALPHA = 15;\n\nexport const KHR_DF_SAMPLE_DATATYPE_FLOAT = 0x80;\nexport const KHR_DF_SAMPLE_DATATYPE_SIGNED = 0x40;\nexport const KHR_DF_SAMPLE_DATATYPE_EXPONENT = 0x20;\nexport const KHR_DF_SAMPLE_DATATYPE_LINEAR = 0x10;\n\n///////////////////////////////////////////////////\n// VK FORMAT.\n///////////////////////////////////////////////////\n\nexport const VK_FORMAT_UNDEFINED = 0;\nexport const VK_FORMAT_R4G4_UNORM_PACK8 = 1;\nexport const VK_FORMAT_R4G4B4A4_UNORM_PACK16 = 2;\nexport const VK_FORMAT_B4G4R4A4_UNORM_PACK16 = 3;\nexport const VK_FORMAT_R5G6B5_UNORM_PACK16 = 4;\nexport const VK_FORMAT_B5G6R5_UNORM_PACK16 = 5;\nexport const VK_FORMAT_R5G5B5A1_UNORM_PACK16 = 6;\nexport const VK_FORMAT_B5G5R5A1_UNORM_PACK16 = 7;\nexport const VK_FORMAT_A1R5G5B5_UNORM_PACK16 = 8;\nexport const VK_FORMAT_R8_UNORM = 9;\nexport const VK_FORMAT_R8_SNORM = 10;\nexport const VK_FORMAT_R8_UINT = 13;\nexport const VK_FORMAT_R8_SINT = 14;\nexport const VK_FORMAT_R8_SRGB = 15;\nexport const VK_FORMAT_R8G8_UNORM = 16;\nexport const VK_FORMAT_R8G8_SNORM = 17;\nexport const VK_FORMAT_R8G8_UINT = 20;\nexport const VK_FORMAT_R8G8_SINT = 21;\nexport const VK_FORMAT_R8G8_SRGB = 22;\nexport const VK_FORMAT_R8G8B8_UNORM = 23;\nexport const VK_FORMAT_R8G8B8_SNORM = 24;\nexport const VK_FORMAT_R8G8B8_UINT = 27;\nexport const VK_FORMAT_R8G8B8_SINT = 28;\nexport const VK_FORMAT_R8G8B8_SRGB = 29;\nexport const VK_FORMAT_B8G8R8_UNORM = 30;\nexport const VK_FORMAT_B8G8R8_SNORM = 31;\nexport const VK_FORMAT_B8G8R8_UINT = 34;\nexport const VK_FORMAT_B8G8R8_SINT = 35;\nexport const VK_FORMAT_B8G8R8_SRGB = 36;\nexport const VK_FORMAT_R8G8B8A8_UNORM = 37;\nexport const VK_FORMAT_R8G8B8A8_SNORM = 38;\nexport const VK_FORMAT_R8G8B8A8_UINT = 41;\nexport const VK_FORMAT_R8G8B8A8_SINT = 42;\nexport const VK_FORMAT_R8G8B8A8_SRGB = 43;\nexport const VK_FORMAT_B8G8R8A8_UNORM = 44;\nexport const VK_FORMAT_B8G8R8A8_SNORM = 45;\nexport const VK_FORMAT_B8G8R8A8_UINT = 48;\nexport const VK_FORMAT_B8G8R8A8_SINT = 49;\nexport const VK_FORMAT_B8G8R8A8_SRGB = 50;\nexport const VK_FORMAT_A2R10G10B10_UNORM_PACK32 = 58;\nexport const VK_FORMAT_A2R10G10B10_SNORM_PACK32 = 59;\nexport const VK_FORMAT_A2R10G10B10_UINT_PACK32 = 62;\nexport const VK_FORMAT_A2R10G10B10_SINT_PACK32 = 63;\nexport const VK_FORMAT_A2B10G10R10_UNORM_PACK32 = 64;\nexport const VK_FORMAT_A2B10G10R10_SNORM_PACK32 = 65;\nexport const VK_FORMAT_A2B10G10R10_UINT_PACK32 = 68;\nexport const VK_FORMAT_A2B10G10R10_SINT_PACK32 = 69;\nexport const VK_FORMAT_R16_UNORM = 70;\nexport const VK_FORMAT_R16_SNORM = 71;\nexport const VK_FORMAT_R16_UINT = 74;\nexport const VK_FORMAT_R16_SINT = 75;\nexport const VK_FORMAT_R16_SFLOAT = 76;\nexport const VK_FORMAT_R16G16_UNORM = 77;\nexport const VK_FORMAT_R16G16_SNORM = 78;\nexport const VK_FORMAT_R16G16_UINT = 81;\nexport const VK_FORMAT_R16G16_SINT = 82;\nexport const VK_FORMAT_R16G16_SFLOAT = 83;\nexport const VK_FORMAT_R16G16B16_UNORM = 84;\nexport const VK_FORMAT_R16G16B16_SNORM = 85;\nexport const VK_FORMAT_R16G16B16_UINT = 88;\nexport const VK_FORMAT_R16G16B16_SINT = 89;\nexport const VK_FORMAT_R16G16B16_SFLOAT = 90;\nexport const VK_FORMAT_R16G16B16A16_UNORM = 91;\nexport const VK_FORMAT_R16G16B16A16_SNORM = 92;\nexport const VK_FORMAT_R16G16B16A16_UINT = 95;\nexport const VK_FORMAT_R16G16B16A16_SINT = 96;\nexport const VK_FORMAT_R16G16B16A16_SFLOAT = 97;\nexport const VK_FORMAT_R32_UINT = 98;\nexport const VK_FORMAT_R32_SINT = 99;\nexport const VK_FORMAT_R32_SFLOAT = 100;\nexport const VK_FORMAT_R32G32_UINT = 101;\nexport const VK_FORMAT_R32G32_SINT = 102;\nexport const VK_FORMAT_R32G32_SFLOAT = 103;\nexport const VK_FORMAT_R32G32B32_UINT = 104;\nexport const VK_FORMAT_R32G32B32_SINT = 105;\nexport const VK_FORMAT_R32G32B32_SFLOAT = 106;\nexport const VK_FORMAT_R32G32B32A32_UINT = 107;\nexport const VK_FORMAT_R32G32B32A32_SINT = 108;\nexport const VK_FORMAT_R32G32B32A32_SFLOAT = 109;\nexport const VK_FORMAT_R64_UINT = 110;\nexport const VK_FORMAT_R64_SINT = 111;\nexport const VK_FORMAT_R64_SFLOAT = 112;\nexport const VK_FORMAT_R64G64_UINT = 113;\nexport const VK_FORMAT_R64G64_SINT = 114;\nexport const VK_FORMAT_R64G64_SFLOAT = 115;\nexport const VK_FORMAT_R64G64B64_UINT = 116;\nexport const VK_FORMAT_R64G64B64_SINT = 117;\nexport const VK_FORMAT_R64G64B64_SFLOAT = 118;\nexport const VK_FORMAT_R64G64B64A64_UINT = 119;\nexport const VK_FORMAT_R64G64B64A64_SINT = 120;\nexport const VK_FORMAT_R64G64B64A64_SFLOAT = 121;\nexport const VK_FORMAT_B10G11R11_UFLOAT_PACK32 = 122;\nexport const VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 = 123;\nexport const VK_FORMAT_D16_UNORM = 124;\nexport const VK_FORMAT_X8_D24_UNORM_PACK32 = 125;\nexport const VK_FORMAT_D32_SFLOAT = 126;\nexport const VK_FORMAT_S8_UINT = 127;\nexport const VK_FORMAT_D16_UNORM_S8_UINT = 128;\nexport const VK_FORMAT_D24_UNORM_S8_UINT = 129;\nexport const VK_FORMAT_D32_SFLOAT_S8_UINT = 130;\nexport const VK_FORMAT_BC1_RGB_UNORM_BLOCK = 131;\nexport const VK_FORMAT_BC1_RGB_SRGB_BLOCK = 132;\nexport const VK_FORMAT_BC1_RGBA_UNORM_BLOCK = 133;\nexport const VK_FORMAT_BC1_RGBA_SRGB_BLOCK = 134;\nexport const VK_FORMAT_BC2_UNORM_BLOCK = 135;\nexport const VK_FORMAT_BC2_SRGB_BLOCK = 136;\nexport const VK_FORMAT_BC3_UNORM_BLOCK = 137;\nexport const VK_FORMAT_BC3_SRGB_BLOCK = 138;\nexport const VK_FORMAT_BC4_UNORM_BLOCK = 139;\nexport const VK_FORMAT_BC4_SNORM_BLOCK = 140;\nexport const VK_FORMAT_BC5_UNORM_BLOCK = 141;\nexport const VK_FORMAT_BC5_SNORM_BLOCK = 142;\nexport const VK_FORMAT_BC6H_UFLOAT_BLOCK = 143;\nexport const VK_FORMAT_BC6H_SFLOAT_BLOCK = 144;\nexport const VK_FORMAT_BC7_UNORM_BLOCK = 145;\nexport const VK_FORMAT_BC7_SRGB_BLOCK = 146;\nexport const VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = 147;\nexport const VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = 148;\nexport const VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = 149;\nexport const VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = 150;\nexport const VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = 151;\nexport const VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = 152;\nexport const VK_FORMAT_EAC_R11_UNORM_BLOCK = 153;\nexport const VK_FORMAT_EAC_R11_SNORM_BLOCK = 154;\nexport const VK_FORMAT_EAC_R11G11_UNORM_BLOCK = 155;\nexport const VK_FORMAT_EAC_R11G11_SNORM_BLOCK = 156;\nexport const VK_FORMAT_ASTC_4x4_UNORM_BLOCK = 157;\nexport const VK_FORMAT_ASTC_4x4_SRGB_BLOCK = 158;\nexport const VK_FORMAT_ASTC_5x4_UNORM_BLOCK = 159;\nexport const VK_FORMAT_ASTC_5x4_SRGB_BLOCK = 160;\nexport const VK_FORMAT_ASTC_5x5_UNORM_BLOCK = 161;\nexport const VK_FORMAT_ASTC_5x5_SRGB_BLOCK = 162;\nexport const VK_FORMAT_ASTC_6x5_UNORM_BLOCK = 163;\nexport const VK_FORMAT_ASTC_6x5_SRGB_BLOCK = 164;\nexport const VK_FORMAT_ASTC_6x6_UNORM_BLOCK = 165;\nexport const VK_FORMAT_ASTC_6x6_SRGB_BLOCK = 166;\nexport const VK_FORMAT_ASTC_8x5_UNORM_BLOCK = 167;\nexport const VK_FORMAT_ASTC_8x5_SRGB_BLOCK = 168;\nexport const VK_FORMAT_ASTC_8x6_UNORM_BLOCK = 169;\nexport const VK_FORMAT_ASTC_8x6_SRGB_BLOCK = 170;\nexport const VK_FORMAT_ASTC_8x8_UNORM_BLOCK = 171;\nexport const VK_FORMAT_ASTC_8x8_SRGB_BLOCK = 172;\nexport const VK_FORMAT_ASTC_10x5_UNORM_BLOCK = 173;\nexport const VK_FORMAT_ASTC_10x5_SRGB_BLOCK = 174;\nexport const VK_FORMAT_ASTC_10x6_UNORM_BLOCK = 175;\nexport const VK_FORMAT_ASTC_10x6_SRGB_BLOCK = 176;\nexport const VK_FORMAT_ASTC_10x8_UNORM_BLOCK = 177;\nexport const VK_FORMAT_ASTC_10x8_SRGB_BLOCK = 178;\nexport const VK_FORMAT_ASTC_10x10_UNORM_BLOCK = 179;\nexport const VK_FORMAT_ASTC_10x10_SRGB_BLOCK = 180;\nexport const VK_FORMAT_ASTC_12x10_UNORM_BLOCK = 181;\nexport const VK_FORMAT_ASTC_12x10_SRGB_BLOCK = 182;\nexport const VK_FORMAT_ASTC_12x12_UNORM_BLOCK = 183;\nexport const VK_FORMAT_ASTC_12x12_SRGB_BLOCK = 184;\nexport const VK_FORMAT_R10X6_UNORM_PACK16 = 1000156007;\nexport const VK_FORMAT_R10X6G10X6_UNORM_2PACK16 = 1000156008;\nexport const VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 = 1000156009;\nexport const VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = 1000156010;\nexport const VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = 1000156011;\nexport const VK_FORMAT_R12X4_UNORM_PACK16 = 1000156017;\nexport const VK_FORMAT_R12X4G12X4_UNORM_2PACK16 = 1000156018;\nexport const VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 = 1000156019;\nexport const VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = 1000156020;\nexport const VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = 1000156021;\nexport const VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG = 1000054000;\nexport const VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG = 1000054001;\nexport const VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG = 1000054002;\nexport const VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG = 1000054003;\nexport const VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG = 1000054004;\nexport const VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG = 1000054005;\nexport const VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG = 1000054006;\nexport const VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG = 1000054007;\nexport const VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT = 1000066000;\nexport const VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT = 1000066001;\nexport const VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT = 1000066002;\nexport const VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT = 1000066003;\nexport const VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT = 1000066004;\nexport const VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT = 1000066005;\nexport const VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT = 1000066006;\nexport const VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT = 1000066007;\nexport const VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT = 1000066008;\nexport const VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT = 1000066009;\nexport const VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT = 1000066010;\nexport const VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT = 1000066011;\nexport const VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT = 1000066012;\nexport const VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT = 1000066013;\nexport const VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT = 1000340000;\nexport const VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT = 1000340001;\n", "import {\n\tKHR_DF_FLAG_ALPHA_STRAIGHT,\n\tKHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT,\n\tKHR_DF_MODEL_UNSPECIFIED,\n\tKHR_DF_PRIMARIES_BT709,\n\tKHR_DF_TRANSFER_SRGB,\n\tKHR_DF_VENDORID_KHRONOS,\n\tKHR_DF_VERSION,\n\tKHR_SUPERCOMPRESSION_NONE,\n\tVK_FORMAT_UNDEFINED,\n} from './constants';\n\n/**\n * Represents an unpacked KTX 2.0 texture container. Data for individual mip levels are stored in\n * the `.levels` array, typically compressed in Basis Universal formats. Additional properties\n * provide metadata required to process, transcode, and upload these textures.\n */\nexport class KTX2Container {\n\t/**\n\t * Specifies the image format using Vulkan VkFormat enum values. When using Basis Universal\n\t * texture formats, `vkFormat` must be VK_FORMAT_UNDEFINED.\n\t */\n\tpublic vkFormat = VK_FORMAT_UNDEFINED;\n\n\t/**\n\t * Size of the data type in bytes used to upload the data to a graphics API. When `vkFormat` is\n\t * VK_FORMAT_UNDEFINED, `typeSize` must be 1.\n\t */\n\tpublic typeSize = 1;\n\n\t/** Width of the texture image for level 0, in pixels. */\n\tpublic pixelWidth = 0;\n\n\t/** Height of the texture image for level 0, in pixels. */\n\tpublic pixelHeight = 0;\n\n\t/** Depth of the texture image for level 0, in pixels (3D textures only). */\n\tpublic pixelDepth = 0;\n\n\t/** Number of array elements (array textures only). */\n\tpublic layerCount = 0;\n\n\t/**\n\t * Number of cubemap faces. For cubemaps and cubemap arrays, `faceCount` must be 6. For all\n\t * other textures, `faceCount` must be 1. Cubemap faces are stored in +X, -X, +Y, -Y, +Z, -Z\n\t * order.\n\t */\n\tpublic faceCount = 1;\n\n\t/** Indicates which supercompression scheme has been applied to mip level images, if any. */\n\tpublic supercompressionScheme = KHR_SUPERCOMPRESSION_NONE;\n\n\t/** Mip levels, ordered largest (original) to smallest (~1px). */\n\tpublic levels: KTX2Level[] = [];\n\n\t/** Data Format Descriptor. */\n\tpublic dataFormatDescriptor: KTX2DataFormatDescriptorBasicFormat[] = [\n\t\t{\n\t\t\tvendorId: KHR_DF_VENDORID_KHRONOS,\n\t\t\tdescriptorType: KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT,\n\t\t\tdescriptorBlockSize: 0,\n\t\t\tversionNumber: KHR_DF_VERSION,\n\t\t\tcolorModel: KHR_DF_MODEL_UNSPECIFIED,\n\t\t\tcolorPrimaries: KHR_DF_PRIMARIES_BT709,\n\t\t\ttransferFunction: KHR_DF_TRANSFER_SRGB,\n\t\t\tflags: KHR_DF_FLAG_ALPHA_STRAIGHT,\n\t\t\ttexelBlockDimension: [0, 0, 0, 0],\n\t\t\tbytesPlane: [0, 0, 0, 0, 0, 0, 0, 0],\n\t\t\tsamples: [],\n\t\t},\n\t];\n\n\t/** Key/Value Data. */\n\tpublic keyValue: { [key: string]: string | Uint8Array } = {};\n\n\t/** Supercompression Global Data. */\n\tpublic globalData: KTX2GlobalDataBasisLZ | null = null;\n}\n\n///////////////////////////////////////////////////\n// Mip Levels.\n///////////////////////////////////////////////////\n\nexport interface KTX2Level {\n\t/** Compressed data of the mip level. */\n\tlevelData: Uint8Array;\n\n\t/**\n\t * Size of the mip level after reflation from supercompression, if applicable. When\n\t * `supercompressionType` is BASISLZ, `uncompressedByteLength` must be 0. When\n\t * `supercompressionType` is `NONE`, `uncompressedByteLength` must match the `levelData` byte\n\t * length.\n\t *\n\t * _**NOTICE:** this implies that for formats such as UASTC, `uncompressedByteLength` may\n\t * indicate size after ZSTD reflation (and of transcoded ASTC data), but does _not_ indicate\n\t * size of decoded RGBA32 pixels._\n\t */\n\tuncompressedByteLength: number;\n}\n\n///////////////////////////////////////////////////\n// Data Format Descriptor (DFD).\n///////////////////////////////////////////////////\n\nexport interface KTX2DataFormatDescriptorBasicFormat {\n\tvendorId: number;\n\tdescriptorType: number;\n\tversionNumber: number;\n\t/** @deprecated Inferred. */\n\tdescriptorBlockSize: number;\n\tcolorModel: number;\n\tcolorPrimaries: number;\n\ttransferFunction: number;\n\tflags: number;\n\ttexelBlockDimension: [number, number, number, number];\n\tbytesPlane: [number, number, number, number, number, number, number, number];\n\tsamples: KTX2BasicFormatSample[];\n}\n\nexport interface KTX2BasicFormatSample {\n\tbitOffset: number;\n\tbitLength: number;\n\t/** @deprecated Renamed to 'channelType'. */\n\tchannelID?: number;\n\tchannelType: number;\n\tsamplePosition: number[];\n\tsampleLower: number;\n\tsampleUpper: number;\n}\n\n///////////////////////////////////////////////////\n// Supercompression Global Data.\n///////////////////////////////////////////////////\n\nexport interface KTX2GlobalDataBasisLZ {\n\tendpointCount: number;\n\tselectorCount: number;\n\timageDescs: KTX2GlobalDataBasisLZImageDesc[];\n\tendpointsData: Uint8Array;\n\tselectorsData: Uint8Array;\n\ttablesData: Uint8Array;\n\textendedData: Uint8Array;\n}\n\ninterface KTX2GlobalDataBasisLZImageDesc {\n\timageFlags: number;\n\trgbSliceByteOffset: number;\n\trgbSliceByteLength: number;\n\talphaSliceByteOffset: number;\n\talphaSliceByteLength: number;\n}\n", "export class BufferReader {\n\tprivate _dataView: DataView;\n\tprivate _littleEndian: boolean;\n\tpublic _offset: number;\n\n\tconstructor(data: Uint8Array, byteOffset: number, byteLength: number, littleEndian: boolean) {\n\t\tthis._dataView = new DataView(data.buffer, data.byteOffset + byteOffset, byteLength);\n\t\tthis._littleEndian = littleEndian;\n\t\tthis._offset = 0;\n\t}\n\n\t_nextUint8() {\n\t\tconst value = this._dataView.getUint8(this._offset);\n\t\tthis._offset += 1;\n\t\treturn value;\n\t}\n\n\t_nextUint16() {\n\t\tconst value = this._dataView.getUint16(this._offset, this._littleEndian);\n\t\tthis._offset += 2;\n\t\treturn value;\n\t}\n\n\t_nextUint32() {\n\t\tconst value = this._dataView.getUint32(this._offset, this._littleEndian);\n\t\tthis._offset += 4;\n\t\treturn value;\n\t}\n\n\t_nextUint64() {\n\t\tconst left = this._dataView.getUint32(this._offset, this._littleEndian);\n\t\tconst right = this._dataView.getUint32(this._offset + 4, this._littleEndian);\n\t\t// TODO(cleanup): Just test this...\n\t\t// const value = this._littleEndian ? left + (2 ** 32 * right) : (2 ** 32 * left) + right;\n\t\tconst value = left + 2 ** 32 * right;\n\t\tthis._offset += 8;\n\t\treturn value;\n\t}\n\n\t_nextInt32() {\n\t\tconst value = this._dataView.getInt32(this._offset, this._littleEndian);\n\t\tthis._offset += 4;\n\t\treturn value;\n\t}\n\n\t_skip(bytes: number) {\n\t\tthis._offset += bytes;\n\t\treturn this;\n\t}\n\n\t_scan(maxByteLength: number, term = 0x00): Uint8Array {\n\t\tconst byteOffset = this._offset;\n\t\tlet byteLength = 0;\n\t\twhile (this._dataView.getUint8(this._offset) !== term && byteLength < maxByteLength) {\n\t\t\tbyteLength++;\n\t\t\tthis._offset++;\n\t\t}\n\n\t\tif (byteLength < maxByteLength) this._offset++;\n\n\t\treturn new Uint8Array(this._dataView.buffer, this._dataView.byteOffset + byteOffset, byteLength);\n\t}\n}\n", "///////////////////////////////////////////////////\n// Common.\n///////////////////////////////////////////////////\n\n// Injected at compile time, from $npm_package_version.\ndeclare const PACKAGE_VERSION: string;\n\nexport const KTX_WRITER = `KTX-Parse v${PACKAGE_VERSION}`;\n\nexport const NUL = new Uint8Array([0x00]);\n\n///////////////////////////////////////////////////\n// KTX2 Header.\n///////////////////////////////////////////////////\n\nexport const KTX2_ID = [\n\t// '´', 'K', 'T', 'X', '2', '0', 'ª', '\\r', '\\n', '\\x1A', '\\n'\n\t0xab, 0x4b, 0x54, 0x58, 0x20, 0x32, 0x30, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a,\n];\n\nexport const HEADER_BYTE_LENGTH = 68; // 13 * 4 + 2 * 8\n", "/** Encodes text to an ArrayBuffer. */\nexport function encodeText(text: string): Uint8Array {\n\tif (typeof TextEncoder !== 'undefined') {\n\t\treturn new TextEncoder().encode(text);\n\t}\n\treturn Buffer.from(text);\n}\n\n/** Decodes an ArrayBuffer to text. */\nexport function decodeText(buffer: Uint8Array): string {\n\tif (typeof TextDecoder !== 'undefined') {\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\treturn Buffer.from(buffer).toString('utf8');\n}\n\n/** Concatenates N ArrayBuffers. */\nexport function concat(buffers: (ArrayBuffer | Uint8Array)[]): Uint8Array {\n\tlet totalByteLength = 0;\n\tfor (const buffer of buffers) {\n\t\ttotalByteLength += buffer.byteLength;\n\t}\n\n\tconst result = new Uint8Array(totalByteLength);\n\tlet byteOffset = 0;\n\n\tfor (const buffer of buffers) {\n\t\tresult.set(new Uint8Array(buffer), byteOffset);\n\t\tbyteOffset += buffer.byteLength;\n\t}\n\n\treturn result;\n}\n", "import { BufferReader } from './buffer-reader';\nimport { KHR_DF_SAMPLE_DATATYPE_SIGNED } from './constants';\nimport { KTX2_ID } from './constants-internal';\nimport { KTX2Container, KTX2DataFormatDescriptorBasicFormat } from './container';\nimport { decodeText } from './util';\n\n/**\n * Parses a KTX 2.0 file, returning an unpacked {@link KTX2Container} instance with all associated\n * data. The container's mip levels and other binary data are pointers into the original file, not\n * copies, so the original file should not be overwritten after reading.\n *\n * @param data Bytes of KTX 2.0 file, as Uint8Array or Buffer.\n */\nexport function read(data: Uint8Array): KTX2Container {\n\t///////////////////////////////////////////////////\n\t// KTX 2.0 Identifier.\n\t///////////////////////////////////////////////////\n\n\tconst id = new Uint8Array(data.buffer, data.byteOffset, KTX2_ID.length);\n\tif (\n\t\tid[0] !== KTX2_ID[0] || // '´'\n\t\tid[1] !== KTX2_ID[1] || // 'K'\n\t\tid[2] !== KTX2_ID[2] || // 'T'\n\t\tid[3] !== KTX2_ID[3] || // 'X'\n\t\tid[4] !== KTX2_ID[4] || // ' '\n\t\tid[5] !== KTX2_ID[5] || // '2'\n\t\tid[6] !== KTX2_ID[6] || // '0'\n\t\tid[7] !== KTX2_ID[7] || // 'ª'\n\t\tid[8] !== KTX2_ID[8] || // '\\r'\n\t\tid[9] !== KTX2_ID[9] || // '\\n'\n\t\tid[10] !== KTX2_ID[10] || // '\\x1A'\n\t\tid[11] !== KTX2_ID[11] // '\\n'\n\t) {\n\t\tthrow new Error('Missing KTX 2.0 identifier.');\n\t}\n\n\tconst container = new KTX2Container();\n\n\t///////////////////////////////////////////////////\n\t// Header.\n\t///////////////////////////////////////////////////\n\n\tconst headerByteLength = 17 * Uint32Array.BYTES_PER_ELEMENT;\n\tconst headerReader = new BufferReader(data, KTX2_ID.length, headerByteLength, true);\n\n\tcontainer.vkFormat = headerReader._nextUint32();\n\tcontainer.typeSize = headerReader._nextUint32();\n\tcontainer.pixelWidth = headerReader._nextUint32();\n\tcontainer.pixelHeight = headerReader._nextUint32();\n\tcontainer.pixelDepth = headerReader._nextUint32();\n\tcontainer.layerCount = headerReader._nextUint32();\n\tcontainer.faceCount = headerReader._nextUint32();\n\n\tconst levelCount = headerReader._nextUint32();\n\n\tcontainer.supercompressionScheme = headerReader._nextUint32();\n\n\tconst dfdByteOffset = headerReader._nextUint32();\n\tconst dfdByteLength = headerReader._nextUint32();\n\tconst kvdByteOffset = headerReader._nextUint32();\n\tconst kvdByteLength = headerReader._nextUint32();\n\tconst sgdByteOffset = headerReader._nextUint64();\n\tconst sgdByteLength = headerReader._nextUint64();\n\n\t///////////////////////////////////////////////////\n\t// Level Index.\n\t///////////////////////////////////////////////////\n\n\tconst levelByteLength = levelCount * 3 * 8;\n\tconst levelReader = new BufferReader(data, KTX2_ID.length + headerByteLength, levelByteLength, true);\n\n\tfor (let i = 0; i < levelCount; i++) {\n\t\tcontainer.levels.push({\n\t\t\tlevelData: new Uint8Array(\n\t\t\t\tdata.buffer,\n\t\t\t\tdata.byteOffset + levelReader._nextUint64(),\n\t\t\t\tlevelReader._nextUint64()\n\t\t\t),\n\t\t\tuncompressedByteLength: levelReader._nextUint64(),\n\t\t});\n\t}\n\n\t///////////////////////////////////////////////////\n\t// Data Format Descriptor (DFD).\n\t///////////////////////////////////////////////////\n\n\tconst dfdReader = new BufferReader(data, dfdByteOffset, dfdByteLength, true);\n\n\tconst dfd: KTX2DataFormatDescriptorBasicFormat = {\n\t\tvendorId: dfdReader._skip(4 /* totalSize */)._nextUint16(),\n\t\tdescriptorType: dfdReader._nextUint16(),\n\t\tversionNumber: dfdReader._nextUint16(),\n\t\tdescriptorBlockSize: dfdReader._nextUint16(),\n\t\tcolorModel: dfdReader._nextUint8(),\n\t\tcolorPrimaries: dfdReader._nextUint8(),\n\t\ttransferFunction: dfdReader._nextUint8(),\n\t\tflags: dfdReader._nextUint8(),\n\t\ttexelBlockDimension: [\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t],\n\t\tbytesPlane: [\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t],\n\t\tsamples: [],\n\t};\n\n\tconst sampleStart = 6;\n\tconst sampleWords = 4;\n\tconst numSamples = (dfd.descriptorBlockSize / 4 - sampleStart) / sampleWords;\n\n\tfor (let i = 0; i < numSamples; i++) {\n\t\tconst sample = {\n\t\t\tbitOffset: dfdReader._nextUint16(),\n\t\t\tbitLength: dfdReader._nextUint8(),\n\t\t\tchannelType: dfdReader._nextUint8(),\n\t\t\tsamplePosition: [\n\t\t\t\tdfdReader._nextUint8(),\n\t\t\t\tdfdReader._nextUint8(),\n\t\t\t\tdfdReader._nextUint8(),\n\t\t\t\tdfdReader._nextUint8(),\n\t\t\t],\n\t\t\tsampleLower: -Infinity,\n\t\t\tsampleUpper: Infinity,\n\t\t};\n\n\t\tif (sample.channelType & KHR_DF_SAMPLE_DATATYPE_SIGNED) {\n\t\t\tsample.sampleLower = dfdReader._nextInt32();\n\t\t\tsample.sampleUpper = dfdReader._nextInt32();\n\t\t} else {\n\t\t\tsample.sampleLower = dfdReader._nextUint32();\n\t\t\tsample.sampleUpper = dfdReader._nextUint32();\n\t\t}\n\n\t\tdfd.samples[i] = sample;\n\t}\n\n\tcontainer.dataFormatDescriptor.length = 0;\n\tcontainer.dataFormatDescriptor.push(dfd);\n\n\t///////////////////////////////////////////////////\n\t// Key/Value Data (KVD).\n\t///////////////////////////////////////////////////\n\n\tconst kvdReader = new BufferReader(data, kvdByteOffset, kvdByteLength, true);\n\n\twhile (kvdReader._offset < kvdByteLength) {\n\t\tconst keyValueByteLength = kvdReader._nextUint32();\n\t\tconst keyData = kvdReader._scan(keyValueByteLength);\n\t\tconst key = decodeText(keyData);\n\n\t\tconst valueData = kvdReader._scan(keyValueByteLength - keyData.byteLength);\n\t\tcontainer.keyValue[key] = key.match(/^ktx/i) ? decodeText(valueData) : valueData;\n\n\t\t// 4-byte alignment.\n\t\tif (kvdReader._offset % 4) kvdReader._skip(4 - (kvdReader._offset % 4));\n\t}\n\n\t///////////////////////////////////////////////////\n\t// Supercompression Global Data (SGD).\n\t///////////////////////////////////////////////////\n\n\tif (sgdByteLength <= 0) return container;\n\n\tconst sgdReader = new BufferReader(data, sgdByteOffset, sgdByteLength, true);\n\n\tconst endpointCount = sgdReader._nextUint16();\n\tconst selectorCount = sgdReader._nextUint16();\n\tconst endpointsByteLength = sgdReader._nextUint32();\n\tconst selectorsByteLength = sgdReader._nextUint32();\n\tconst tablesByteLength = sgdReader._nextUint32();\n\tconst extendedByteLength = sgdReader._nextUint32();\n\n\tconst imageDescs = [];\n\tfor (let i = 0; i < levelCount; i++) {\n\t\timageDescs.push({\n\t\t\timageFlags: sgdReader._nextUint32(),\n\t\t\trgbSliceByteOffset: sgdReader._nextUint32(),\n\t\t\trgbSliceByteLength: sgdReader._nextUint32(),\n\t\t\talphaSliceByteOffset: sgdReader._nextUint32(),\n\t\t\talphaSliceByteLength: sgdReader._nextUint32(),\n\t\t});\n\t}\n\n\tconst endpointsByteOffset = sgdByteOffset + sgdReader._offset;\n\tconst selectorsByteOffset = endpointsByteOffset + endpointsByteLength;\n\tconst tablesByteOffset = selectorsByteOffset + selectorsByteLength;\n\tconst extendedByteOffset = tablesByteOffset + tablesByteLength;\n\n\tconst endpointsData = new Uint8Array(data.buffer, data.byteOffset + endpointsByteOffset, endpointsByteLength);\n\tconst selectorsData = new Uint8Array(data.buffer, data.byteOffset + selectorsByteOffset, selectorsByteLength);\n\tconst tablesData = new Uint8Array(data.buffer, data.byteOffset + tablesByteOffset, tablesByteLength);\n\tconst extendedData = new Uint8Array(data.buffer, data.byteOffset + extendedByteOffset, extendedByteLength);\n\n\tcontainer.globalData = {\n\t\tendpointCount,\n\t\tselectorCount,\n\t\timageDescs,\n\t\tendpointsData,\n\t\tselectorsData,\n\t\ttablesData,\n\t\textendedData,\n\t};\n\n\treturn container;\n}\n", "import { HEADER_BYTE_LENGTH, KTX2_ID, KTX_WRITER, NUL } from './constants-internal';\nimport { KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT, KHR_DF_SAMPLE_DATATYPE_SIGNED } from './constants';\nimport { KTX2Container } from './container';\nimport { concat, encodeText } from './util';\n\ninterface WriteOptions {\n\tkeepWriter?: boolean;\n}\nconst DEFAULT_OPTIONS: WriteOptions = { keepWriter: false };\n\n/**\n * Serializes a {@link KTX2Container} instance to a KTX 2.0 file. Mip levels and other binary data\n * are copied into the resulting Uint8Array, so the original container can safely be edited or\n * destroyed after it is serialized.\n *\n * Options:\n * - keepWriter: If true, 'KTXWriter' key/value field is written as provided by the container.\n * \t\tOtherwise, a string for the current ktx-parse version is generated. Default: false.\n *\n * @param container\n * @param options\n */\nexport function write(container: KTX2Container, options: WriteOptions = {}): Uint8Array {\n\toptions = { ...DEFAULT_OPTIONS, ...options };\n\n\t///////////////////////////////////////////////////\n\t// Supercompression Global Data (SGD).\n\t///////////////////////////////////////////////////\n\n\tlet sgdBuffer = new ArrayBuffer(0);\n\tif (container.globalData) {\n\t\tconst sgdHeaderBuffer = new ArrayBuffer(20 + container.globalData.imageDescs.length * 5 * 4);\n\t\tconst sgdHeaderView = new DataView(sgdHeaderBuffer);\n\t\tsgdHeaderView.setUint16(0, container.globalData.endpointCount, true);\n\t\tsgdHeaderView.setUint16(2, container.globalData.selectorCount, true);\n\t\tsgdHeaderView.setUint32(4, container.globalData.endpointsData.byteLength, true);\n\t\tsgdHeaderView.setUint32(8, container.globalData.selectorsData.byteLength, true);\n\t\tsgdHeaderView.setUint32(12, container.globalData.tablesData.byteLength, true);\n\t\tsgdHeaderView.setUint32(16, container.globalData.extendedData.byteLength, true);\n\n\t\tfor (let i = 0; i < container.globalData.imageDescs.length; i++) {\n\t\t\tconst imageDesc = container.globalData.imageDescs[i];\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 0, imageDesc.imageFlags, true);\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 4, imageDesc.rgbSliceByteOffset, true);\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 8, imageDesc.rgbSliceByteLength, true);\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 12, imageDesc.alphaSliceByteOffset, true);\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 16, imageDesc.alphaSliceByteLength, true);\n\t\t}\n\n\t\tsgdBuffer = concat([\n\t\t\tsgdHeaderBuffer,\n\t\t\tcontainer.globalData.endpointsData,\n\t\t\tcontainer.globalData.selectorsData,\n\t\t\tcontainer.globalData.tablesData,\n\t\t\tcontainer.globalData.extendedData,\n\t\t]);\n\t}\n\n\t///////////////////////////////////////////////////\n\t// Key/Value Data (KVD).\n\t///////////////////////////////////////////////////\n\n\tconst keyValueData: Uint8Array[] = [];\n\tlet keyValue = container.keyValue;\n\n\tif (!options.keepWriter) {\n\t\tkeyValue = { ...container.keyValue, KTXwriter: KTX_WRITER };\n\t}\n\n\tfor (const key in keyValue) {\n\t\tconst value = keyValue[key];\n\t\tconst keyData = encodeText(key);\n\t\tconst valueData = typeof value === 'string' ? encodeText(value) : value;\n\t\tconst kvByteLength = keyData.byteLength + 1 + valueData.byteLength + 1;\n\t\tconst kvPadding = kvByteLength % 4 ? 4 - (kvByteLength % 4) : 0; // align(4)\n\t\tkeyValueData.push(\n\t\t\tconcat([\n\t\t\t\tnew Uint32Array([kvByteLength]),\n\t\t\t\tkeyData,\n\t\t\t\tNUL,\n\t\t\t\tvalueData,\n\t\t\t\tNUL,\n\t\t\t\tnew Uint8Array(kvPadding).fill(0x00), // align(4)\n\t\t\t])\n\t\t);\n\t}\n\n\tconst kvdBuffer = concat(keyValueData);\n\n\t///////////////////////////////////////////////////\n\t// Data Format Descriptor (DFD).\n\t///////////////////////////////////////////////////\n\n\tif (\n\t\tcontainer.dataFormatDescriptor.length !== 1 ||\n\t\tcontainer.dataFormatDescriptor[0].descriptorType !== KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT\n\t) {\n\t\tthrow new Error('Only BASICFORMAT Data Format Descriptor output supported.');\n\t}\n\n\tconst dfd = container.dataFormatDescriptor[0];\n\n\tconst dfdBuffer = new ArrayBuffer(28 + dfd.samples.length * 16);\n\tconst dfdView = new DataView(dfdBuffer);\n\tconst descriptorBlockSize = 24 + dfd.samples.length * 16;\n\n\tdfdView.setUint32(0, dfdBuffer.byteLength, true);\n\tdfdView.setUint16(4, dfd.vendorId, true);\n\tdfdView.setUint16(6, dfd.descriptorType, true);\n\tdfdView.setUint16(8, dfd.versionNumber, true);\n\tdfdView.setUint16(10, descriptorBlockSize, true);\n\n\tdfdView.setUint8(12, dfd.colorModel);\n\tdfdView.setUint8(13, dfd.colorPrimaries);\n\tdfdView.setUint8(14, dfd.transferFunction);\n\tdfdView.setUint8(15, dfd.flags);\n\n\tif (!Array.isArray(dfd.texelBlockDimension)) {\n\t\tthrow new Error('texelBlockDimension is now an array. For dimensionality `d`, set `d - 1`.');\n\t}\n\n\tdfdView.setUint8(16, dfd.texelBlockDimension[0]);\n\tdfdView.setUint8(17, dfd.texelBlockDimension[1]);\n\tdfdView.setUint8(18, dfd.texelBlockDimension[2]);\n\tdfdView.setUint8(19, dfd.texelBlockDimension[3]);\n\n\tfor (let i = 0; i < 8; i++) dfdView.setUint8(20 + i, dfd.bytesPlane[i]);\n\n\tfor (let i = 0; i < dfd.samples.length; i++) {\n\t\tconst sample = dfd.samples[i];\n\t\tconst sampleByteOffset = 28 + i * 16;\n\n\t\tif (sample.channelID) {\n\t\t\tthrow new Error('channelID has been renamed to channelType.');\n\t\t}\n\n\t\tdfdView.setUint16(sampleByteOffset + 0, sample.bitOffset, true);\n\t\tdfdView.setUint8(sampleByteOffset + 2, sample.bitLength);\n\t\tdfdView.setUint8(sampleByteOffset + 3, sample.channelType);\n\n\t\tdfdView.setUint8(sampleByteOffset + 4, sample.samplePosition[0]);\n\t\tdfdView.setUint8(sampleByteOffset + 5, sample.samplePosition[1]);\n\t\tdfdView.setUint8(sampleByteOffset + 6, sample.samplePosition[2]);\n\t\tdfdView.setUint8(sampleByteOffset + 7, sample.samplePosition[3]);\n\n\t\tif (sample.channelType & KHR_DF_SAMPLE_DATATYPE_SIGNED) {\n\t\t\tdfdView.setInt32(sampleByteOffset + 8, sample.sampleLower, true);\n\t\t\tdfdView.setInt32(sampleByteOffset + 12, sample.sampleUpper, true);\n\t\t} else {\n\t\t\tdfdView.setUint32(sampleByteOffset + 8, sample.sampleLower, true);\n\t\t\tdfdView.setUint32(sampleByteOffset + 12, sample.sampleUpper, true);\n\t\t}\n\t}\n\n\t///////////////////////////////////////////////////\n\t// Data alignment.\n\t///////////////////////////////////////////////////\n\n\tconst dfdByteOffset = KTX2_ID.length + HEADER_BYTE_LENGTH + container.levels.length * 3 * 8;\n\tconst kvdByteOffset = dfdByteOffset + dfdBuffer.byteLength;\n\tlet sgdByteOffset = sgdBuffer.byteLength > 0 ? kvdByteOffset + kvdBuffer.byteLength : 0;\n\tif (sgdByteOffset % 8) sgdByteOffset += 8 - (sgdByteOffset % 8); // align(8)\n\n\t///////////////////////////////////////////////////\n\t// Level Index.\n\t///////////////////////////////////////////////////\n\n\tconst levelData: Uint8Array[] = [];\n\tconst levelIndex = new DataView(new ArrayBuffer(container.levels.length * 3 * 8));\n\n\tlet levelDataByteOffset = (sgdByteOffset || kvdByteOffset + kvdBuffer.byteLength) + sgdBuffer.byteLength;\n\tfor (let i = 0; i < container.levels.length; i++) {\n\t\tconst level = container.levels[i];\n\t\tlevelData.push(level.levelData);\n\t\tlevelIndex.setBigUint64(i * 24 + 0, BigInt(levelDataByteOffset), true);\n\t\tlevelIndex.setBigUint64(i * 24 + 8, BigInt(level.levelData.byteLength), true);\n\t\tlevelIndex.setBigUint64(i * 24 + 16, BigInt(level.uncompressedByteLength), true);\n\t\tlevelDataByteOffset += level.levelData.byteLength;\n\t}\n\n\t///////////////////////////////////////////////////\n\t// Header.\n\t///////////////////////////////////////////////////\n\n\tconst headerBuffer = new ArrayBuffer(HEADER_BYTE_LENGTH);\n\tconst headerView = new DataView(headerBuffer);\n\theaderView.setUint32(0, container.vkFormat, true);\n\theaderView.setUint32(4, container.typeSize, true);\n\theaderView.setUint32(8, container.pixelWidth, true);\n\theaderView.setUint32(12, container.pixelHeight, true);\n\theaderView.setUint32(16, container.pixelDepth, true);\n\theaderView.setUint32(20, container.layerCount, true);\n\theaderView.setUint32(24, container.faceCount, true);\n\theaderView.setUint32(28, container.levels.length, true);\n\theaderView.setUint32(32, container.supercompressionScheme, true);\n\n\theaderView.setUint32(36, dfdByteOffset, true);\n\theaderView.setUint32(40, dfdBuffer.byteLength, true);\n\theaderView.setUint32(44, kvdByteOffset, true);\n\theaderView.setUint32(48, kvdBuffer.byteLength, true);\n\theaderView.setBigUint64(52, BigInt(sgdBuffer.byteLength > 0 ? sgdByteOffset : 0), true);\n\theaderView.setBigUint64(60, BigInt(sgdBuffer.byteLength), true);\n\n\t///////////////////////////////////////////////////\n\t// Compose.\n\t///////////////////////////////////////////////////\n\n\treturn new Uint8Array(\n\t\tconcat([\n\t\t\tnew Uint8Array(KTX2_ID).buffer,\n\t\t\theaderBuffer,\n\t\t\tlevelIndex.buffer,\n\t\t\tdfdBuffer,\n\t\t\tkvdBuffer,\n\t\t\tsgdByteOffset > 0\n\t\t\t\t? new ArrayBuffer(sgdByteOffset - (kvdByteOffset + kvdBuffer.byteLength)) // align(8)\n\t\t\t\t: new ArrayBuffer(0),\n\t\t\tsgdBuffer,\n\t\t\t...levelData,\n\t\t])\n\t);\n}\n", "interface DecoderExports {\n\tmemory: Uint8Array;\n\n\tZSTD_findDecompressedSize: (compressedPtr: number, compressedSize: number) => BigInt;\n\tZSTD_decompress: (uncompressedPtr: number, uncompressedSize: number, compressedPtr: number, compressedSize: number) => number;\n\tmalloc: (ptr: number) => number;\n\tfree: (ptr: number) => void;\n}\n\nlet init: Promise<void>;\nlet instance: {exports: DecoderExports};\nlet heap: Uint8Array;\n\nconst IMPORT_OBJECT = {\n\n\tenv: {\n\n\t\temscripten_notify_memory_growth: function ( index: number ): void {\n\n\t\t\theap = new Uint8Array( instance.exports.memory.buffer );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * ZSTD (Zstandard) decoder.\n */\nexport class ZSTDDecoder {\n\n\tinit (): Promise<void> {\n\n\t\tif ( init ) return init;\n\n\t\tif ( typeof fetch !== 'undefined' ) {\n\n\t\t\t// Web.\n\n\t\t\tinit = fetch( 'data:application/wasm;base64,' + wasm )\n\t\t\t\t.then( ( response ) => response.arrayBuffer() )\n\t\t\t\t.then( ( arrayBuffer ) => WebAssembly.instantiate( arrayBuffer, IMPORT_OBJECT ) )\n\t\t\t\t.then( this._init );\n\n\t\t} else {\n\n\t\t\t// Node.js.\n\n\t\t\tinit = WebAssembly\n\t\t\t\t.instantiate( Buffer.from( wasm, 'base64' ), IMPORT_OBJECT )\n\t\t\t\t.then( this._init );\n\n\t\t}\n\n\t\treturn init;\n\n\t}\n\n\t_init ( result: WebAssembly.WebAssemblyInstantiatedSource ): void {\n\n\t\tinstance = result.instance as unknown as { exports: DecoderExports };\n\n\t\tIMPORT_OBJECT.env.emscripten_notify_memory_growth( 0 ); // initialize heap.\n\n\t}\n\n\tdecode ( array: Uint8Array, uncompressedSize = 0 ): Uint8Array {\n\n\t\tif ( ! instance ) throw new Error( `ZSTDDecoder: Await .init() before decoding.` );\n\n\t\t// Write compressed data into WASM memory.\n\t\tconst compressedSize = array.byteLength;\n\t\tconst compressedPtr = instance.exports.malloc( compressedSize );\n\t\theap.set( array, compressedPtr );\n\n\t\t// Decompress into WASM memory.\n\t\tuncompressedSize = uncompressedSize || Number( instance.exports.ZSTD_findDecompressedSize( compressedPtr, compressedSize ) );\n\t\tconst uncompressedPtr = instance.exports.malloc( uncompressedSize );\n\t\tconst actualSize = instance.exports.ZSTD_decompress( uncompressedPtr, uncompressedSize, compressedPtr, compressedSize );\n\n\t\t// Read decompressed data and free WASM memory.\n\t\tconst dec = heap.slice( uncompressedPtr, uncompressedPtr + actualSize );\n\t\tinstance.exports.free( compressedPtr );\n\t\tinstance.exports.free( uncompressedPtr );\n\n\t\treturn dec;\n\n\t}\n\n}\n\n/**\n * BSD License\n *\n * For Zstandard software\n *\n * Copyright (c) 2016-present, Yann Collet, Facebook, Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *\n *  * Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n *  * Neither the name Facebook nor the names of its contributors may be used to\n *    endorse or promote products derived from this software without specific\n *    prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n// wasm:begin\nconst wasm = '';\n// wasm:end\n", "/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar codePointAt = function(position) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tvar size = string.length;\n\t\t\t// `ToInteger`\n\t\t\tvar index = position ? Number(position) : 0;\n\t\t\tif (index != index) { // better `isNaN`\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices:\n\t\t\tif (index < 0 || index >= size) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Get the first code unit\n\t\t\tvar first = string.charCodeAt(index);\n\t\t\tvar second;\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tsize > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'codePointAt', {\n\t\t\t\t'value': codePointAt,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.codePointAt = codePointAt;\n\t\t}\n\t}());\n}\n", "var TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, btype, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n", "// The Bounding Box object\n\nfunction derive(v0, v1, v2, v3, t) {\n    return Math.pow(1 - t, 3) * v0 +\n        3 * Math.pow(1 - t, 2) * t * v1 +\n        3 * (1 - t) * Math.pow(t, 2) * v2 +\n        Math.pow(t, 3) * v3;\n}\n/**\n * A bounding box is an enclosing box that describes the smallest measure within which all the points lie.\n * It is used to calculate the bounding box of a glyph or text path.\n *\n * On initialization, x1/y1/x2/y2 will be NaN. Check if the bounding box is empty using `isEmpty()`.\n *\n * @exports opentype.BoundingBox\n * @class\n * @constructor\n */\nfunction BoundingBox() {\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n}\n\n/**\n * Returns true if the bounding box is empty, that is, no points have been added to the box yet.\n */\nBoundingBox.prototype.isEmpty = function() {\n    return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);\n};\n\n/**\n * Add the point to the bounding box.\n * The x1/y1/x2/y2 coordinates of the bounding box will now encompass the given point.\n * @param {number} x - The X coordinate of the point.\n * @param {number} y - The Y coordinate of the point.\n */\nBoundingBox.prototype.addPoint = function(x, y) {\n    if (typeof x === 'number') {\n        if (isNaN(this.x1) || isNaN(this.x2)) {\n            this.x1 = x;\n            this.x2 = x;\n        }\n        if (x < this.x1) {\n            this.x1 = x;\n        }\n        if (x > this.x2) {\n            this.x2 = x;\n        }\n    }\n    if (typeof y === 'number') {\n        if (isNaN(this.y1) || isNaN(this.y2)) {\n            this.y1 = y;\n            this.y2 = y;\n        }\n        if (y < this.y1) {\n            this.y1 = y;\n        }\n        if (y > this.y2) {\n            this.y2 = y;\n        }\n    }\n};\n\n/**\n * Add a X coordinate to the bounding box.\n * This extends the bounding box to include the X coordinate.\n * This function is used internally inside of addBezier.\n * @param {number} x - The X coordinate of the point.\n */\nBoundingBox.prototype.addX = function(x) {\n    this.addPoint(x, null);\n};\n\n/**\n * Add a Y coordinate to the bounding box.\n * This extends the bounding box to include the Y coordinate.\n * This function is used internally inside of addBezier.\n * @param {number} y - The Y coordinate of the point.\n */\nBoundingBox.prototype.addY = function(y) {\n    this.addPoint(null, y);\n};\n\n/**\n * Add a Bézier curve to the bounding box.\n * This extends the bounding box to include the entire Bézier.\n * @param {number} x0 - The starting X coordinate.\n * @param {number} y0 - The starting Y coordinate.\n * @param {number} x1 - The X coordinate of the first control point.\n * @param {number} y1 - The Y coordinate of the first control point.\n * @param {number} x2 - The X coordinate of the second control point.\n * @param {number} y2 - The Y coordinate of the second control point.\n * @param {number} x - The ending X coordinate.\n * @param {number} y - The ending Y coordinate.\n */\nBoundingBox.prototype.addBezier = function(x0, y0, x1, y1, x2, y2, x, y) {\n    // This code is based on http://nishiohirokazu.blogspot.com/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // and https://github.com/icons8/svg-path-bounding-box\n\n    const p0 = [x0, y0];\n    const p1 = [x1, y1];\n    const p2 = [x2, y2];\n    const p3 = [x, y];\n\n    this.addPoint(x0, y0);\n    this.addPoint(x, y);\n\n    for (let i = 0; i <= 1; i++) {\n        const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n        const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n        const c = 3 * p1[i] - 3 * p0[i];\n\n        if (a === 0) {\n            if (b === 0) continue;\n            const t = -c / b;\n            if (0 < t && t < 1) {\n                if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t));\n                if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t));\n            }\n            continue;\n        }\n\n        const b2ac = Math.pow(b, 2) - 4 * c * a;\n        if (b2ac < 0) continue;\n        const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t1 && t1 < 1) {\n            if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t1));\n            if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t1));\n        }\n        const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t2 && t2 < 1) {\n            if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t2));\n            if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t2));\n        }\n    }\n};\n\n/**\n * Add a quadratic curve to the bounding box.\n * This extends the bounding box to include the entire quadratic curve.\n * @param {number} x0 - The starting X coordinate.\n * @param {number} y0 - The starting Y coordinate.\n * @param {number} x1 - The X coordinate of the control point.\n * @param {number} y1 - The Y coordinate of the control point.\n * @param {number} x - The ending X coordinate.\n * @param {number} y - The ending Y coordinate.\n */\nBoundingBox.prototype.addQuad = function(x0, y0, x1, y1, x, y) {\n    const cp1x = x0 + 2 / 3 * (x1 - x0);\n    const cp1y = y0 + 2 / 3 * (y1 - y0);\n    const cp2x = cp1x + 1 / 3 * (x - x0);\n    const cp2y = cp1y + 1 / 3 * (y - y0);\n    this.addBezier(x0, y0, cp1x, cp1y, cp2x, cp2y, x, y);\n};\n\nexport default BoundingBox;\n", "// Geometric objects\n\nimport BoundingBox from './bbox';\n\n/**\n * A bézier path containing a set of path commands similar to a SVG path.\n * Paths can be drawn on a context using `draw`.\n * @exports opentype.Path\n * @class\n * @constructor\n */\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws cubic curve\n * @function\n * curveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws cubic curve\n * @function\n * bezierCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n * @see curveTo\n */\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws quadratic curve\n * @function\n * quadraticCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws quadratic curve\n * @function\n * quadTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Closes the path\n * @function closePath\n * @memberof opentype.Path.prototype\n */\n\n/**\n * Close the path\n * @function close\n * @memberof opentype.Path.prototype\n */\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n/**\n * Add the given path or list of commands to the commands of this path.\n * @param  {Array} pathOrCommands - another opentype.Path, an opentype.BoundingBox, or an array of commands.\n */\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    } else if (pathOrCommands instanceof BoundingBox) {\n        const box = pathOrCommands;\n        this.moveTo(box.x1, box.y1);\n        this.lineTo(box.x2, box.y1);\n        this.lineTo(box.x2, box.y2);\n        this.lineTo(box.x1, box.y2);\n        this.close();\n        return;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n/**\n * Calculate the bounding box of the path.\n * @returns {opentype.BoundingBox}\n */\nPath.prototype.getBoundingBox = function() {\n    const box = new BoundingBox();\n\n    let startX = 0;\n    let startY = 0;\n    let prevX = 0;\n    let prevY = 0;\n    for (let i = 0; i < this.commands.length; i++) {\n        const cmd = this.commands[i];\n        switch (cmd.type) {\n            case 'M':\n                box.addPoint(cmd.x, cmd.y);\n                startX = prevX = cmd.x;\n                startY = prevY = cmd.y;\n                break;\n            case 'L':\n                box.addPoint(cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Q':\n                box.addQuad(prevX, prevY, cmd.x1, cmd.y1, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'C':\n                box.addBezier(prevX, prevY, cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Z':\n                prevX = startX;\n                prevY = startY;\n                break;\n            default:\n                throw new Error('Unexpected path command ' + cmd.type);\n        }\n    }\n    if (box.isEmpty()) {\n        box.addPoint(0, 0);\n    }\n    return box;\n};\n\n/**\n * Draw the path to a 2D context.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context.\n */\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n/**\n * Convert the Path to a string of path data instructions\n * See http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        let s = '';\n        for (let i = 0; i < arguments.length; i += 1) {\n            const v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    let d = '';\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n/**\n * Convert the path to an SVG <path> element, as a string.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toSVG = function(decimalPlaces) {\n    let svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill && this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\n/**\n * Convert the path to a DOM element.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {SVGPathElement}\n */\nPath.prototype.toDOMElement = function(decimalPlaces) {\n    const temporaryPath = this.toPathData(decimalPlaces);\n    const newPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n    newPath.setAttribute('d', temporaryPath);\n\n    return newPath;\n};\n\nexport default Path;\n", "// Run-time checking of preconditions.\n\nfunction fail(message) {\n    throw new Error(message);\n}\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nfunction argument(predicate, message) {\n    if (!predicate) {\n        fail(message);\n    }\n}\n\nexport { fail, argument, argument as assert };\nexport default { fail, argument, assert: argument };\n", "// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\nimport check from './check';\n\nconst LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nconst LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\n/**\n * @exports opentype.decode\n * @class\n */\nconst decode = {};\n/**\n * @exports opentype.encode\n * @class\n */\nconst encode = {};\n/**\n * @exports opentype.sizeOf\n * @class\n */\nconst sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n/**\n * Convert an 8-bit unsigned integer to a list of 1 byte.\n * @param {number}\n * @returns {Array}\n */\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n/**\n * @constant\n * @type {number}\n */\nsizeOf.BYTE = constant(1);\n\n/**\n * Convert a 8-bit signed integer to a list of 1 byte.\n * @param {string}\n * @returns {Array}\n */\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.CHAR = constant(1);\n\n/**\n * Convert an ASCII string to a list of bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.CHARARRAY = function(v) {\n    if (typeof v === 'undefined') {\n        v = '';\n        console.warn('Undefined CHARARRAY encountered and treated as an empty string. This is probably caused by a missing glyph name.');\n    }\n    const b = [];\n    for (let i = 0; i < v.length; i += 1) {\n        b[i] = v.charCodeAt(i);\n    }\n\n    return b;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARARRAY = function(v) {\n    if (typeof v === 'undefined') {\n        return 0;\n    }\n    return v.length;\n};\n\n/**\n * Convert a 16-bit unsigned integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.USHORT = constant(2);\n\n/**\n * Convert a 16-bit signed integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.SHORT = constant(2);\n\n/**\n * Convert a 24-bit unsigned integer to a list of 3 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.UINT24 = constant(3);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.ULONG = constant(4);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n/**\n * Convert a 32-bit Apple Mac timestamp integer to a list of 8 bytes, 64-bit timestamp.\n * @param {number}\n * @returns {Array}\n */\nencode.LONGDATETIME = function(v) {\n    return [0, 0, 0, 0, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONGDATETIME = constant(8);\n\n/**\n * Convert a 4-char tag to a list of 4 bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\n/**\n * Convert a numeric operand or charstring number to a variable-size list of bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n/**\n * Convert a signed number between -32768 and +32767 to a three-byte value.\n * This ensures we always use three bytes, but is not the most compact format.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER16 = constant(3);\n\n/**\n * Convert a signed number between -(2^31) and +(2^31-1) to a five-byte value.\n * This is useful if you want to be sure you always use four bytes,\n * at the expense of wasting a few bytes for smaller numbers.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER32 = constant(5);\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.REAL = function(v) {\n    let value = v.toString();\n\n    // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n    // This code converts it back to a number without the epsilon.\n    const m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n    if (m) {\n        const epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(v * epsilon) / epsilon).toString();\n    }\n\n    let nibbles = '';\n    for (let i = 0, ii = value.length; i < ii; i += 1) {\n        const c = value[i];\n        if (c === 'e') {\n            nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (c === '.') {\n            nibbles += 'a';\n        } else if (c === '-') {\n            nibbles += 'e';\n        } else {\n            nibbles += c;\n        }\n    }\n\n    nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n    const out = [30];\n    for (let i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n    }\n\n    return out;\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.REAL = function(v) {\n    return encode.REAL(v).length;\n};\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF8 = function(data, offset, numBytes) {\n    const codePoints = [];\n    const numChars = numBytes;\n    for (let j = 0; j < numChars; j++, offset += 1) {\n        codePoints[j] = data.getUint8(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF16 = function(data, offset, numBytes) {\n    const codePoints = [];\n    const numChars = numBytes / 2;\n    for (let j = 0; j < numChars; j++, offset += 2) {\n        codePoints[j] = data.getUint16(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * Convert a JavaScript string to UTF16-BE.\n * @param {string}\n * @returns {Array}\n */\nencode.UTF16 = function(v) {\n    const b = [];\n    for (let i = 0; i < v.length; i += 1) {\n        const codepoint = v.charCodeAt(i);\n        b[b.length] = (codepoint >> 8) & 0xFF;\n        b[b.length] = codepoint & 0xFF;\n    }\n\n    return b;\n};\n\n/**\n * @param {string}\n * @returns {number}\n */\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Data for converting old eight-bit Macintosh encodings to Unicode.\n// This representation is optimized for decoding; encoding is slower\n// and needs more memory. The assumption is that all opentype.js users\n// want to open fonts, but saving a font will be comparatively rare\n// so it can be more expensive. Keyed by IANA character set name.\n//\n// Python script for generating these strings:\n//\n//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n//     print(s.encode('utf-8'))\n/**\n * @private\n */\nconst eightBitMacEncodings = {\n    'x-mac-croatian':  // Python: 'mac_croatian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø' +\n    '¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n    'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n    'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњ' +\n    'јЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю',\n    'x-mac-gaelic': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæø' +\n    'ṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n    'x-mac-greek':  // Python: 'mac_greek'\n    'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩ' +\n    'άΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n    'x-mac-icelandic':  // Python: 'mac_iceland'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-inuit': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n    'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗ' +\n    'ᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n    'x-mac-ce':  // Python: 'mac_latin2'\n    'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅ' +\n    'ņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n    macintosh:  // Python: 'mac_roman'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-romanian':  // Python: 'mac_romanian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-turkish':  // Python: 'mac_turkish'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\n/**\n * Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n * string, or 'undefined' if the encoding is unsupported. For example, we do\n * not support Chinese, Japanese or Korean because these would need large\n * mapping tables.\n * @param {DataView} dataView\n * @param {number} offset\n * @param {number} dataLength\n * @param {string} encoding\n * @returns {string}\n */\ndecode.MACSTRING = function(dataView, offset, dataLength, encoding) {\n    const table = eightBitMacEncodings[encoding];\n    if (table === undefined) {\n        return undefined;\n    }\n\n    let result = '';\n    for (let i = 0; i < dataLength; i++) {\n        const c = dataView.getUint8(offset + i);\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c <= 0x7F) {\n            result += String.fromCharCode(c);\n        } else {\n            result += table[c & 0x7F];\n        }\n    }\n\n    return result;\n};\n\n// Helper function for encode.MACSTRING. Returns a dictionary for mapping\n// Unicode character codes to their 8-bit MacOS equivalent. This table\n// is not exactly a super cheap data structure, but we do not care because\n// encoding Macintosh strings is only rarely needed in typical applications.\nconst macEncodingTableCache = typeof WeakMap === 'function' && new WeakMap();\nlet macEncodingCacheKeys;\nconst getMacEncodingTable = function (encoding) {\n    // Since we use encoding as a cache key for WeakMap, it has to be\n    // a String object and not a literal. And at least on NodeJS 2.10.1,\n    // WeakMap requires that the same String instance is passed for cache hits.\n    if (!macEncodingCacheKeys) {\n        macEncodingCacheKeys = {};\n        for (let e in eightBitMacEncodings) {\n            /*jshint -W053 */  // Suppress \"Do not use String as a constructor.\"\n            macEncodingCacheKeys[e] = new String(e);\n        }\n    }\n\n    const cacheKey = macEncodingCacheKeys[encoding];\n    if (cacheKey === undefined) {\n        return undefined;\n    }\n\n    // We can't do \"if (cache.has(key)) {return cache.get(key)}\" here:\n    // since garbage collection may run at any time, it could also kick in\n    // between the calls to cache.has() and cache.get(). In that case,\n    // we would return 'undefined' even though we do support the encoding.\n    if (macEncodingTableCache) {\n        const cachedTable = macEncodingTableCache.get(cacheKey);\n        if (cachedTable !== undefined) {\n            return cachedTable;\n        }\n    }\n\n    const decodingTable = eightBitMacEncodings[encoding];\n    if (decodingTable === undefined) {\n        return undefined;\n    }\n\n    const encodingTable = {};\n    for (let i = 0; i < decodingTable.length; i++) {\n        encodingTable[decodingTable.charCodeAt(i)] = i + 0x80;\n    }\n\n    if (macEncodingTableCache) {\n        macEncodingTableCache.set(cacheKey, encodingTable);\n    }\n\n    return encodingTable;\n};\n\n/**\n * Encodes an old-style Macintosh string. Returns a byte array upon success.\n * If the requested encoding is unsupported, or if the input string contains\n * a character that cannot be expressed in the encoding, the function returns\n * 'undefined'.\n * @param {string} str\n * @param {string} encoding\n * @returns {Array}\n */\nencode.MACSTRING = function(str, encoding) {\n    const table = getMacEncodingTable(encoding);\n    if (table === undefined) {\n        return undefined;\n    }\n\n    const result = [];\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charCodeAt(i);\n\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c >= 0x80) {\n            c = table[c];\n            if (c === undefined) {\n                // str contains a Unicode character that cannot be encoded\n                // in the requested encoding.\n                return undefined;\n            }\n        }\n        result[i] = c;\n        // result.push(c);\n    }\n\n    return result;\n};\n\n/**\n * @param {string} str\n * @param {string} encoding\n * @returns {number}\n */\nsizeOf.MACSTRING = function(str, encoding) {\n    const b = encode.MACSTRING(str, encoding);\n    if (b !== undefined) {\n        return b.length;\n    } else {\n        return 0;\n    }\n};\n\n// Helper for encode.VARDELTAS\nfunction isByteEncodable(value) {\n    return value >= -128 && value <= 127;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsZeroes(deltas, pos, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    while (pos < numDeltas && runLength < 64 && deltas[pos] === 0) {\n        ++pos;\n        ++runLength;\n    }\n    result.push(0x80 | (runLength - 1));\n    return pos;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsBytes(deltas, offset, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    let pos = offset;\n    while (pos < numDeltas && runLength < 64) {\n        const value = deltas[pos];\n        if (!isByteEncodable(value)) {\n            break;\n        }\n\n        // Within a byte-encoded run of deltas, a single zero is best\n        // stored literally as 0x00 value. However, if we have two or\n        // more zeroes in a sequence, it is better to start a new run.\n        // Fore example, the sequence of deltas [15, 15, 0, 15, 15]\n        // becomes 6 bytes (04 0F 0F 00 0F 0F) when storing the zero\n        // within the current run, but 7 bytes (01 0F 0F 80 01 0F 0F)\n        // when starting a new run.\n        if (value === 0 && pos + 1 < numDeltas && deltas[pos + 1] === 0) {\n            break;\n        }\n\n        ++pos;\n        ++runLength;\n    }\n    result.push(runLength - 1);\n    for (let i = offset; i < pos; ++i) {\n        result.push((deltas[i] + 256) & 0xff);\n    }\n    return pos;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsWords(deltas, offset, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    let pos = offset;\n    while (pos < numDeltas && runLength < 64) {\n        const value = deltas[pos];\n\n        // Within a word-encoded run of deltas, it is easiest to start\n        // a new run (with a different encoding) whenever we encounter\n        // a zero value. For example, the sequence [0x6666, 0, 0x7777]\n        // needs 7 bytes when storing the zero inside the current run\n        // (42 66 66 00 00 77 77), and equally 7 bytes when starting a\n        // new run (40 66 66 80 40 77 77).\n        if (value === 0) {\n            break;\n        }\n\n        // Within a word-encoded run of deltas, a single value in the\n        // range (-128..127) should be encoded within the current run\n        // because it is more compact. For example, the sequence\n        // [0x6666, 2, 0x7777] becomes 7 bytes when storing the value\n        // literally (42 66 66 00 02 77 77), but 8 bytes when starting\n        // a new run (40 66 66 00 02 40 77 77).\n        if (isByteEncodable(value) && pos + 1 < numDeltas && isByteEncodable(deltas[pos + 1])) {\n            break;\n        }\n\n        ++pos;\n        ++runLength;\n    }\n    result.push(0x40 | (runLength - 1));\n    for (let i = offset; i < pos; ++i) {\n        const val = deltas[i];\n        result.push(((val + 0x10000) >> 8) & 0xff, (val + 0x100) & 0xff);\n    }\n    return pos;\n}\n\n/**\n * Encode a list of variation adjustment deltas.\n *\n * Variation adjustment deltas are used in ‘gvar’ and ‘cvar’ tables.\n * They indicate how points (in ‘gvar’) or values (in ‘cvar’) get adjusted\n * when generating instances of variation fonts.\n *\n * @see https://www.microsoft.com/typography/otspec/gvar.htm\n * @see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6gvar.html\n * @param {Array}\n * @return {Array}\n */\nencode.VARDELTAS = function(deltas) {\n    let pos = 0;\n    const result = [];\n    while (pos < deltas.length) {\n        const value = deltas[pos];\n        if (value === 0) {\n            pos = encodeVarDeltaRunAsZeroes(deltas, pos, result);\n        } else if (value >= -128 && value <= 127) {\n            pos = encodeVarDeltaRunAsBytes(deltas, pos, result);\n        } else {\n            pos = encodeVarDeltaRunAsWords(deltas, pos, result);\n        }\n    }\n    return result;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\n/**\n * @param {Array} l\n * @returns {Array}\n */\nencode.INDEX = function(l) {\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offsets, then again to encode the offsets using the fitting data type.\n    let offset = 1; // First offset is always 1.\n    const offsets = [offset];\n    const data = [];\n    for (let i = 0; i < l.length; i += 1) {\n        const v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    const encodedOffsets = [];\n    const offSize = (1 + Math.floor(Math.log(offset) / Math.log(2)) / 8) | 0;\n    const offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (let i = 0; i < offsets.length; i += 1) {\n        const encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n/**\n * Convert an object to a CFF DICT structure.\n * The keys should be numeric.\n * The values should be objects containing name / type / value.\n * @param {Object} m\n * @returns {Array}\n */\nencode.DICT = function(m) {\n    let d = [];\n    const keys = Object.keys(m);\n    const length = keys.length;\n\n    for (let i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        const k = parseInt(keys[i], 0);\n        const v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\n/**\n * @param {Array} v\n * @param {string}\n * @returns {Array}\n */\nencode.OPERAND = function(v, type) {\n    let d = [];\n    if (Array.isArray(type)) {\n        for (let i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else if (type === 'number') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'real') {\n            d = d.concat(encode.REAL(v));\n        } else {\n            throw new Error('Unknown operand type ' + type);\n            // FIXME Add support for booleans\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nconst wmm = typeof WeakMap === 'function' && new WeakMap();\n\n/**\n * Convert a list of CharString operations to bytes.\n * @param {Array}\n * @returns {Array}\n */\nencode.CHARSTRING = function(ops) {\n    // See encode.MACSTRING for why we don't do \"if (wmm && wmm.has(ops))\".\n    if (wmm) {\n        const cachedValue = wmm.get(ops);\n        if (cachedValue !== undefined) {\n            return cachedValue;\n        }\n    }\n\n    let d = [];\n    const length = ops.length;\n\n    for (let i = 0; i < length; i += 1) {\n        const op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n/**\n * Convert an object containing name / type / value to bytes.\n * @param {Object}\n * @returns {Array}\n */\nencode.OBJECT = function(v) {\n    const encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.OBJECT = function(v) {\n    const sizeOfFunction = sizeOf[v.type];\n    check.argument(sizeOfFunction !== undefined, 'No sizeOf function for type ' + v.type);\n    return sizeOfFunction(v.value);\n};\n\n/**\n * Convert a table object to bytes.\n * A table contains a list of fields containing the metadata (name, type and default value).\n * The table itself has the field values set as attributes.\n * @param {opentype.Table}\n * @returns {Array}\n */\nencode.TABLE = function(table) {\n    let d = [];\n    const length = table.fields.length;\n    const subtables = [];\n    const subtableOffsets = [];\n\n    for (let i = 0; i < length; i += 1) {\n        const field = table.fields[i];\n        const encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type + ' (' + field.name + ')');\n        let value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        const bytes = encodingFunction(value);\n\n        if (field.type === 'TABLE') {\n            subtableOffsets.push(d.length);\n            d = d.concat([0, 0]);\n            subtables.push(bytes);\n        } else {\n            d = d.concat(bytes);\n        }\n    }\n\n    for (let i = 0; i < subtables.length; i += 1) {\n        const o = subtableOffsets[i];\n        const offset = d.length;\n        check.argument(offset < 65536, 'Table ' + table.tableName + ' too big.');\n        d[o] = offset >> 8;\n        d[o + 1] = offset & 0xff;\n        d = d.concat(subtables[i]);\n    }\n\n    return d;\n};\n\n/**\n * @param {opentype.Table}\n * @returns {number}\n */\nsizeOf.TABLE = function(table) {\n    let numBytes = 0;\n    const length = table.fields.length;\n\n    for (let i = 0; i < length; i += 1) {\n        const field = table.fields[i];\n        const sizeOfFunction = sizeOf[field.type];\n        check.argument(sizeOfFunction !== undefined, 'No sizeOf function for field type ' + field.type + ' (' + field.name + ')');\n        let value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        numBytes += sizeOfFunction(value);\n\n        // Subtables take 2 more bytes for offsets.\n        if (field.type === 'TABLE') {\n            numBytes += 2;\n        }\n    }\n\n    return numBytes;\n};\n\nencode.RECORD = encode.TABLE;\nsizeOf.RECORD = sizeOf.TABLE;\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexport { decode, encode, sizeOf };\n", "// Table metadata\n\nimport check from './check';\nimport { encode, sizeOf } from './types';\n\n/**\n * @exports opentype.Table\n * @class\n * @param {string} tableName\n * @param {Array} fields\n * @param {Object} options\n * @constructor\n */\nfunction Table(tableName, fields, options) {\n    // For coverage tables with coverage format 2, we do not want to add the coverage data directly to the table object,\n    // as this will result in wrong encoding order of the coverage data on serialization to bytes.\n    // The fallback of using the field values directly when not present on the table is handled in types.encode.TABLE() already.\n    if (fields.length && (fields[0].name !== 'coverageFormat' || fields[0].value === 1)) {\n        for (let i = 0; i < fields.length; i += 1) {\n            const field = fields[i];\n            this[field.name] = field.value;\n        }\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        const optionKeys = Object.keys(options);\n        for (let i = 0; i < optionKeys.length; i += 1) {\n            const k = optionKeys[i];\n            const v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\n/**\n * Encodes the table and returns an array of bytes\n * @return {Array}\n */\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\n/**\n * Get the size of the table.\n * @return {number}\n */\nTable.prototype.sizeOf = function() {\n    return sizeOf.TABLE(this);\n};\n\n/**\n * @private\n */\nfunction ushortList(itemName, list, count) {\n    if (count === undefined) {\n        count = list.length;\n    }\n    const fields = new Array(list.length + 1);\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < list.length; i++) {\n        fields[i + 1] = {name: itemName + i, type: 'USHORT', value: list[i]};\n    }\n    return fields;\n}\n\n/**\n * @private\n */\nfunction tableList(itemName, records, itemCallback) {\n    const count = records.length;\n    const fields = new Array(count + 1);\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < count; i++) {\n        fields[i + 1] = {name: itemName + i, type: 'TABLE', value: itemCallback(records[i], i)};\n    }\n    return fields;\n}\n\n/**\n * @private\n */\nfunction recordList(itemName, records, itemCallback) {\n    const count = records.length;\n    let fields = [];\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < count; i++) {\n        fields = fields.concat(itemCallback(records[i], i));\n    }\n    return fields;\n}\n\n// Common Layout Tables\n\n/**\n * @exports opentype.Coverage\n * @class\n * @param {opentype.Table}\n * @constructor\n * @extends opentype.Table\n */\nfunction Coverage(coverageTable) {\n    if (coverageTable.format === 1) {\n        Table.call(this, 'coverageTable',\n            [{name: 'coverageFormat', type: 'USHORT', value: 1}]\n            .concat(ushortList('glyph', coverageTable.glyphs))\n        );\n    } else if (coverageTable.format === 2) {\n        Table.call(this, 'coverageTable',\n            [{name: 'coverageFormat', type: 'USHORT', value: 2}]\n            .concat(recordList('rangeRecord', coverageTable.ranges, function(RangeRecord) {\n                return [\n                    {name: 'startGlyphID', type: 'USHORT', value: RangeRecord.start},\n                    {name: 'endGlyphID', type: 'USHORT', value: RangeRecord.end},\n                    {name: 'startCoverageIndex', type: 'USHORT', value: RangeRecord.index},\n                ];\n            }))\n        );\n    } else {\n        check.assert(false, 'Coverage format must be 1 or 2.');\n    }\n}\nCoverage.prototype = Object.create(Table.prototype);\nCoverage.prototype.constructor = Coverage;\n\nfunction ScriptList(scriptListTable) {\n    Table.call(this, 'scriptListTable',\n        recordList('scriptRecord', scriptListTable, function(scriptRecord, i) {\n            const script = scriptRecord.script;\n            let defaultLangSys = script.defaultLangSys;\n            check.assert(!!defaultLangSys, 'Unable to write GSUB: script ' + scriptRecord.tag + ' has no default language system.');\n            return [\n                {name: 'scriptTag' + i, type: 'TAG', value: scriptRecord.tag},\n                {name: 'script' + i, type: 'TABLE', value: new Table('scriptTable', [\n                    {name: 'defaultLangSys', type: 'TABLE', value: new Table('defaultLangSys', [\n                        {name: 'lookupOrder', type: 'USHORT', value: 0},\n                        {name: 'reqFeatureIndex', type: 'USHORT', value: defaultLangSys.reqFeatureIndex}]\n                        .concat(ushortList('featureIndex', defaultLangSys.featureIndexes)))}\n                    ].concat(recordList('langSys', script.langSysRecords, function(langSysRecord, i) {\n                        const langSys = langSysRecord.langSys;\n                        return [\n                            {name: 'langSysTag' + i, type: 'TAG', value: langSysRecord.tag},\n                            {name: 'langSys' + i, type: 'TABLE', value: new Table('langSys', [\n                                {name: 'lookupOrder', type: 'USHORT', value: 0},\n                                {name: 'reqFeatureIndex', type: 'USHORT', value: langSys.reqFeatureIndex}\n                                ].concat(ushortList('featureIndex', langSys.featureIndexes)))}\n                        ];\n                    })))}\n            ];\n        })\n    );\n}\nScriptList.prototype = Object.create(Table.prototype);\nScriptList.prototype.constructor = ScriptList;\n\n/**\n * @exports opentype.FeatureList\n * @class\n * @param {opentype.Table}\n * @constructor\n * @extends opentype.Table\n */\nfunction FeatureList(featureListTable) {\n    Table.call(this, 'featureListTable',\n        recordList('featureRecord', featureListTable, function(featureRecord, i) {\n            const feature = featureRecord.feature;\n            return [\n                {name: 'featureTag' + i, type: 'TAG', value: featureRecord.tag},\n                {name: 'feature' + i, type: 'TABLE', value: new Table('featureTable', [\n                    {name: 'featureParams', type: 'USHORT', value: feature.featureParams},\n                    ].concat(ushortList('lookupListIndex', feature.lookupListIndexes)))}\n            ];\n        })\n    );\n}\nFeatureList.prototype = Object.create(Table.prototype);\nFeatureList.prototype.constructor = FeatureList;\n\n/**\n * @exports opentype.LookupList\n * @class\n * @param {opentype.Table}\n * @param {Object}\n * @constructor\n * @extends opentype.Table\n */\nfunction LookupList(lookupListTable, subtableMakers) {\n    Table.call(this, 'lookupListTable', tableList('lookup', lookupListTable, function(lookupTable) {\n        let subtableCallback = subtableMakers[lookupTable.lookupType];\n        check.assert(!!subtableCallback, 'Unable to write GSUB lookup type ' + lookupTable.lookupType + ' tables.');\n        return new Table('lookupTable', [\n            {name: 'lookupType', type: 'USHORT', value: lookupTable.lookupType},\n            {name: 'lookupFlag', type: 'USHORT', value: lookupTable.lookupFlag}\n        ].concat(tableList('subtable', lookupTable.subtables, subtableCallback)));\n    }));\n}\nLookupList.prototype = Object.create(Table.prototype);\nLookupList.prototype.constructor = LookupList;\n\n// Record = same as Table, but inlined (a Table has an offset and its data is further in the stream)\n// Don't use offsets inside Records (probable bug), only in Tables.\nexport default {\n    Table,\n    Record: Table,\n    Coverage,\n    ScriptList,\n    FeatureList,\n    LookupList,\n    ushortList,\n    tableList,\n    recordList,\n};\n", "// Parsing utility functions\n\nimport check from './check';\n\n// Retrieve an unsigned byte from the DataView.\nfunction getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getUShort(dataView, offset) {\n    return dataView.getUint16(offset, false);\n}\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getShort(dataView, offset) {\n    return dataView.getInt16(offset, false);\n}\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nfunction getULong(dataView, offset) {\n    return dataView.getUint32(offset, false);\n}\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nfunction getFixed(dataView, offset) {\n    const decimal = dataView.getInt16(offset, false);\n    const fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n}\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nfunction getTag(dataView, offset) {\n    let tag = '';\n    for (let i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n}\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nfunction getOffset(dataView, offset, offSize) {\n    let v = 0;\n    for (let i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n}\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nfunction getBytes(dataView, startOffset, endOffset) {\n    const bytes = [];\n    for (let i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n}\n\n// Convert the list of bytes to a string.\nfunction bytesToString(bytes) {\n    let s = '';\n    for (let i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n}\n\nconst typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    const v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    const v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    const v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    const v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    const v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    const v = getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset32 = Parser.prototype.parseULong;\n\nParser.prototype.parseFixed = function() {\n    const v = getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseString = function(length) {\n    const dataView = this.data;\n    const offset = this.offset + this.relativeOffset;\n    let string = '';\n    this.relativeOffset += length;\n    for (let i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\n// + Since until 2038 those bits will be filled by zeros we can ignore them.\nParser.prototype.parseLongDateTime = function() {\n    let v = getULong(this.data, this.offset + this.relativeOffset + 4);\n    // Subtract seconds between 01/01/1904 and 01/01/1970\n    // to convert Apple Mac timestamp to Standard Unix timestamp\n    v -= 2082844800;\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseVersion = function(minorBase) {\n    const major = getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // Default returns the correct number if minor = 0xN000 where N is 0-9\n    // Set minorBase to 1 for tables that use minor = N where N is 0-9\n    const minor = getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    if (minorBase === undefined) minorBase = 0x1000;\n    return major + minor / minorBase / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\n///// Parsing lists and records ///////////////////////////////\n\n// Parse a list of 32 bit unsigned integers.\nParser.prototype.parseULongList = function(count) {\n    if (count === undefined) { count = this.parseULong(); }\n    const offsets = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint32(offset);\n        offset += 4;\n    }\n\n    this.relativeOffset += count * 4;\n    return offsets;\n};\n\n// Parse a list of 16 bit unsigned integers. The length of the list can be read on the stream\n// or provided as an argument.\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    if (count === undefined) { count = this.parseUShort(); }\n    const offsets = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\n// Parses a list of 16 bit signed integers.\nParser.prototype.parseShortList = function(count) {\n    const list = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        list[i] = dataView.getInt16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return list;\n};\n\n// Parses a list of bytes.\nParser.prototype.parseByteList = function(count) {\n    const list = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        list[i] = dataView.getUint8(offset++);\n    }\n\n    this.relativeOffset += count;\n    return list;\n};\n\n/**\n * Parse a list of items.\n * Record count is optional, if omitted it is read from the stream.\n * itemCallback is one of the Parser methods.\n */\nParser.prototype.parseList = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseUShort();\n    }\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\nParser.prototype.parseList32 = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseULong();\n    }\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\n/**\n * Parse a list of records.\n * Record count is optional, if omitted it is read from the stream.\n * Example of recordDescription: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\n */\nParser.prototype.parseRecordList = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseUShort();\n    }\n    const records = new Array(count);\n    const fields = Object.keys(recordDescription);\n    for (let i = 0; i < count; i++) {\n        const rec = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\nParser.prototype.parseRecordList32 = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseULong();\n    }\n    const records = new Array(count);\n    const fields = Object.keys(recordDescription);\n    for (let i = 0; i < count; i++) {\n        const rec = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\n// Parse a data structure into an object\n// Example of description: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\nParser.prototype.parseStruct = function(description) {\n    if (typeof description === 'function') {\n        return description.call(this);\n    } else {\n        const fields = Object.keys(description);\n        const struct = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = description[fieldName];\n            struct[fieldName] = fieldType.call(this);\n        }\n        return struct;\n    }\n};\n\n/**\n * Parse a GPOS valueRecord\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat is optional, if omitted it is read from the stream.\n */\nParser.prototype.parseValueRecord = function(valueFormat) {\n    if (valueFormat === undefined) {\n        valueFormat = this.parseUShort();\n    }\n    if (valueFormat === 0) {\n        // valueFormat2 in kerning pairs is most often 0\n        // in this case return undefined instead of an empty object, to save space\n        return;\n    }\n    const valueRecord = {};\n\n    if (valueFormat & 0x0001) { valueRecord.xPlacement = this.parseShort(); }\n    if (valueFormat & 0x0002) { valueRecord.yPlacement = this.parseShort(); }\n    if (valueFormat & 0x0004) { valueRecord.xAdvance = this.parseShort(); }\n    if (valueFormat & 0x0008) { valueRecord.yAdvance = this.parseShort(); }\n\n    // Device table (non-variable font) / VariationIndex table (variable font) not supported\n    // https://docs.microsoft.com/fr-fr/typography/opentype/spec/chapter2#devVarIdxTbls\n    if (valueFormat & 0x0010) { valueRecord.xPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0020) { valueRecord.yPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0040) { valueRecord.xAdvDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0080) { valueRecord.yAdvDevice = undefined; this.parseShort(); }\n\n    return valueRecord;\n};\n\n/**\n * Parse a list of GPOS valueRecords\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat and valueCount are read from the stream.\n */\nParser.prototype.parseValueRecordList = function() {\n    const valueFormat = this.parseUShort();\n    const valueCount = this.parseUShort();\n    const values = new Array(valueCount);\n    for (let i = 0; i < valueCount; i++) {\n        values[i] = this.parseValueRecord(valueFormat);\n    }\n    return values;\n};\n\nParser.prototype.parsePointer = function(description) {\n    const structOffset = this.parseOffset16();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\nParser.prototype.parsePointer32 = function(description) {\n    const structOffset = this.parseOffset32();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\n/**\n * Parse a list of offsets to lists of 16-bit integers,\n * or a list of offsets to lists of offsets to any kind of items.\n * If itemCallback is not provided, a list of list of UShort is assumed.\n * If provided, itemCallback is called on each item and must parse the item.\n * See examples in tables/gsub.js\n */\nParser.prototype.parseListOfLists = function(itemCallback) {\n    const offsets = this.parseOffset16List();\n    const count = offsets.length;\n    const relativeOffset = this.relativeOffset;\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const start = offsets[i];\n        if (start === 0) {\n            // NULL offset\n            // Add i as owned property to list. Convenient with assert.\n            list[i] = undefined;\n            continue;\n        }\n        this.relativeOffset = start;\n        if (itemCallback) {\n            const subOffsets = this.parseOffset16List();\n            const subList = new Array(subOffsets.length);\n            for (let j = 0; j < subOffsets.length; j++) {\n                this.relativeOffset = start + subOffsets[j];\n                subList[j] = itemCallback.call(this);\n            }\n            list[i] = subList;\n        } else {\n            list[i] = this.parseUShortList();\n        }\n    }\n    this.relativeOffset = relativeOffset;\n    return list;\n};\n\n///// Complex tables parsing //////////////////////////////////\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n// parser.offset must point to the start of the table containing the coverage.\nParser.prototype.parseCoverage = function() {\n    const startOffset = this.offset + this.relativeOffset;\n    const format = this.parseUShort();\n    const count = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            glyphs: this.parseUShortList(count)\n        };\n    } else if (format === 2) {\n        const ranges = new Array(count);\n        for (let i = 0; i < count; i++) {\n            ranges[i] = {\n                start: this.parseUShort(),\n                end: this.parseUShort(),\n                index: this.parseUShort()\n            };\n        }\n        return {\n            format: 2,\n            ranges: ranges\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': Coverage format must be 1 or 2.');\n};\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\nParser.prototype.parseClassDef = function() {\n    const startOffset = this.offset + this.relativeOffset;\n    const format = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            startGlyph: this.parseUShort(),\n            classes: this.parseUShortList()\n        };\n    } else if (format === 2) {\n        return {\n            format: 2,\n            ranges: this.parseRecordList({\n                start: Parser.uShort,\n                end: Parser.uShort,\n                classId: Parser.uShort\n            })\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': ClassDef format must be 1 or 2.');\n};\n\n///// Static methods ///////////////////////////////////\n// These convenience methods can be used as callbacks and should be called with \"this\" context set to a Parser instance.\n\nParser.list = function(count, itemCallback) {\n    return function() {\n        return this.parseList(count, itemCallback);\n    };\n};\n\nParser.list32 = function(count, itemCallback) {\n    return function() {\n        return this.parseList32(count, itemCallback);\n    };\n};\n\nParser.recordList = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList(count, recordDescription);\n    };\n};\n\nParser.recordList32 = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList32(count, recordDescription);\n    };\n};\n\nParser.pointer = function(description) {\n    return function() {\n        return this.parsePointer(description);\n    };\n};\n\nParser.pointer32 = function(description) {\n    return function() {\n        return this.parsePointer32(description);\n    };\n};\n\nParser.tag = Parser.prototype.parseTag;\nParser.byte = Parser.prototype.parseByte;\nParser.uShort = Parser.offset16 = Parser.prototype.parseUShort;\nParser.uShortList = Parser.prototype.parseUShortList;\nParser.uLong = Parser.offset32 = Parser.prototype.parseULong;\nParser.uLongList = Parser.prototype.parseULongList;\nParser.struct = Parser.prototype.parseStruct;\nParser.coverage = Parser.prototype.parseCoverage;\nParser.classDef = Parser.prototype.parseClassDef;\n\n///// Script, Feature, Lookup lists ///////////////////////////////////////////////\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n\nconst langSysTable = {\n    reserved: Parser.uShort,\n    reqFeatureIndex: Parser.uShort,\n    featureIndexes: Parser.uShortList\n};\n\nParser.prototype.parseScriptList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        script: Parser.pointer({\n            defaultLangSys: Parser.pointer(langSysTable),\n            langSysRecords: Parser.recordList({\n                tag: Parser.tag,\n                langSys: Parser.pointer(langSysTable)\n            })\n        })\n    })) || [];\n};\n\nParser.prototype.parseFeatureList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        feature: Parser.pointer({\n            featureParams: Parser.offset16,\n            lookupListIndexes: Parser.uShortList\n        })\n    })) || [];\n};\n\nParser.prototype.parseLookupList = function(lookupTableParsers) {\n    return this.parsePointer(Parser.list(Parser.pointer(function() {\n        const lookupType = this.parseUShort();\n        check.argument(1 <= lookupType && lookupType <= 9, 'GPOS/GSUB lookup type ' + lookupType + ' unknown.');\n        const lookupFlag = this.parseUShort();\n        const useMarkFilteringSet = lookupFlag & 0x10;\n        return {\n            lookupType: lookupType,\n            lookupFlag: lookupFlag,\n            subtables: this.parseList(Parser.pointer(lookupTableParsers[lookupType])),\n            markFilteringSet: useMarkFilteringSet ? this.parseUShort() : undefined\n        };\n    }))) || [];\n};\n\nParser.prototype.parseFeatureVariationsList = function() {\n    return this.parsePointer32(function() {\n        const majorVersion = this.parseUShort();\n        const minorVersion = this.parseUShort();\n        check.argument(majorVersion === 1 && minorVersion < 1, 'GPOS/GSUB feature variations table unknown.');\n        const featureVariations = this.parseRecordList32({\n            conditionSetOffset: Parser.offset32,\n            featureTableSubstitutionOffset: Parser.offset32\n        });\n        return featureVariations;\n    }) || [];\n};\n\nexport default {\n    getByte,\n    getCard8: getByte,\n    getUShort,\n    getCard16: getUShort,\n    getShort,\n    getULong,\n    getFixed,\n    getTag,\n    getOffset,\n    getBytes,\n    bytesToString,\n    Parser,\n};\n\nexport { Parser };\n", "// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction parseCmapTableFormat12(cmap, p) {\n    //Skip reserved.\n    p.parseUShort();\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseULong();\n    cmap.language = p.parseULong();\n\n    let groupCount;\n    cmap.groupCount = groupCount = p.parseULong();\n    cmap.glyphIndexMap = {};\n\n    for (let i = 0; i < groupCount; i += 1) {\n        const startCharCode = p.parseULong();\n        const endCharCode = p.parseULong();\n        let startGlyphId = p.parseULong();\n\n        for (let c = startCharCode; c <= endCharCode; c += 1) {\n            cmap.glyphIndexMap[c] = startGlyphId;\n            startGlyphId++;\n        }\n    }\n}\n\nfunction parseCmapTableFormat4(cmap, p, data, start, offset) {\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    let segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n    const endCountParser = new parse.Parser(data, start + offset + 14);\n    const startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    const idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    const idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    let glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (let i = 0; i < segCount - 1; i += 1) {\n        let glyphIndex;\n        const endCount = endCountParser.parseUShort();\n        const startCount = startCountParser.parseUShort();\n        const idDelta = idDeltaParser.parseShort();\n        const idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (let c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n}\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4 and 12.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    const cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 0\" (Unicode format) and \"platform 3\" (Windows format) table.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    let offset = -1;\n    for (let i = cmap.numTables - 1; i >= 0; i -= 1) {\n        const platformId = parse.getUShort(data, start + 4 + (i * 8));\n        const encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if ((platformId === 3 && (encodingId === 0 || encodingId === 1 || encodingId === 10)) ||\n            (platformId === 0 && (encodingId === 0 || encodingId === 1 || encodingId === 2 || encodingId === 3 || encodingId === 4))) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support.\n        throw new Error('No valid cmap sub-tables found.');\n    }\n\n    const p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n\n    if (cmap.format === 12) {\n        parseCmapTableFormat12(cmap, p);\n    } else if (cmap.format === 4) {\n        parseCmapTableFormat4(cmap, p, data, start, offset);\n    } else {\n        throw new Error('Only format 4 and 12 cmap tables are supported (found format ' + cmap.format + ').');\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0,\n        glyphIndex: glyphIndex\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\n// Make cmap table, format 4 by default, 12 if needed only\nfunction makeCmapTable(glyphs) {\n    // Plan 0 is the base Unicode Plan but emojis, for example are on another plan, and needs cmap 12 format (with 32bit)\n    let isPlan0Only = true;\n    let i;\n\n    // Check if we need to add cmap format 12 or if format 4 only is fine\n    for (i = glyphs.length - 1; i > 0; i -= 1) {\n        const g = glyphs.get(i);\n        if (g.unicode > 65535) {\n            console.log('Adding CMAP format 12 (needed!)');\n            isPlan0Only = false;\n            break;\n        }\n    }\n\n    let cmapTable = [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: isPlan0Only ? 1 : 2},\n\n        // CMAP 4 header\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: isPlan0Only ? 12 : (12 + 8)}\n    ];\n\n    if (!isPlan0Only)\n        cmapTable = cmapTable.concat([\n            // CMAP 12 header\n            {name: 'cmap12PlatformID', type: 'USHORT', value: 3}, // We encode only for PlatformID = 3 (Windows) because it is supported everywhere\n            {name: 'cmap12EncodingID', type: 'USHORT', value: 10},\n            {name: 'cmap12Offset', type: 'ULONG', value: 0}\n        ]);\n\n    cmapTable = cmapTable.concat([\n        // CMAP 4 Subtable\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'cmap4Length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    const t = new table.Table('cmap', cmapTable);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        for (let j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function (a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    const segCount = t.segments.length;\n    let segCountToRemove = 0;\n\n    // CMAP 4\n    // Set up parallel segment arrays.\n    let endCounts = [];\n    let startCounts = [];\n    let idDeltas = [];\n    let idRangeOffsets = [];\n    let glyphIds = [];\n\n    // CMAP 12\n    let cmap12Groups = [];\n\n    // Reminder this loop is not following the specification at 100%\n    // The specification -> find suites of characters and make a group\n    // Here we're doing one group for each letter\n    // Doing as the spec can save 8 times (or more) space\n    for (i = 0; i < segCount; i += 1) {\n        const segment = t.segments[i];\n\n        // CMAP 4\n        if (segment.end <= 65535 && segment.start <= 65535) {\n            endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n            startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n            idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n            idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n            if (segment.glyphId !== undefined) {\n                glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n            }\n        } else {\n            // Skip Unicode > 65535 (16bit unsigned max) for CMAP 4, will be added in CMAP 12\n            segCountToRemove += 1;\n        }\n\n        // CMAP 12\n        // Skip Terminator Segment\n        if (!isPlan0Only && segment.glyphIndex !== undefined) {\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12Start_' + i, type: 'ULONG', value: segment.start});\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12End_' + i, type: 'ULONG', value: segment.end});\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12Glyph_' + i, type: 'ULONG', value: segment.glyphIndex});\n        }\n    }\n\n    // CMAP 4 Subtable\n    t.segCountX2 = (segCount - segCountToRemove) * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log((segCount - segCountToRemove)) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.cmap4Length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    if (!isPlan0Only) {\n        // CMAP 12 Subtable\n        const cmap12Length = 16 + // Subtable header\n            cmap12Groups.length * 4;\n\n        t.cmap12Offset = 12 + (2 * 2) + 4 + t.cmap4Length;\n        t.fields = t.fields.concat([\n            {name: 'cmap12Format', type: 'USHORT', value: 12},\n            {name: 'cmap12Reserved', type: 'USHORT', value: 0},\n            {name: 'cmap12Length', type: 'ULONG', value: cmap12Length},\n            {name: 'cmap12Language', type: 'ULONG', value: 0},\n            {name: 'cmap12nGroups', type: 'ULONG', value: cmap12Groups.length / 3}\n        ]);\n\n        t.fields = t.fields.concat(cmap12Groups);\n    }\n\n    return t;\n}\n\nexport default { parse: parseCmapTable, make: makeCmapTable };\n", "// Glyph encoding\n\nconst cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nconst cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nconst cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nconst standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n/**\n * This is the encoding used for fonts created from scratch.\n * It loops through all glyphs and finds the appropriate unicode value.\n * Since it's linear time, other encodings will be faster.\n * @exports opentype.DefaultEncoding\n * @class\n * @constructor\n * @param {opentype.Font}\n */\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    const code = c.codePointAt(0);\n    const glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (let i = 0; i < glyphs.length; i += 1) {\n            const glyph = glyphs.get(i);\n            for (let j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    }\n    return null;\n};\n\n/**\n * @exports opentype.CmapEncoding\n * @class\n * @constructor\n * @param {Object} cmap - a object with the cmap encoded data\n */\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\n/**\n * @param  {string} c - the character\n * @return {number} The glyph index.\n */\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.codePointAt(0)] || 0;\n};\n\n/**\n * @exports opentype.CffEncoding\n * @class\n * @constructor\n * @param {string} encoding - The encoding\n * @param {Array} charset - The character set.\n */\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\n/**\n * @param  {string} s - The character\n * @return {number} The index.\n */\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    const code = s.codePointAt(0);\n    const charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\n/**\n * @exports opentype.GlyphNames\n * @class\n * @constructor\n * @param {Object} post\n */\nfunction GlyphNames(post) {\n    switch (post.version) {\n        case 1:\n            this.names = standardNames.slice();\n            break;\n        case 2:\n            this.names = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] < standardNames.length) {\n                    this.names[i] = standardNames[post.glyphNameIndex[i]];\n                } else {\n                    this.names[i] = post.names[post.glyphNameIndex[i] - standardNames.length];\n                }\n            }\n\n            break;\n        case 2.5:\n            this.names = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                this.names[i] = standardNames[i + post.glyphNameIndex[i]];\n            }\n\n            break;\n        case 3:\n            this.names = [];\n            break;\n        default:\n            this.names = [];\n            break;\n    }\n}\n\n/**\n * Gets the index of a glyph by name.\n * @param  {string} name - The glyph name\n * @return {number} The index\n */\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\n/**\n * @param  {number} gid\n * @return {string}\n */\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNamesAll(font) {\n    let glyph;\n    const glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    const charCodes = Object.keys(glyphIndexMap);\n\n    for (let i = 0; i < charCodes.length; i += 1) {\n        const c = charCodes[i];\n        const glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs.get(glyphIndex);\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (let i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs.get(i);\n        if (font.cffEncoding) {\n            if (font.isCIDFont) {\n                glyph.name = 'gid' + i;\n            } else {\n                glyph.name = font.cffEncoding.charset[i];\n            }\n        } else if (font.glyphNames.names) {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nfunction addGlyphNamesToUnicodeMap(font) {\n    font._IndexToUnicodeMap = {};\n\n    const glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    const charCodes = Object.keys(glyphIndexMap);\n\n    for (let i = 0; i < charCodes.length; i += 1) {\n        const c = charCodes[i];\n        let glyphIndex = glyphIndexMap[c];\n        if (font._IndexToUnicodeMap[glyphIndex] === undefined) {\n            font._IndexToUnicodeMap[glyphIndex] = {\n                unicodes: [parseInt(c)]\n            };\n        } else {\n            font._IndexToUnicodeMap[glyphIndex].unicodes.push(parseInt(c));\n        }\n    }\n}\n\n/**\n * @alias opentype.addGlyphNames\n * @param {opentype.Font}\n * @param {Object}\n */\nfunction addGlyphNames(font, opt) {\n    if (opt.lowMemory) {\n        addGlyphNamesToUnicodeMap(font);\n    } else {\n        addGlyphNamesAll(font);\n    }\n}\n\nexport {\n    cffStandardStrings,\n    cffStandardEncoding,\n    cffExpertEncoding,\n    standardNames,\n    DefaultEncoding,\n    CmapEncoding,\n    CffEncoding,\n    GlyphNames,\n    addGlyphNames\n};\n", "// Drawing utility functions.\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexport default { line };\n", "// The Glyph object\n\nimport check from './check';\nimport draw from './draw';\nimport Path from './path';\n// import glyf from './tables/glyf' Can't be imported here, because it's a circular dependency\n\nfunction getPathDefinition(glyph, path) {\n    let _path = path || new Path();\n    return {\n        configurable: true,\n\n        get: function() {\n            if (typeof _path === 'function') {\n                _path = _path();\n            }\n\n            return _path;\n        },\n\n        set: function(p) {\n            _path = p;\n        }\n    };\n}\n/**\n * @typedef GlyphOptions\n * @type Object\n * @property {string} [name] - The glyph name\n * @property {number} [unicode]\n * @property {Array} [unicodes]\n * @property {number} [xMin]\n * @property {number} [yMin]\n * @property {number} [xMax]\n * @property {number} [yMax]\n * @property {number} [advanceWidth]\n */\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\n/**\n * @exports opentype.Glyph\n * @class\n * @param {GlyphOptions}\n * @constructor\n */\nfunction Glyph(options) {\n    // By putting all the code on a prototype function (which is only declared once)\n    // we reduce the memory requirements for larger fonts by some 2%\n    this.bindConstructorValues(options);\n}\n\n/**\n * @param  {GlyphOptions}\n */\nGlyph.prototype.bindConstructorValues = function(options) {\n    this.index = options.index || 0;\n\n    // These three values cannot be deferred for memory optimization:\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n\n    // But by binding these values only when necessary, we reduce can\n    // the memory requirements by almost 3% for larger fonts.\n    if ('xMin' in options) {\n        this.xMin = options.xMin;\n    }\n\n    if ('yMin' in options) {\n        this.yMin = options.yMin;\n    }\n\n    if ('xMax' in options) {\n        this.xMax = options.xMax;\n    }\n\n    if ('yMax' in options) {\n        this.yMax = options.yMax;\n    }\n\n    if ('advanceWidth' in options) {\n        this.advanceWidth = options.advanceWidth;\n    }\n\n    // The path for a glyph is the most memory intensive, and is bound as a value\n    // with a getter/setter to ensure we actually do path parsing only once the\n    // path is actually needed by anything.\n    Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n};\n\n/**\n * @param {number}\n */\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n/**\n * Calculate the minimum bounding box for this glyph.\n * @return {opentype.BoundingBox}\n */\nGlyph.prototype.getBoundingBox = function() {\n    return this.path.getBoundingBox();\n};\n\n/**\n * Convert the glyph to a Path we can draw on a drawing context.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n * @param  {opentype.Font} if hinting is to be used, the font\n * @return {opentype.Path}\n */\nGlyph.prototype.getPath = function(x, y, fontSize, options, font) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    let commands;\n    let hPoints;\n    if (!options) options = { };\n    let xScale = options.xScale;\n    let yScale = options.yScale;\n\n    if (options.hinting && font && font.hinting) {\n        // in case of hinting, the hinting engine takes care\n        // of scaling the points (not the path) before hinting.\n        hPoints = this.path && font.hinting.exec(this, fontSize);\n        // in case the hinting engine failed hPoints is undefined\n        // and thus reverts to plain rending\n    }\n\n    if (hPoints) {\n        // Call font.hinting.getCommands instead of `glyf.getPath(hPoints).commands` to avoid a circular dependency\n        commands = font.hinting.getCommands(hPoints);\n        x = Math.round(x);\n        y = Math.round(y);\n        // TODO in case of hinting xyScaling is not yet supported\n        xScale = yScale = 1;\n    } else {\n        commands = this.path.commands;\n        const scale = 1 / (this.path.unitsPerEm || 1000) * fontSize;\n        if (xScale === undefined) xScale = scale;\n        if (yScale === undefined) yScale = scale;\n    }\n\n    const p = new Path();\n    for (let i = 0; i < commands.length; i += 1) {\n        const cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * xScale), y + (-cmd.y1 * yScale),\n                               x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * xScale), y + (-cmd.y1 * yScale),\n                      x + (cmd.x2 * xScale), y + (-cmd.y2 * yScale),\n                      x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n/**\n * Split the glyph into contours.\n * This function is here for backwards compatibility, and to\n * provide raw access to the TrueType glyph outlines.\n * @return {Array}\n */\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    const contours = [];\n    let currentContour = [];\n    for (let i = 0; i < this.points.length; i += 1) {\n        const pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n/**\n * Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\n * @return {Object}\n */\nGlyph.prototype.getMetrics = function() {\n    const commands = this.path.commands;\n    const xCoords = [];\n    const yCoords = [];\n    for (let i = 0; i < commands.length; i += 1) {\n        const cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    const metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: this.leftSideBearing\n    };\n\n    if (!isFinite(metrics.xMin)) {\n        metrics.xMin = 0;\n    }\n\n    if (!isFinite(metrics.xMax)) {\n        metrics.xMax = this.advanceWidth;\n    }\n\n    if (!isFinite(metrics.yMin)) {\n        metrics.yMin = 0;\n    }\n\n    if (!isFinite(metrics.yMax)) {\n        metrics.yMax = 0;\n    }\n\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n/**\n * Draw the glyph on the given context.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n */\nGlyph.prototype.draw = function(ctx, x, y, fontSize, options) {\n    this.getPath(x, y, fontSize, options).draw(ctx);\n};\n\n/**\n * Draw the points of the glyph.\n * On-curve points will be drawn in blue, off-curve points will be drawn in red.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n */\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n    function drawCircles(l, x, y, scale) {\n        ctx.beginPath();\n        for (let j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, Math.PI * 2, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    const scale = 1 / this.path.unitsPerEm * fontSize;\n\n    const blueCircles = [];\n    const redCircles = [];\n    const path = this.path;\n    for (let i = 0; i < path.commands.length; i += 1) {\n        const cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n/**\n * Draw lines indicating important font measurements.\n * Black lines indicate the origin of the coordinate system (point 0,0).\n * Blue lines indicate the glyph bounding box.\n * Green line indicates the advance width of the glyph.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n */\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    let scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.path.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // This code is here due to memory optimization: by not using\n    // defaults in the constructor, we save a notable amount of memory.\n    const xMin = this.xMin || 0;\n    let yMin = this.yMin || 0;\n    const xMax = this.xMax || 0;\n    let yMax = this.yMax || 0;\n    const advanceWidth = this.advanceWidth || 0;\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (xMin * scale), -10000, x + (xMin * scale), 10000);\n    draw.line(ctx, x + (xMax * scale), -10000, x + (xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-yMin * scale), 10000, y + (-yMin * scale));\n    draw.line(ctx, -10000, y + (-yMax * scale), 10000, y + (-yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (advanceWidth * scale), -10000, x + (advanceWidth * scale), 10000);\n};\n\nexport default Glyph;\n", "// The GlyphSet object\n\nimport Glyph from './glyph';\n\n// Define a property on the glyph that depends on the path being loaded.\nfunction defineDependentProperty(glyph, externalName, internalName) {\n    Object.defineProperty(glyph, externalName, {\n        get: function() {\n            // Request the path property to make sure the path is loaded.\n            glyph.path; // jshint ignore:line\n            return glyph[internalName];\n        },\n        set: function(newValue) {\n            glyph[internalName] = newValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n}\n\n/**\n * A GlyphSet represents all glyphs available in the font, but modelled using\n * a deferred glyph loader, for retrieving glyphs only once they are absolutely\n * necessary, to keep the memory footprint down.\n * @exports opentype.GlyphSet\n * @class\n * @param {opentype.Font}\n * @param {Array}\n */\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (let i = 0; i < glyphs.length; i++) {\n            const glyph = glyphs[i];\n            glyph.path.unitsPerEm = font.unitsPerEm;\n            this.glyphs[i] = glyph;\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\n/**\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nGlyphSet.prototype.get = function(index) {\n    // this.glyphs[index] is 'undefined' when low memory mode is on. glyph is pushed on request only.\n    if (this.glyphs[index] === undefined) {\n        this.font._push(index);\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n\n        let glyph = this.glyphs[index];\n        let unicodeObj = this.font._IndexToUnicodeMap[index];\n\n        if (unicodeObj) {\n            for (let j = 0; j < unicodeObj.unicodes.length; j++)\n                glyph.addUnicode(unicodeObj.unicodes[j]);\n        }\n\n        if (this.font.cffEncoding) {\n            if (this.font.isCIDFont) {\n                glyph.name = 'gid' + index;\n            } else {\n                glyph.name = this.font.cffEncoding.charset[index];\n            }\n        } else if (this.font.glyphNames.names) {\n            glyph.name = this.font.glyphNames.glyphIndexToName(index);\n        }\n\n        this.glyphs[index].advanceWidth = this.font._hmtxTableData[index].advanceWidth;\n        this.glyphs[index].leftSideBearing = this.font._hmtxTableData[index].leftSideBearing;\n    } else {\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n    }\n\n    return this.glyphs[index];\n};\n\n/**\n * @param  {number} index\n * @param  {Object}\n */\nGlyphSet.prototype.push = function(index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\n/**\n * @alias opentype.glyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nfunction glyphLoader(font, index) {\n    return new Glyph({index: index, font: font});\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n * @alias opentype.ttfGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseGlyph\n * @param  {Object} data\n * @param  {number} position\n * @param  {Function} buildPath\n * @return {opentype.Glyph}\n */\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function() {\n        const glyph = new Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            parseGlyph(glyph, data, position);\n            const path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        defineDependentProperty(glyph, 'xMin', '_xMin');\n        defineDependentProperty(glyph, 'xMax', '_xMax');\n        defineDependentProperty(glyph, 'yMin', '_yMin');\n        defineDependentProperty(glyph, 'yMax', '_yMax');\n\n        return glyph;\n    };\n}\n/**\n * @alias opentype.cffGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseCFFCharstring\n * @param  {string} charstring\n * @return {opentype.Glyph}\n */\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function() {\n        const glyph = new Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            const path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nexport default { GlyphSet, glyphLoader, ttfGlyphLoader, cffGlyphLoader };\n", "// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\nimport { CffEncoding, cffStandardEncoding, cffExpertEncoding, cffStandardStrings } from '../encoding';\nimport glyphset from '../glyphset';\nimport parse from '../parse';\nimport Path from '../path';\nimport table from '../table';\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (let i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    let bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    const offsets = [];\n    const objects = [];\n    const count = parse.getCard16(data, start);\n    let objectOffset;\n    let endOffset;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        let pos = start + 3;\n        for (let i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (let i = 0; i < offsets.length - 1; i += 1) {\n        let value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\nfunction parseCFFIndexLowMemory(data, start) {\n    const offsets = [];\n    const count = parse.getCard16(data, start);\n    let objectOffset;\n    let endOffset;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        let pos = start + 3;\n        for (let i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    return {offsets: offsets, startOffset: start, endOffset: endOffset};\n}\nfunction getCffIndexObject(i, offsets, data, start, conversionFn) {\n    const count = parse.getCard16(data, start);\n    let objectOffset = 0;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n    }\n\n    let value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n    if (conversionFn) {\n        value = conversionFn(value);\n    }\n    return value;\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    let s = '';\n    const eof = 15;\n    const lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        const b = parser.parseByte();\n        const n1 = b >> 4;\n        const n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    let b1;\n    let b2;\n    let b3;\n    let b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    const o = {};\n    for (let i = 0; i < entries.length; i += 1) {\n        const key = entries[i][0];\n        const values = entries[i][1];\n        let value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key) && !isNaN(o[key])) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    const parser = new parse.Parser(data, start);\n    const entries = [];\n    let operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        let op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    const newDict = {};\n    let value;\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (let i = 0; i < meta.length; i += 1) {\n        const m = meta[i];\n\n        if (Array.isArray(m.type)) {\n            const values = [];\n            values.length = m.type.length;\n            for (let j = 0; j < m.type.length; j++) {\n                value = dict[m.op] !== undefined ? dict[m.op][j] : undefined;\n                if (value === undefined) {\n                    value = m.value !== undefined && m.value[j] !== undefined ? m.value[j] : null;\n                }\n                if (m.type[j] === 'SID') {\n                    value = getCFFString(strings, value);\n                }\n                values[j] = value;\n            }\n            newDict[m.name] = values;\n        } else {\n            value = dict[m.op];\n            if (value === undefined) {\n                value = m.value !== undefined ? m.value : null;\n            }\n\n            if (m.type === 'SID') {\n                value = getCFFString(strings, value);\n            }\n            newDict[m.name] = value;\n        }\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    const header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nconst TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {\n        name: 'fontMatrix',\n        op: 1207,\n        type: ['real', 'real', 'real', 'real', 'real', 'real'],\n        value: [0.001, 0, 0, 0.001, 0, 0]\n    },\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]},\n    {name: 'ros', op: 1230, type: ['SID', 'SID', 'number']},\n    {name: 'cidFontVersion', op: 1231, type: 'number', value: 0},\n    {name: 'cidFontRevision', op: 1232, type: 'number', value: 0},\n    {name: 'cidFontType', op: 1233, type: 'number', value: 0},\n    {name: 'cidCount', op: 1234, type: 'number', value: 8720},\n    {name: 'uidBase', op: 1235, type: 'number'},\n    {name: 'fdArray', op: 1236, type: 'offset'},\n    {name: 'fdSelect', op: 1237, type: 'offset'},\n    {name: 'fontName', op: 1238, type: 'SID'}\n];\n\nconst PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    const dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    const dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Returns a list of \"Top DICT\"s found using an INDEX list.\n// Used to read both the usual high-level Top DICTs and also the FDArray\n// discovered inside CID-keyed fonts.  When a Top DICT has a reference to\n// a Private DICT that is read and saved into the Top DICT.\n//\n// In addition to the expected/optional values as outlined in TOP_DICT_META\n// the following values might be saved into the Top DICT.\n//\n//    _subrs []        array of local CFF subroutines from Private DICT\n//    _subrsBias       bias value computed from number of subroutines\n//                      (see calcCFFSubroutineBias() and parseCFFCharstring())\n//    _defaultWidthX   default widths for CFF characters\n//    _nominalWidthX   bias added to width embedded within glyph description\n//\n//    _privateDict     saved copy of parsed Private DICT from Top DICT\nfunction gatherCFFTopDicts(data, start, cffIndex, strings) {\n    const topDictArray = [];\n    for (let iTopDict = 0; iTopDict < cffIndex.length; iTopDict += 1) {\n        const topDictData = new DataView(new Uint8Array(cffIndex[iTopDict]).buffer);\n        const topDict = parseCFFTopDict(topDictData, strings);\n        topDict._subrs = [];\n        topDict._subrsBias = 0;\n        topDict._defaultWidthX = 0;\n        topDict._nominalWidthX = 0;\n        const privateSize = topDict.private[0];\n        const privateOffset = topDict.private[1];\n        if (privateSize !== 0 && privateOffset !== 0) {\n            const privateDict = parseCFFPrivateDict(data, privateOffset + start, privateSize, strings);\n            topDict._defaultWidthX = privateDict.defaultWidthX;\n            topDict._nominalWidthX = privateDict.nominalWidthX;\n            if (privateDict.subrs !== 0) {\n                const subrOffset = privateOffset + privateDict.subrs;\n                const subrIndex = parseCFFIndex(data, subrOffset + start);\n                topDict._subrs = subrIndex.objects;\n                topDict._subrsBias = calcCFFSubroutineBias(topDict._subrs);\n            }\n            topDict._privateDict = privateDict;\n        }\n        topDictArray.push(topDict);\n    }\n    return topDictArray;\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    let sid;\n    let count;\n    const parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    const charset = ['.notdef'];\n\n    const format = parser.parseCard8();\n    if (format === 0) {\n        for (let i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (let i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (let i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    let code;\n    const enc = {};\n    const parser = new parse.Parser(data, start);\n    const format = parser.parseCard8();\n    if (format === 0) {\n        const nCodes = parser.parseCard8();\n        for (let i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        const nRanges = parser.parseCard8();\n        code = 1;\n        for (let i = 0; i < nRanges; i += 1) {\n            const first = parser.parseCard8();\n            const nLeft = parser.parseCard8();\n            for (let j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(font, glyph, code) {\n    let c1x;\n    let c1y;\n    let c2x;\n    let c2y;\n    const p = new Path();\n    const stack = [];\n    let nStems = 0;\n    let haveWidth = false;\n    let open = false;\n    let x = 0;\n    let y = 0;\n    let subrs;\n    let subrsBias;\n    let defaultWidthX;\n    let nominalWidthX;\n    if (font.isCIDFont) {\n        const fdIndex = font.tables.cff.topDict._fdSelect[glyph.index];\n        const fdDict = font.tables.cff.topDict._fdArray[fdIndex];\n        subrs = fdDict._subrs;\n        subrsBias = fdDict._subrsBias;\n        defaultWidthX = fdDict._defaultWidthX;\n        nominalWidthX = fdDict._nominalWidthX;\n    } else {\n        subrs = font.tables.cff.topDict._subrs;\n        subrsBias = font.tables.cff.topDict._subrsBias;\n        defaultWidthX = font.tables.cff.topDict._defaultWidthX;\n        nominalWidthX = font.tables.cff.topDict._nominalWidthX;\n    }\n    let width = defaultWidthX;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        let hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        let b1;\n        let b2;\n        let b3;\n        let b4;\n        let codeIndex;\n        let subrCode;\n        let jpx;\n        let jpy;\n        let c3x;\n        let c3y;\n        let c4x;\n        let c4y;\n\n        let i = 0;\n        while (i < code.length) {\n            let v = code[i];\n            i += 1;\n            switch (v) {\n                case 1: // hstem\n                    parseStems();\n                    break;\n                case 3: // vstem\n                    parseStems();\n                    break;\n                case 4: // vmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 5: // rlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 6: // hlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 7: // vlineto\n                    while (stack.length > 0) {\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 8: // rrcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 10: // callsubr\n                    codeIndex = stack.pop() + subrsBias;\n                    subrCode = subrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 11: // return\n                    return;\n                case 12: // flex operators\n                    v = code[i];\n                    i += 1;\n                    switch (v) {\n                        case 35: // flex\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y + stack.shift();    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = jpy + stack.shift();    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            x = c4x   + stack.shift();    // dx6\n                            y = c4y   + stack.shift();    // dy6\n                            stack.shift();                // flex depth\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 34: // hflex\n                            // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y;                      // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y;                    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = c2y;                    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = y;                      // dy5\n                            x = c4x + stack.shift();      // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 36: // hflex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y;                    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = c2y;                    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            x = c4x + stack.shift();      // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 37: // flex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y + stack.shift();    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = jpy + stack.shift();    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                                x = c4x + stack.shift();\n                            } else {\n                                y = c4y + stack.shift();\n                            }\n\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        default:\n                            console.log('Glyph ' + glyph.index + ': unknown operator ' + 1200 + v);\n                            stack.length = 0;\n                    }\n                    break;\n                case 14: // endchar\n                    if (stack.length > 0 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    if (open) {\n                        p.closePath();\n                        open = false;\n                    }\n\n                    break;\n                case 18: // hstemhm\n                    parseStems();\n                    break;\n                case 19: // hintmask\n                case 20: // cntrmask\n                    parseStems();\n                    i += (nStems + 7) >> 3;\n                    break;\n                case 21: // rmoveto\n                    if (stack.length > 2 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 22: // hmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 23: // vstemhm\n                    parseStems();\n                    break;\n                case 24: // rcurveline\n                    while (stack.length > 2) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    break;\n                case 25: // rlinecurve\n                    while (stack.length > 6) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    break;\n                case 26: // vvcurveto\n                    if (stack.length % 2) {\n                        x += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x;\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 27: // hhcurveto\n                    if (stack.length % 2) {\n                        y += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y;\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 28: // shortint\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                    i += 2;\n                    break;\n                case 29: // callgsubr\n                    codeIndex = stack.pop() + font.gsubrsBias;\n                    subrCode = font.gsubrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 30: // vhcurveto\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 31: // hvcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                default:\n                    if (v < 32) {\n                        console.log('Glyph ' + glyph.index + ': unknown operator ' + v);\n                    } else if (v < 247) {\n                        stack.push(v - 139);\n                    } else if (v < 251) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push((v - 247) * 256 + b1 + 108);\n                    } else if (v < 255) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push(-(v - 251) * 256 - b1 - 108);\n                    } else {\n                        b1 = code[i];\n                        b2 = code[i + 1];\n                        b3 = code[i + 2];\n                        b4 = code[i + 3];\n                        i += 4;\n                        stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                    }\n            }\n        }\n    }\n\n    parse(code);\n\n    glyph.advanceWidth = width;\n    return p;\n}\n\nfunction parseCFFFDSelect(data, start, nGlyphs, fdArrayCount) {\n    const fdSelect = [];\n    let fdIndex;\n    const parser = new parse.Parser(data, start);\n    const format = parser.parseCard8();\n    if (format === 0) {\n        // Simple list of nGlyphs elements\n        for (let iGid = 0; iGid < nGlyphs; iGid++) {\n            fdIndex = parser.parseCard8();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error('CFF table CID Font FDSelect has bad FD index value ' + fdIndex + ' (FD count ' + fdArrayCount + ')');\n            }\n            fdSelect.push(fdIndex);\n        }\n    } else if (format === 3) {\n        // Ranges\n        const nRanges = parser.parseCard16();\n        let first = parser.parseCard16();\n        if (first !== 0) {\n            throw new Error('CFF Table CID Font FDSelect format 3 range has bad initial GID ' + first);\n        }\n        let next;\n        for (let iRange = 0; iRange < nRanges; iRange++) {\n            fdIndex = parser.parseCard8();\n            next = parser.parseCard16();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error('CFF table CID Font FDSelect has bad FD index value ' + fdIndex + ' (FD count ' + fdArrayCount + ')');\n            }\n            if (next > nGlyphs) {\n                throw new Error('CFF Table CID Font FDSelect format 3 range has bad GID ' + next);\n            }\n            for (; first < next; first++) {\n                fdSelect.push(fdIndex);\n            }\n            first = next;\n        }\n        if (next !== nGlyphs) {\n            throw new Error('CFF Table CID Font FDSelect format 3 range has bad final GID ' + next);\n        }\n    } else {\n        throw new Error('CFF Table CID Font FDSelect table has unsupported format ' + format);\n    }\n    return fdSelect;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font, opt) {\n    font.tables.cff = {};\n    const header = parseCFFHeader(data, start);\n    const nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    const topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    const stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    const globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    const topDictArray = gatherCFFTopDicts(data, start, topDictIndex.objects, stringIndex.objects);\n    if (topDictArray.length !== 1) {\n        throw new Error('CFF table has too many fonts in \\'FontSet\\' - count of fonts NameIndex.length = ' + topDictArray.length);\n    }\n\n    const topDict = topDictArray[0];\n    font.tables.cff.topDict = topDict;\n\n    if (topDict._privateDict) {\n        font.defaultWidthX = topDict._privateDict.defaultWidthX;\n        font.nominalWidthX = topDict._privateDict.nominalWidthX;\n    }\n\n    if (topDict.ros[0] !== undefined && topDict.ros[1] !== undefined) {\n        font.isCIDFont = true;\n    }\n\n    if (font.isCIDFont) {\n        let fdArrayOffset = topDict.fdArray;\n        let fdSelectOffset = topDict.fdSelect;\n        if (fdArrayOffset === 0 || fdSelectOffset === 0) {\n            throw new Error('Font is marked as a CID font, but FDArray and/or FDSelect information is missing');\n        }\n        fdArrayOffset += start;\n        const fdArrayIndex = parseCFFIndex(data, fdArrayOffset);\n        const fdArray = gatherCFFTopDicts(data, start, fdArrayIndex.objects, stringIndex.objects);\n        topDict._fdArray = fdArray;\n        fdSelectOffset += start;\n        topDict._fdSelect = parseCFFFDSelect(data, fdSelectOffset, font.numGlyphs, fdArray.length);\n    }\n\n    const privateDictOffset = start + topDict.private[1];\n    const privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict.private[0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        const subrOffset = privateDictOffset + privateDict.subrs;\n        const subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    let charStringsIndex;\n    if (opt.lowMemory) {\n        charStringsIndex = parseCFFIndexLowMemory(data, start + topDict.charStrings);\n        font.nGlyphs = charStringsIndex.offsets.length;\n    } else {\n        charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n        font.nGlyphs = charStringsIndex.objects.length;\n    }\n\n    const charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) {\n        // Standard encoding\n        font.cffEncoding = new CffEncoding(cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) {\n        // Expert encoding\n        font.cffEncoding = new CffEncoding(cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = new glyphset.GlyphSet(font);\n    if (opt.lowMemory) {\n        font._push = function(i) {\n            const charString = getCffIndexObject(i, charStringsIndex.offsets, data, start + topDict.charStrings);\n            font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n        };\n    } else {\n        for (let i = 0; i < font.nGlyphs; i += 1) {\n            const charString = charStringsIndex.objects[i];\n            font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n        }\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    let sid;\n\n    // Is the string in the CFF standard strings?\n    let i = cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + cffStandardStrings.length;\n    } else {\n        sid = cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Record('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    const t = new table.Record('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (let i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    const m = {};\n    for (let i = 0; i < meta.length; i += 1) {\n        const entry = meta[i];\n        let value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    const t = new table.Record('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    const t = new table.Record('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    const t = new table.Record('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (let i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Record('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    const t = new table.Record('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (let i = 0; i < glyphNames.length; i += 1) {\n        const glyphName = glyphNames[i];\n        const glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    const ops = [];\n    const path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    let x = 0;\n    let y = 0;\n    for (let i = 0; i < path.commands.length; i += 1) {\n        let dx;\n        let dy;\n        let cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            const _13 = 1 / 3;\n            const _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            // Since all coordinates are relative, we round() them ASAP to avoid propagating errors.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: Math.round(_13 * x + _23 * cmd.x1),\n                y1: Math.round(_13 * y + _23 * cmd.y1),\n                x2: Math.round(_13 * cmd.x + _23 * cmd.x1),\n                y2: Math.round(_13 * cmd.y + _23 * cmd.y1)\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            const dx1 = Math.round(cmd.x1 - x);\n            const dy1 = Math.round(cmd.y1 - y);\n            const dx2 = Math.round(cmd.x2 - cmd.x1);\n            const dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    const t = new table.Record('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        const ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    const t = new table.Record('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    const t = new table.Table('CFF ', [\n        {name: 'header', type: 'RECORD'},\n        {name: 'nameIndex', type: 'RECORD'},\n        {name: 'topDictIndex', type: 'RECORD'},\n        {name: 'stringIndex', type: 'RECORD'},\n        {name: 'globalSubrIndex', type: 'RECORD'},\n        {name: 'charsets', type: 'RECORD'},\n        {name: 'charStringsIndex', type: 'RECORD'},\n        {name: 'privateDict', type: 'RECORD'}\n    ]);\n\n    const fontScale = 1 / options.unitsPerEm;\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    const attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        fontBBox: options.fontBBox || [0, 0, 0, 0],\n        fontMatrix: [fontScale, 0, 0, fontScale, 0, 0],\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    const privateAttrs = {};\n\n    const glyphNames = [];\n    let glyph;\n\n    // Skip first glyph (.notdef)\n    for (let i = 1; i < glyphs.length; i += 1) {\n        glyph = glyphs.get(i);\n        glyphNames.push(glyph.name);\n    }\n\n    const strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    let topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    t.privateDict = makePrivateDict(privateAttrs, strings);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    const startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexport default { parse: parseCFFTable, make: makeCFFTable };\n", "// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    const head = {};\n    const p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    // Apple Mac timestamp epoch is 01/01/1904 not 01/01/1970\n    const timestamp = Math.round(new Date().getTime() / 1000) + 2082844800;\n    let createdTimestamp = timestamp;\n\n    if (options.createdTimestamp) {\n        createdTimestamp = options.createdTimestamp + 2082844800;\n    }\n\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: createdTimestamp},\n        {name: 'modified', type: 'LONGDATETIME', value: timestamp},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHeadTable, make: makeHeadTable };\n", "// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    const hhea = {};\n    const p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHheaTable, make: makeHheaTable };\n", "// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\nfunction parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs) {\n    let advanceWidth;\n    let leftSideBearing;\n    const p = new parse.Parser(data, start);\n    for (let i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        const glyph = glyphs.get(i);\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs) {\n    font._hmtxTableData = {};\n\n    let advanceWidth;\n    let leftSideBearing;\n    const p = new parse.Parser(data, start);\n    for (let i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        font._hmtxTableData[i] = {\n            advanceWidth: advanceWidth,\n            leftSideBearing: leftSideBearing\n        };\n    }\n}\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(font, data, start, numMetrics, numGlyphs, glyphs, opt) {\n    if (opt.lowMemory)\n        parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs);\n    else\n        parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs);\n}\n\nfunction makeHmtxTable(glyphs) {\n    const t = new table.Table('hmtx', []);\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        const advanceWidth = glyph.advanceWidth || 0;\n        const leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexport default { parse: parseHmtxTable, make: makeHmtxTable };\n", "// The `ltag` table stores IETF BCP-47 language tags. It allows supporting\n// languages for which TrueType does not assign a numeric code.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6ltag.html\n// http://www.w3.org/International/articles/language-tags/\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction makeLtagTable(tags) {\n    const result = new table.Table('ltag', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'numTags', type: 'ULONG', value: tags.length}\n    ]);\n\n    let stringPool = '';\n    const stringPoolOffset = 12 + tags.length * 4;\n    for (let i = 0; i < tags.length; ++i) {\n        let pos = stringPool.indexOf(tags[i]);\n        if (pos < 0) {\n            pos = stringPool.length;\n            stringPool += tags[i];\n        }\n\n        result.fields.push({name: 'offset ' + i, type: 'USHORT', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + i, type: 'USHORT', value: tags[i].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n    return result;\n}\n\nfunction parseLtagTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported ltag table version.');\n    // The 'ltag' specification does not define any flags; skip the field.\n    p.skip('uLong', 1);\n    const numTags = p.parseULong();\n\n    const tags = [];\n    for (let i = 0; i < numTags; i++) {\n        let tag = '';\n        const offset = start + p.parseUShort();\n        const length = p.parseUShort();\n        for (let j = offset; j < offset + length; ++j) {\n            tag += String.fromCharCode(data.getInt8(j));\n        }\n\n        tags.push(tag);\n    }\n\n    return tags;\n}\n\nexport default { make: makeLtagTable, parse: parseLtagTable };\n", "// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    const maxp = {};\n    const p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexport default { parse: parseMaxpTable, make: makeMaxpTable };\n", "// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\nimport { decode, encode } from '../types';\nimport parse from '../parse';\nimport table from '../table';\n\n// NameIDs for the name table.\nconst nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'license',                // 13\n    'licenseURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\nconst macLanguages = {\n    0: 'en',\n    1: 'fr',\n    2: 'de',\n    3: 'it',\n    4: 'nl',\n    5: 'sv',\n    6: 'es',\n    7: 'da',\n    8: 'pt',\n    9: 'no',\n    10: 'he',\n    11: 'ja',\n    12: 'ar',\n    13: 'fi',\n    14: 'el',\n    15: 'is',\n    16: 'mt',\n    17: 'tr',\n    18: 'hr',\n    19: 'zh-Hant',\n    20: 'ur',\n    21: 'hi',\n    22: 'th',\n    23: 'ko',\n    24: 'lt',\n    25: 'pl',\n    26: 'hu',\n    27: 'es',\n    28: 'lv',\n    29: 'se',\n    30: 'fo',\n    31: 'fa',\n    32: 'ru',\n    33: 'zh',\n    34: 'nl-BE',\n    35: 'ga',\n    36: 'sq',\n    37: 'ro',\n    38: 'cz',\n    39: 'sk',\n    40: 'si',\n    41: 'yi',\n    42: 'sr',\n    43: 'mk',\n    44: 'bg',\n    45: 'uk',\n    46: 'be',\n    47: 'uz',\n    48: 'kk',\n    49: 'az-Cyrl',\n    50: 'az-Arab',\n    51: 'hy',\n    52: 'ka',\n    53: 'mo',\n    54: 'ky',\n    55: 'tg',\n    56: 'tk',\n    57: 'mn-CN',\n    58: 'mn',\n    59: 'ps',\n    60: 'ks',\n    61: 'ku',\n    62: 'sd',\n    63: 'bo',\n    64: 'ne',\n    65: 'sa',\n    66: 'mr',\n    67: 'bn',\n    68: 'as',\n    69: 'gu',\n    70: 'pa',\n    71: 'or',\n    72: 'ml',\n    73: 'kn',\n    74: 'ta',\n    75: 'te',\n    76: 'si',\n    77: 'my',\n    78: 'km',\n    79: 'lo',\n    80: 'vi',\n    81: 'id',\n    82: 'tl',\n    83: 'ms',\n    84: 'ms-Arab',\n    85: 'am',\n    86: 'ti',\n    87: 'om',\n    88: 'so',\n    89: 'sw',\n    90: 'rw',\n    91: 'rn',\n    92: 'ny',\n    93: 'mg',\n    94: 'eo',\n    128: 'cy',\n    129: 'eu',\n    130: 'ca',\n    131: 'la',\n    132: 'qu',\n    133: 'gn',\n    134: 'ay',\n    135: 'tt',\n    136: 'ug',\n    137: 'dz',\n    138: 'jv',\n    139: 'su',\n    140: 'gl',\n    141: 'af',\n    142: 'br',\n    143: 'iu',\n    144: 'gd',\n    145: 'gv',\n    146: 'ga',\n    147: 'to',\n    148: 'el-polyton',\n    149: 'kl',\n    150: 'az',\n    151: 'nn'\n};\n\n// MacOS language ID → MacOS script ID\n//\n// Note that the script ID is not sufficient to determine what encoding\n// to use in TrueType files. For some languages, MacOS used a modification\n// of a mainstream script. For example, an Icelandic name would be stored\n// with smRoman in the TrueType naming table, but the actual encoding\n// is a special Icelandic version of the normal Macintosh Roman encoding.\n// As another example, Inuktitut uses an 8-bit encoding for Canadian Aboriginal\n// Syllables but MacOS had run out of available script codes, so this was\n// done as a (pretty radical) \"modification\" of Ethiopic.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nconst macLanguageToScript = {\n    0: 0,  // langEnglish → smRoman\n    1: 0,  // langFrench → smRoman\n    2: 0,  // langGerman → smRoman\n    3: 0,  // langItalian → smRoman\n    4: 0,  // langDutch → smRoman\n    5: 0,  // langSwedish → smRoman\n    6: 0,  // langSpanish → smRoman\n    7: 0,  // langDanish → smRoman\n    8: 0,  // langPortuguese → smRoman\n    9: 0,  // langNorwegian → smRoman\n    10: 5,  // langHebrew → smHebrew\n    11: 1,  // langJapanese → smJapanese\n    12: 4,  // langArabic → smArabic\n    13: 0,  // langFinnish → smRoman\n    14: 6,  // langGreek → smGreek\n    15: 0,  // langIcelandic → smRoman (modified)\n    16: 0,  // langMaltese → smRoman\n    17: 0,  // langTurkish → smRoman (modified)\n    18: 0,  // langCroatian → smRoman (modified)\n    19: 2,  // langTradChinese → smTradChinese\n    20: 4,  // langUrdu → smArabic\n    21: 9,  // langHindi → smDevanagari\n    22: 21,  // langThai → smThai\n    23: 3,  // langKorean → smKorean\n    24: 29,  // langLithuanian → smCentralEuroRoman\n    25: 29,  // langPolish → smCentralEuroRoman\n    26: 29,  // langHungarian → smCentralEuroRoman\n    27: 29,  // langEstonian → smCentralEuroRoman\n    28: 29,  // langLatvian → smCentralEuroRoman\n    29: 0,  // langSami → smRoman\n    30: 0,  // langFaroese → smRoman (modified)\n    31: 4,  // langFarsi → smArabic (modified)\n    32: 7,  // langRussian → smCyrillic\n    33: 25,  // langSimpChinese → smSimpChinese\n    34: 0,  // langFlemish → smRoman\n    35: 0,  // langIrishGaelic → smRoman (modified)\n    36: 0,  // langAlbanian → smRoman\n    37: 0,  // langRomanian → smRoman (modified)\n    38: 29,  // langCzech → smCentralEuroRoman\n    39: 29,  // langSlovak → smCentralEuroRoman\n    40: 0,  // langSlovenian → smRoman (modified)\n    41: 5,  // langYiddish → smHebrew\n    42: 7,  // langSerbian → smCyrillic\n    43: 7,  // langMacedonian → smCyrillic\n    44: 7,  // langBulgarian → smCyrillic\n    45: 7,  // langUkrainian → smCyrillic (modified)\n    46: 7,  // langByelorussian → smCyrillic\n    47: 7,  // langUzbek → smCyrillic\n    48: 7,  // langKazakh → smCyrillic\n    49: 7,  // langAzerbaijani → smCyrillic\n    50: 4,  // langAzerbaijanAr → smArabic\n    51: 24,  // langArmenian → smArmenian\n    52: 23,  // langGeorgian → smGeorgian\n    53: 7,  // langMoldavian → smCyrillic\n    54: 7,  // langKirghiz → smCyrillic\n    55: 7,  // langTajiki → smCyrillic\n    56: 7,  // langTurkmen → smCyrillic\n    57: 27,  // langMongolian → smMongolian\n    58: 7,  // langMongolianCyr → smCyrillic\n    59: 4,  // langPashto → smArabic\n    60: 4,  // langKurdish → smArabic\n    61: 4,  // langKashmiri → smArabic\n    62: 4,  // langSindhi → smArabic\n    63: 26,  // langTibetan → smTibetan\n    64: 9,  // langNepali → smDevanagari\n    65: 9,  // langSanskrit → smDevanagari\n    66: 9,  // langMarathi → smDevanagari\n    67: 13,  // langBengali → smBengali\n    68: 13,  // langAssamese → smBengali\n    69: 11,  // langGujarati → smGujarati\n    70: 10,  // langPunjabi → smGurmukhi\n    71: 12,  // langOriya → smOriya\n    72: 17,  // langMalayalam → smMalayalam\n    73: 16,  // langKannada → smKannada\n    74: 14,  // langTamil → smTamil\n    75: 15,  // langTelugu → smTelugu\n    76: 18,  // langSinhalese → smSinhalese\n    77: 19,  // langBurmese → smBurmese\n    78: 20,  // langKhmer → smKhmer\n    79: 22,  // langLao → smLao\n    80: 30,  // langVietnamese → smVietnamese\n    81: 0,  // langIndonesian → smRoman\n    82: 0,  // langTagalog → smRoman\n    83: 0,  // langMalayRoman → smRoman\n    84: 4,  // langMalayArabic → smArabic\n    85: 28,  // langAmharic → smEthiopic\n    86: 28,  // langTigrinya → smEthiopic\n    87: 28,  // langOromo → smEthiopic\n    88: 0,  // langSomali → smRoman\n    89: 0,  // langSwahili → smRoman\n    90: 0,  // langKinyarwanda → smRoman\n    91: 0,  // langRundi → smRoman\n    92: 0,  // langNyanja → smRoman\n    93: 0,  // langMalagasy → smRoman\n    94: 0,  // langEsperanto → smRoman\n    128: 0,  // langWelsh → smRoman (modified)\n    129: 0,  // langBasque → smRoman\n    130: 0,  // langCatalan → smRoman\n    131: 0,  // langLatin → smRoman\n    132: 0,  // langQuechua → smRoman\n    133: 0,  // langGuarani → smRoman\n    134: 0,  // langAymara → smRoman\n    135: 7,  // langTatar → smCyrillic\n    136: 4,  // langUighur → smArabic\n    137: 26,  // langDzongkha → smTibetan\n    138: 0,  // langJavaneseRom → smRoman\n    139: 0,  // langSundaneseRom → smRoman\n    140: 0,  // langGalician → smRoman\n    141: 0,  // langAfrikaans → smRoman\n    142: 0,  // langBreton → smRoman (modified)\n    143: 28,  // langInuktitut → smEthiopic (modified)\n    144: 0,  // langScottishGaelic → smRoman (modified)\n    145: 0,  // langManxGaelic → smRoman (modified)\n    146: 0,  // langIrishGaelicScript → smRoman (modified)\n    147: 0,  // langTongan → smRoman\n    148: 6,  // langGreekAncient → smRoman\n    149: 0,  // langGreenlandic → smRoman\n    150: 0,  // langAzerbaijanRoman → smRoman\n    151: 0   // langNynorsk → smRoman\n};\n\n// While Microsoft indicates a region/country for all its language\n// IDs, we omit the region code if it's equal to the \"most likely\n// region subtag\" according to Unicode CLDR. For scripts, we omit\n// the subtag if it is equal to the Suppress-Script entry in the\n// IANA language subtag registry for IETF BCP 47.\n//\n// For example, Microsoft states that its language code 0x041A is\n// Croatian in Croatia. We transform this to the BCP 47 language code 'hr'\n// and not 'hr-HR' because Croatia is the default country for Croatian,\n// according to Unicode CLDR. As another example, Microsoft states\n// that 0x101A is Croatian (Latin) in Bosnia-Herzegovina. We transform\n// this to 'hr-BA' and not 'hr-Latn-BA' because Latin is the default script\n// for the Croatian language, according to IANA.\n//\n// http://www.unicode.org/cldr/charts/latest/supplemental/likely_subtags.html\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\nconst windowsLanguages = {\n    0x0436: 'af',\n    0x041C: 'sq',\n    0x0484: 'gsw',\n    0x045E: 'am',\n    0x1401: 'ar-DZ',\n    0x3C01: 'ar-BH',\n    0x0C01: 'ar',\n    0x0801: 'ar-IQ',\n    0x2C01: 'ar-JO',\n    0x3401: 'ar-KW',\n    0x3001: 'ar-LB',\n    0x1001: 'ar-LY',\n    0x1801: 'ary',\n    0x2001: 'ar-OM',\n    0x4001: 'ar-QA',\n    0x0401: 'ar-SA',\n    0x2801: 'ar-SY',\n    0x1C01: 'aeb',\n    0x3801: 'ar-AE',\n    0x2401: 'ar-YE',\n    0x042B: 'hy',\n    0x044D: 'as',\n    0x082C: 'az-Cyrl',\n    0x042C: 'az',\n    0x046D: 'ba',\n    0x042D: 'eu',\n    0x0423: 'be',\n    0x0845: 'bn',\n    0x0445: 'bn-IN',\n    0x201A: 'bs-Cyrl',\n    0x141A: 'bs',\n    0x047E: 'br',\n    0x0402: 'bg',\n    0x0403: 'ca',\n    0x0C04: 'zh-HK',\n    0x1404: 'zh-MO',\n    0x0804: 'zh',\n    0x1004: 'zh-SG',\n    0x0404: 'zh-TW',\n    0x0483: 'co',\n    0x041A: 'hr',\n    0x101A: 'hr-BA',\n    0x0405: 'cs',\n    0x0406: 'da',\n    0x048C: 'prs',\n    0x0465: 'dv',\n    0x0813: 'nl-BE',\n    0x0413: 'nl',\n    0x0C09: 'en-AU',\n    0x2809: 'en-BZ',\n    0x1009: 'en-CA',\n    0x2409: 'en-029',\n    0x4009: 'en-IN',\n    0x1809: 'en-IE',\n    0x2009: 'en-JM',\n    0x4409: 'en-MY',\n    0x1409: 'en-NZ',\n    0x3409: 'en-PH',\n    0x4809: 'en-SG',\n    0x1C09: 'en-ZA',\n    0x2C09: 'en-TT',\n    0x0809: 'en-GB',\n    0x0409: 'en',\n    0x3009: 'en-ZW',\n    0x0425: 'et',\n    0x0438: 'fo',\n    0x0464: 'fil',\n    0x040B: 'fi',\n    0x080C: 'fr-BE',\n    0x0C0C: 'fr-CA',\n    0x040C: 'fr',\n    0x140C: 'fr-LU',\n    0x180C: 'fr-MC',\n    0x100C: 'fr-CH',\n    0x0462: 'fy',\n    0x0456: 'gl',\n    0x0437: 'ka',\n    0x0C07: 'de-AT',\n    0x0407: 'de',\n    0x1407: 'de-LI',\n    0x1007: 'de-LU',\n    0x0807: 'de-CH',\n    0x0408: 'el',\n    0x046F: 'kl',\n    0x0447: 'gu',\n    0x0468: 'ha',\n    0x040D: 'he',\n    0x0439: 'hi',\n    0x040E: 'hu',\n    0x040F: 'is',\n    0x0470: 'ig',\n    0x0421: 'id',\n    0x045D: 'iu',\n    0x085D: 'iu-Latn',\n    0x083C: 'ga',\n    0x0434: 'xh',\n    0x0435: 'zu',\n    0x0410: 'it',\n    0x0810: 'it-CH',\n    0x0411: 'ja',\n    0x044B: 'kn',\n    0x043F: 'kk',\n    0x0453: 'km',\n    0x0486: 'quc',\n    0x0487: 'rw',\n    0x0441: 'sw',\n    0x0457: 'kok',\n    0x0412: 'ko',\n    0x0440: 'ky',\n    0x0454: 'lo',\n    0x0426: 'lv',\n    0x0427: 'lt',\n    0x082E: 'dsb',\n    0x046E: 'lb',\n    0x042F: 'mk',\n    0x083E: 'ms-BN',\n    0x043E: 'ms',\n    0x044C: 'ml',\n    0x043A: 'mt',\n    0x0481: 'mi',\n    0x047A: 'arn',\n    0x044E: 'mr',\n    0x047C: 'moh',\n    0x0450: 'mn',\n    0x0850: 'mn-CN',\n    0x0461: 'ne',\n    0x0414: 'nb',\n    0x0814: 'nn',\n    0x0482: 'oc',\n    0x0448: 'or',\n    0x0463: 'ps',\n    0x0415: 'pl',\n    0x0416: 'pt',\n    0x0816: 'pt-PT',\n    0x0446: 'pa',\n    0x046B: 'qu-BO',\n    0x086B: 'qu-EC',\n    0x0C6B: 'qu',\n    0x0418: 'ro',\n    0x0417: 'rm',\n    0x0419: 'ru',\n    0x243B: 'smn',\n    0x103B: 'smj-NO',\n    0x143B: 'smj',\n    0x0C3B: 'se-FI',\n    0x043B: 'se',\n    0x083B: 'se-SE',\n    0x203B: 'sms',\n    0x183B: 'sma-NO',\n    0x1C3B: 'sms',\n    0x044F: 'sa',\n    0x1C1A: 'sr-Cyrl-BA',\n    0x0C1A: 'sr',\n    0x181A: 'sr-Latn-BA',\n    0x081A: 'sr-Latn',\n    0x046C: 'nso',\n    0x0432: 'tn',\n    0x045B: 'si',\n    0x041B: 'sk',\n    0x0424: 'sl',\n    0x2C0A: 'es-AR',\n    0x400A: 'es-BO',\n    0x340A: 'es-CL',\n    0x240A: 'es-CO',\n    0x140A: 'es-CR',\n    0x1C0A: 'es-DO',\n    0x300A: 'es-EC',\n    0x440A: 'es-SV',\n    0x100A: 'es-GT',\n    0x480A: 'es-HN',\n    0x080A: 'es-MX',\n    0x4C0A: 'es-NI',\n    0x180A: 'es-PA',\n    0x3C0A: 'es-PY',\n    0x280A: 'es-PE',\n    0x500A: 'es-PR',\n\n    // Microsoft has defined two different language codes for\n    // “Spanish with modern sorting” and “Spanish with traditional\n    // sorting”. This makes sense for collation APIs, and it would be\n    // possible to express this in BCP 47 language tags via Unicode\n    // extensions (eg., es-u-co-trad is Spanish with traditional\n    // sorting). However, for storing names in fonts, the distinction\n    // does not make sense, so we give “es” in both cases.\n    0x0C0A: 'es',\n    0x040A: 'es',\n\n    0x540A: 'es-US',\n    0x380A: 'es-UY',\n    0x200A: 'es-VE',\n    0x081D: 'sv-FI',\n    0x041D: 'sv',\n    0x045A: 'syr',\n    0x0428: 'tg',\n    0x085F: 'tzm',\n    0x0449: 'ta',\n    0x0444: 'tt',\n    0x044A: 'te',\n    0x041E: 'th',\n    0x0451: 'bo',\n    0x041F: 'tr',\n    0x0442: 'tk',\n    0x0480: 'ug',\n    0x0422: 'uk',\n    0x042E: 'hsb',\n    0x0420: 'ur',\n    0x0843: 'uz-Cyrl',\n    0x0443: 'uz',\n    0x042A: 'vi',\n    0x0452: 'cy',\n    0x0488: 'wo',\n    0x0485: 'sah',\n    0x0478: 'ii',\n    0x046A: 'yo'\n};\n\n// Returns a IETF BCP 47 language code, for example 'zh-Hant'\n// for 'Chinese in the traditional script'.\nfunction getLanguageCode(platformID, languageID, ltag) {\n    switch (platformID) {\n        case 0:  // Unicode\n            if (languageID === 0xFFFF) {\n                return 'und';\n            } else if (ltag) {\n                return ltag[languageID];\n            }\n\n            break;\n\n        case 1:  // Macintosh\n            return macLanguages[languageID];\n\n        case 3:  // Windows\n            return windowsLanguages[languageID];\n    }\n\n    return undefined;\n}\n\nconst utf16 = 'utf-16';\n\n// MacOS script ID → encoding. This table stores the default case,\n// which can be overridden by macLanguageEncodings.\nconst macScriptEncodings = {\n    0: 'macintosh',           // smRoman\n    1: 'x-mac-japanese',      // smJapanese\n    2: 'x-mac-chinesetrad',   // smTradChinese\n    3: 'x-mac-korean',        // smKorean\n    6: 'x-mac-greek',         // smGreek\n    7: 'x-mac-cyrillic',      // smCyrillic\n    9: 'x-mac-devanagai',     // smDevanagari\n    10: 'x-mac-gurmukhi',     // smGurmukhi\n    11: 'x-mac-gujarati',     // smGujarati\n    12: 'x-mac-oriya',        // smOriya\n    13: 'x-mac-bengali',      // smBengali\n    14: 'x-mac-tamil',        // smTamil\n    15: 'x-mac-telugu',       // smTelugu\n    16: 'x-mac-kannada',      // smKannada\n    17: 'x-mac-malayalam',    // smMalayalam\n    18: 'x-mac-sinhalese',    // smSinhalese\n    19: 'x-mac-burmese',      // smBurmese\n    20: 'x-mac-khmer',        // smKhmer\n    21: 'x-mac-thai',         // smThai\n    22: 'x-mac-lao',          // smLao\n    23: 'x-mac-georgian',     // smGeorgian\n    24: 'x-mac-armenian',     // smArmenian\n    25: 'x-mac-chinesesimp',  // smSimpChinese\n    26: 'x-mac-tibetan',      // smTibetan\n    27: 'x-mac-mongolian',    // smMongolian\n    28: 'x-mac-ethiopic',     // smEthiopic\n    29: 'x-mac-ce',           // smCentralEuroRoman\n    30: 'x-mac-vietnamese',   // smVietnamese\n    31: 'x-mac-extarabic'     // smExtArabic\n};\n\n// MacOS language ID → encoding. This table stores the exceptional\n// cases, which override macScriptEncodings. For writing MacOS naming\n// tables, we need to emit a MacOS script ID. Therefore, we cannot\n// merge macScriptEncodings into macLanguageEncodings.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nconst macLanguageEncodings = {\n    15: 'x-mac-icelandic',    // langIcelandic\n    17: 'x-mac-turkish',      // langTurkish\n    18: 'x-mac-croatian',     // langCroatian\n    24: 'x-mac-ce',           // langLithuanian\n    25: 'x-mac-ce',           // langPolish\n    26: 'x-mac-ce',           // langHungarian\n    27: 'x-mac-ce',           // langEstonian\n    28: 'x-mac-ce',           // langLatvian\n    30: 'x-mac-icelandic',    // langFaroese\n    37: 'x-mac-romanian',     // langRomanian\n    38: 'x-mac-ce',           // langCzech\n    39: 'x-mac-ce',           // langSlovak\n    40: 'x-mac-ce',           // langSlovenian\n    143: 'x-mac-inuit',       // langInuktitut\n    146: 'x-mac-gaelic'       // langIrishGaelicScript\n};\n\nfunction getEncoding(platformID, encodingID, languageID) {\n    switch (platformID) {\n        case 0:  // Unicode\n            return utf16;\n\n        case 1:  // Apple Macintosh\n            return macLanguageEncodings[languageID] || macScriptEncodings[encodingID];\n\n        case 3:  // Microsoft Windows\n            if (encodingID === 1 || encodingID === 10) {\n                return utf16;\n            }\n\n            break;\n    }\n\n    return undefined;\n}\n\n// Parse the naming `name` table.\n// FIXME: Format 1 additional fields are not supported yet.\n// ltag is the content of the `ltag' table, such as ['en', 'zh-Hans', 'de-CH-1904'].\nfunction parseNameTable(data, start, ltag) {\n    const name = {};\n    const p = new parse.Parser(data, start);\n    const format = p.parseUShort();\n    const count = p.parseUShort();\n    const stringOffset = p.offset + p.parseUShort();\n    for (let i = 0; i < count; i++) {\n        const platformID = p.parseUShort();\n        const encodingID = p.parseUShort();\n        const languageID = p.parseUShort();\n        const nameID = p.parseUShort();\n        const property = nameTableNames[nameID] || nameID;\n        const byteLength = p.parseUShort();\n        const offset = p.parseUShort();\n        const language = getLanguageCode(platformID, languageID, ltag);\n        const encoding = getEncoding(platformID, encodingID, languageID);\n        if (encoding !== undefined && language !== undefined) {\n            let text;\n            if (encoding === utf16) {\n                text = decode.UTF16(data, stringOffset + offset, byteLength);\n            } else {\n                text = decode.MACSTRING(data, stringOffset + offset, byteLength, encoding);\n            }\n\n            if (text) {\n                let translations = name[property];\n                if (translations === undefined) {\n                    translations = name[property] = {};\n                }\n\n                translations[language] = text;\n            }\n        }\n    }\n\n    let langTagCount = 0;\n    if (format === 1) {\n        // FIXME: Also handle Microsoft's 'name' table 1.\n        langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\n// {23: 'foo'} → {'foo': 23}\n// ['bar', 'baz'] → {'bar': 0, 'baz': 1}\nfunction reverseDict(dict) {\n    const result = {};\n    for (let key in dict) {\n        result[dict[key]] = parseInt(key);\n    }\n\n    return result;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Record('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\n// Finds the position of needle in haystack, or -1 if not there.\n// Like String.indexOf(), but for arrays.\nfunction findSubArray(needle, haystack) {\n    const needleLength = needle.length;\n    const limit = haystack.length - needleLength + 1;\n\n    loop:\n    for (let pos = 0; pos < limit; pos++) {\n        for (; pos < limit; pos++) {\n            for (let k = 0; k < needleLength; k++) {\n                if (haystack[pos + k] !== needle[k]) {\n                    continue loop;\n                }\n            }\n\n            return pos;\n        }\n    }\n\n    return -1;\n}\n\nfunction addStringToPool(s, pool) {\n    let offset = findSubArray(s, pool);\n    if (offset < 0) {\n        offset = pool.length;\n        let i = 0;\n        const len = s.length;\n        for (; i < len; ++i) {\n            pool.push(s[i]);\n        }\n\n    }\n\n    return offset;\n}\n\nfunction makeNameTable(names, ltag) {\n    let nameID;\n    const nameIDs = [];\n\n    const namesWithNumericKeys = {};\n    const nameTableIds = reverseDict(nameTableNames);\n    for (let key in names) {\n        let id = nameTableIds[key];\n        if (id === undefined) {\n            id = key;\n        }\n\n        nameID = parseInt(id);\n\n        if (isNaN(nameID)) {\n            throw new Error('Name table entry \"' + key + '\" does not exist, see nameTableNames for complete list.');\n        }\n\n        namesWithNumericKeys[nameID] = names[key];\n        nameIDs.push(nameID);\n    }\n\n    const macLanguageIds = reverseDict(macLanguages);\n    const windowsLanguageIds = reverseDict(windowsLanguages);\n\n    const nameRecords = [];\n    const stringPool = [];\n\n    for (let i = 0; i < nameIDs.length; i++) {\n        nameID = nameIDs[i];\n        const translations = namesWithNumericKeys[nameID];\n        for (let lang in translations) {\n            const text = translations[lang];\n\n            // For MacOS, we try to emit the name in the form that was introduced\n            // in the initial version of the TrueType spec (in the late 1980s).\n            // However, this can fail for various reasons: the requested BCP 47\n            // language code might not have an old-style Mac equivalent;\n            // we might not have a codec for the needed character encoding;\n            // or the name might contain characters that cannot be expressed\n            // in the old-style Macintosh encoding. In case of failure, we emit\n            // the name in a more modern fashion (Unicode encoding with BCP 47\n            // language tags) that is recognized by MacOS 10.5, released in 2009.\n            // If fonts were only read by operating systems, we could simply\n            // emit all names in the modern form; this would be much easier.\n            // However, there are many applications and libraries that read\n            // 'name' tables directly, and these will usually only recognize\n            // the ancient form (silently skipping the unrecognized names).\n            let macPlatform = 1;  // Macintosh\n            let macLanguage = macLanguageIds[lang];\n            let macScript = macLanguageToScript[macLanguage];\n            const macEncoding = getEncoding(macPlatform, macScript, macLanguage);\n            let macName = encode.MACSTRING(text, macEncoding);\n            if (macName === undefined) {\n                macPlatform = 0;  // Unicode\n                macLanguage = ltag.indexOf(lang);\n                if (macLanguage < 0) {\n                    macLanguage = ltag.length;\n                    ltag.push(lang);\n                }\n\n                macScript = 4;  // Unicode 2.0 and later\n                macName = encode.UTF16(text);\n            }\n\n            const macNameOffset = addStringToPool(macName, stringPool);\n            nameRecords.push(makeNameRecord(macPlatform, macScript, macLanguage,\n                                            nameID, macName.length, macNameOffset));\n\n            const winLanguage = windowsLanguageIds[lang];\n            if (winLanguage !== undefined) {\n                const winName = encode.UTF16(text);\n                const winNameOffset = addStringToPool(winName, stringPool);\n                nameRecords.push(makeNameRecord(3, 1, winLanguage,\n                                                nameID, winName.length, winNameOffset));\n            }\n        }\n    }\n\n    nameRecords.sort(function(a, b) {\n        return ((a.platformID - b.platformID) ||\n                (a.encodingID - b.encodingID) ||\n                (a.languageID - b.languageID) ||\n                (a.nameID - b.nameID));\n    });\n\n    const t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: nameRecords.length},\n        {name: 'stringOffset', type: 'USHORT', value: 6 + nameRecords.length * 12}\n    ]);\n\n    for (let r = 0; r < nameRecords.length; r++) {\n        t.fields.push({name: 'record_' + r, type: 'RECORD', value: nameRecords[r]});\n    }\n\n    t.fields.push({name: 'strings', type: 'LITERAL', value: stringPool});\n    return t;\n}\n\nexport default { parse: parseNameTable, make: makeNameTable };\n", "// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\nconst unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (let i = 0; i < unicodeRanges.length; i += 1) {\n        const range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    const os2 = {};\n    const p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (let i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseOS2Table, make: makeOS2Table, unicodeRanges, getUnicodeRange };\n", "// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\nimport { standardNames } from '../encoding';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    const post = {};\n    const p = new parse.Parser(data, start);\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n        case 1:\n            post.names = standardNames.slice();\n            break;\n        case 2:\n            post.numberOfGlyphs = p.parseUShort();\n            post.glyphNameIndex = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                post.glyphNameIndex[i] = p.parseUShort();\n            }\n\n            post.names = [];\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] >= standardNames.length) {\n                    const nameLength = p.parseChar();\n                    post.names.push(p.parseString(nameLength));\n                }\n            }\n\n            break;\n        case 2.5:\n            post.numberOfGlyphs = p.parseUShort();\n            post.offset = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                post.offset[i] = p.parseChar();\n            }\n\n            break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexport default { parse: parsePostTable, make: makePostTable };\n", "// The `GSUB` table contains ligatures, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\n\nimport check from '../check';\nimport { Parser } from '../parse';\nimport table from '../table';\n\nconst subtableParsers = new Array(9);         // subtableParsers[0] is unused\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#SS\nsubtableParsers[1] = function parseLookup1() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            deltaGlyphId: this.parseUShort()\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            substitute: this.parseOffset16List()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 1 format must be 1 or 2.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#MS\nsubtableParsers[2] = function parseLookup2() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Multiple Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        sequences: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#AS\nsubtableParsers[3] = function parseLookup3() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Alternate Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        alternateSets: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#LS\nsubtableParsers[4] = function parseLookup4() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB ligature table identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        ligatureSets: this.parseListOfLists(function() {\n            return {\n                ligGlyph: this.parseUShort(),\n                components: this.parseUShortList(this.parseUShort() - 1)\n            };\n        })\n    };\n};\n\nconst lookupRecordDesc = {\n    sequenceIndex: Parser.uShort,\n    lookupListIndex: Parser.uShort\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CSF\nsubtableParsers[5] = function parseLookup5() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n\n    if (substFormat === 1) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            ruleSets: this.parseListOfLists(function() {\n                const glyphCount = this.parseUShort();\n                const substCount = this.parseUShort();\n                return {\n                    input: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            classDef: this.parsePointer(Parser.classDef),\n            classSets: this.parseListOfLists(function() {\n                const glyphCount = this.parseUShort();\n                const substCount = this.parseUShort();\n                return {\n                    classes: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        const glyphCount = this.parseUShort();\n        const substCount = this.parseUShort();\n        return {\n            substFormat: substFormat,\n            coverages: this.parseList(glyphCount, Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 5 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CC\nsubtableParsers[6] = function parseLookup6() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            chainRuleSets: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            backtrackClassDef: this.parsePointer(Parser.classDef),\n            inputClassDef: this.parsePointer(Parser.classDef),\n            lookaheadClassDef: this.parsePointer(Parser.classDef),\n            chainClassSet: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        return {\n            substFormat: 3,\n            backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            inputCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 6 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#ES\nsubtableParsers[7] = function parseLookup7() {\n    // Extension Substitution subtable\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Extension Substitution subtable identifier-format must be 1');\n    const extensionLookupType = this.parseUShort();\n    const extensionParser = new Parser(this.data, this.offset + this.parseULong());\n    return {\n        substFormat: 1,\n        lookupType: extensionLookupType,\n        extension: subtableParsers[extensionLookupType].call(extensionParser)\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#RCCS\nsubtableParsers[8] = function parseLookup8() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        substitutes: this.parseUShortList()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\nfunction parseGsubTable(data, start) {\n    start = start || 0;\n    const p = new Parser(data, start);\n    const tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.1, 'Unsupported GSUB table version.');\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers)\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n            variations: p.parseFeatureVariationsList()\n        };\n    }\n\n}\n\n// GSUB Writing //////////////////////////////////////////////\nconst subtableMakers = new Array(9);\n\nsubtableMakers[1] = function makeLookup1(subtable) {\n    if (subtable.substFormat === 1) {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 1},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)},\n            {name: 'deltaGlyphID', type: 'USHORT', value: subtable.deltaGlyphId}\n        ]);\n    } else {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 2},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n        ].concat(table.ushortList('substitute', subtable.substitute)));\n    }\n    check.fail('Lookup type 1 substFormat must be 1 or 2.');\n};\n\nsubtableMakers[2] = function makeLookup2(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 2 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('seqSet', subtable.sequences, function(sequenceSet) {\n        return new table.Table('sequenceSetTable', table.ushortList('sequence', sequenceSet));\n    })));\n};\n\nsubtableMakers[3] = function makeLookup3(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 3 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('altSet', subtable.alternateSets, function(alternateSet) {\n        return new table.Table('alternateSetTable', table.ushortList('alternate', alternateSet));\n    })));\n};\n\nsubtableMakers[4] = function makeLookup4(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 4 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('ligSet', subtable.ligatureSets, function(ligatureSet) {\n        return new table.Table('ligatureSetTable', table.tableList('ligature', ligatureSet, function(ligature) {\n            return new table.Table('ligatureTable',\n                [{name: 'ligGlyph', type: 'USHORT', value: ligature.ligGlyph}]\n                .concat(table.ushortList('component', ligature.components, ligature.components.length + 1))\n            );\n        }));\n    })));\n};\n\nsubtableMakers[6] = function makeLookup6(subtable) {\n    if (subtable.substFormat === 1) {\n        let returnTable = new table.Table('chainContextTable', [\n            {name: 'substFormat', type: 'USHORT', value: subtable.substFormat},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n        ].concat(table.tableList('chainRuleSet', subtable.chainRuleSets, function(chainRuleSet) {\n            return new table.Table('chainRuleSetTable', table.tableList('chainRule', chainRuleSet, function(chainRule) {\n                let tableData = table.ushortList('backtrackGlyph', chainRule.backtrack, chainRule.backtrack.length)\n                    .concat(table.ushortList('inputGlyph', chainRule.input, chainRule.input.length + 1))\n                    .concat(table.ushortList('lookaheadGlyph', chainRule.lookahead, chainRule.lookahead.length))\n                    .concat(table.ushortList('substitution', [], chainRule.lookupRecords.length));\n\n                chainRule.lookupRecords.forEach((record, i) => {\n                    tableData = tableData\n                        .concat({name: 'sequenceIndex' + i, type: 'USHORT', value: record.sequenceIndex})\n                        .concat({name: 'lookupListIndex' + i, type: 'USHORT', value: record.lookupListIndex});\n                });\n                return new table.Table('chainRuleTable', tableData);\n            }));\n        })));\n        return returnTable;\n    } else if (subtable.substFormat === 2) {\n        check.assert(false, 'lookup type 6 format 2 is not yet supported.');\n    } else if (subtable.substFormat === 3) {\n        let tableData = [\n            {name: 'substFormat', type: 'USHORT', value: subtable.substFormat},\n        ];\n\n        tableData.push({name: 'backtrackGlyphCount', type: 'USHORT', value: subtable.backtrackCoverage.length});\n        subtable.backtrackCoverage.forEach((coverage, i) => {\n            tableData.push({name: 'backtrackCoverage' + i, type: 'TABLE', value: new table.Coverage(coverage)});\n        });\n        tableData.push({name: 'inputGlyphCount', type: 'USHORT', value: subtable.inputCoverage.length});\n        subtable.inputCoverage.forEach((coverage, i) => {\n            tableData.push({name: 'inputCoverage' + i, type: 'TABLE', value: new table.Coverage(coverage)});\n        });\n        tableData.push({name: 'lookaheadGlyphCount', type: 'USHORT', value: subtable.lookaheadCoverage.length});\n        subtable.lookaheadCoverage.forEach((coverage, i) => {\n            tableData.push({name: 'lookaheadCoverage' + i, type: 'TABLE', value: new table.Coverage(coverage)});\n        });\n\n        tableData.push({name: 'substitutionCount', type: 'USHORT', value: subtable.lookupRecords.length});\n        subtable.lookupRecords.forEach((record, i) => {\n            tableData = tableData\n                .concat({name: 'sequenceIndex' + i, type: 'USHORT', value: record.sequenceIndex})\n                .concat({name: 'lookupListIndex' + i, type: 'USHORT', value: record.lookupListIndex});\n        });\n\n        let returnTable = new table.Table('chainContextTable', tableData);\n\n        return returnTable;\n    }\n\n    check.assert(false, 'lookup type 6 format must be 1, 2 or 3.');\n};\n\nfunction makeGsubTable(gsub) {\n    return new table.Table('GSUB', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gsub.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gsub.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gsub.lookups, subtableMakers)}\n    ]);\n}\n\nexport default { parse: parseGsubTable, make: makeGsubTable };\n", "// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\nimport check from '../check';\nimport { decode } from '../types';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the metadata `meta` table.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6meta.html\nfunction parseMetaTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported META table version.');\n    p.parseULong(); // flags - currently unused and set to 0\n    p.parseULong(); // tableOffset\n    const numDataMaps = p.parseULong();\n\n    const tags = {};\n    for (let i = 0; i < numDataMaps; i++) {\n        const tag = p.parseTag();\n        const dataOffset = p.parseULong();\n        const dataLength = p.parseULong();\n        const text = decode.UTF8(data, start + dataOffset, dataLength);\n\n        tags[tag] = text;\n    }\n    return tags;\n}\n\nfunction makeMetaTable(tags) {\n    const numTags = Object.keys(tags).length;\n    let stringPool = '';\n    const stringPoolOffset = 16 + numTags * 12;\n\n    const result = new table.Table('meta', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'offset', type: 'ULONG', value: stringPoolOffset},\n        {name: 'numTags', type: 'ULONG', value: numTags}\n    ]);\n\n    for (let tag in tags) {\n        const pos = stringPool.length;\n        stringPool += tags[tag];\n\n        result.fields.push({name: 'tag ' + tag, type: 'TAG', value: tag});\n        result.fields.push({name: 'offset ' + tag, type: 'ULONG', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + tag, type: 'ULONG', value: tags[tag].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n\n    return result;\n}\n\nexport default { parse: parseMetaTable, make: makeMetaTable };\n", "// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\nimport check from '../check';\nimport table from '../table';\n\nimport cmap from './cmap';\nimport cff from './cff';\nimport head from './head';\nimport hhea from './hhea';\nimport hmtx from './hmtx';\nimport ltag from './ltag';\nimport maxp from './maxp';\nimport _name from './name';\nimport os2 from './os2';\nimport post from './post';\nimport gsub from './gsub';\nimport meta from './meta';\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    let sum = 0;\n    for (let i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Record('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    const sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    const highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    const recordFields = [];\n    const tableFields = [];\n\n    let offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (let i = 0; i < tables.length; i += 1) {\n        const t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        const tableLength = t.sizeOf();\n        const tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'RECORD', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'RECORD', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (let i = 0; i < chars.length; i += 1) {\n        const glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            const glyph = font.glyphs.get(glyphIndex);\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    let sum = 0;\n    for (let i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    const xMins = [];\n    const yMins = [];\n    const xMaxs = [];\n    const yMaxs = [];\n    const advanceWidths = [];\n    const leftSideBearings = [];\n    const rightSideBearings = [];\n    let firstCharIndex;\n    let lastCharIndex = 0;\n    let ulUnicodeRange1 = 0;\n    let ulUnicodeRange2 = 0;\n    let ulUnicodeRange3 = 0;\n    let ulUnicodeRange4 = 0;\n\n    for (let i = 0; i < font.glyphs.length; i += 1) {\n        const glyph = font.glyphs.get(i);\n        const unicode = glyph.unicode | 0;\n\n        if (isNaN(glyph.advanceWidth)) {\n            throw new Error('Glyph ' + glyph.name + ' (' + i + '): advanceWidth is not a number.');\n        }\n\n        if (firstCharIndex > unicode || firstCharIndex === undefined) {\n            // ignore .notdef char\n            if (unicode > 0) {\n                firstCharIndex = unicode;\n            }\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        const position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        const metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    const globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender;\n    globals.descender = font.descender;\n\n    const headTable = head.make({\n        flags: 3, // 00000011 (baseline for font at y=0; left sidebearing point at x=0)\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax,\n        lowestRecPPEM: 3,\n        createdTimestamp: font.createdTimestamp\n    });\n\n    const hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    const maxpTable = maxp.make(font.glyphs.length);\n\n    const os2Table = os2.make(Object.assign({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.yMax,\n        usWinDescent: Math.abs(globals.yMin),\n        ulCodePageRange1: 1, // FIXME: hard-code Latin 1 support for now\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: Math.round(globals.ascender / 2)}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usDefaultChar: font.hasChar(' ') ? 32 : 0, // Use space as the default character, if available.\n        usBreakChar: font.hasChar(' ') ? 32 : 0, // Use space as the break character, if available.\n    }, font.tables.os2));\n\n    const hmtxTable = hmtx.make(font.glyphs);\n    const cmapTable = cmap.make(font.glyphs);\n\n    const englishFamilyName = font.getEnglishName('fontFamily');\n    const englishStyleName = font.getEnglishName('fontSubfamily');\n    const englishFullName = englishFamilyName + ' ' + englishStyleName;\n    let postScriptName = font.getEnglishName('postScriptName');\n    if (!postScriptName) {\n        postScriptName = englishFamilyName.replace(/\\s/g, '') + '-' + englishStyleName;\n    }\n\n    const names = {};\n    for (let n in font.names) {\n        names[n] = font.names[n];\n    }\n\n    if (!names.uniqueID) {\n        names.uniqueID = {en: font.getEnglishName('manufacturer') + ':' + englishFullName};\n    }\n\n    if (!names.postScriptName) {\n        names.postScriptName = {en: postScriptName};\n    }\n\n    if (!names.preferredFamily) {\n        names.preferredFamily = font.names.fontFamily;\n    }\n\n    if (!names.preferredSubfamily) {\n        names.preferredSubfamily = font.names.fontSubfamily;\n    }\n\n    const languageTags = [];\n    const nameTable = _name.make(names, languageTags);\n    const ltagTable = (languageTags.length > 0 ? ltag.make(languageTags) : undefined);\n\n    const postTable = post.make();\n    const cffTable = cff.make(font.glyphs, {\n        version: font.getEnglishName('version'),\n        fullName: englishFullName,\n        familyName: englishFamilyName,\n        weightName: englishStyleName,\n        postScriptName: postScriptName,\n        unitsPerEm: font.unitsPerEm,\n        fontBBox: [0, globals.yMin, globals.ascender, globals.advanceWidthMax]\n    });\n\n    const metaTable = (font.metas && Object.keys(font.metas).length > 0) ? meta.make(font.metas) : undefined;\n\n    // The order does not matter because makeSfntTable() will sort them.\n    const tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n    if (ltagTable) {\n        tables.push(ltagTable);\n    }\n    // Optional tables\n    if (font.tables.gsub) {\n        tables.push(gsub.make(font.tables.gsub));\n    }\n    if (metaTable) {\n        tables.push(metaTable);\n    }\n\n    const sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    const bytes = sfntTable.encode();\n    const checkSum = computeCheckSum(bytes);\n    const tableFields = sfntTable.fields;\n    let checkSumAdjusted = false;\n    for (let i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexport default { make: makeSfntTable, fontToTable: fontToSfntTable, computeCheckSum };\n", "// The Layout object is the prototype of Substitution objects, and provides\n// utility methods to manipulate common layout tables (GPOS, GSUB, GDEF...)\n\nimport check from './check';\n\nfunction searchTag(arr, tag) {\n    /* jshint bitwise: false */\n    let imin = 0;\n    let imax = arr.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        const val = arr[imid].tag;\n        if (val === tag) {\n            return imid;\n        } else if (val < tag) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\nfunction binSearch(arr, value) {\n    /* jshint bitwise: false */\n    let imin = 0;\n    let imax = arr.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        const val = arr[imid];\n        if (val === value) {\n            return imid;\n        } else if (val < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\n// binary search in a list of ranges (coverage, class definition)\nfunction searchRange(ranges, value) {\n    // jshint bitwise: false\n    let range;\n    let imin = 0;\n    let imax = ranges.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        range = ranges[imid];\n        const start = range.start;\n        if (start === value) {\n            return range;\n        } else if (start < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    if (imin > 0) {\n        range = ranges[imin - 1];\n        if (value > range.end) return 0;\n        return range;\n    }\n}\n\n/**\n * @exports opentype.Layout\n * @class\n */\nfunction Layout(font, tableName) {\n    this.font = font;\n    this.tableName = tableName;\n}\n\nLayout.prototype = {\n\n    /**\n     * Binary search an object by \"tag\" property\n     * @instance\n     * @function searchTag\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {string} tag\n     * @return {number}\n     */\n    searchTag: searchTag,\n\n    /**\n     * Binary search in a list of numbers\n     * @instance\n     * @function binSearch\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {number} value\n     * @return {number}\n     */\n    binSearch: binSearch,\n\n    /**\n     * Get or create the Layout table (GSUB, GPOS etc).\n     * @param  {boolean} create - Whether to create a new one.\n     * @return {Object} The GSUB or GPOS table.\n     */\n    getTable: function(create) {\n        let layout = this.font.tables[this.tableName];\n        if (!layout && create) {\n            layout = this.font.tables[this.tableName] = this.createDefaultTable();\n        }\n        return layout;\n    },\n\n    /**\n     * Returns all scripts in the substitution table.\n     * @instance\n     * @return {Array}\n     */\n    getScriptNames: function() {\n        let layout = this.getTable();\n        if (!layout) { return []; }\n        return layout.scripts.map(function(script) {\n            return script.tag;\n        });\n    },\n\n    /**\n     * Returns the best bet for a script name.\n     * Returns 'DFLT' if it exists.\n     * If not, returns 'latn' if it exists.\n     * If neither exist, returns undefined.\n     */\n    getDefaultScriptName: function() {\n        let layout = this.getTable();\n        if (!layout) { return; }\n        let hasLatn = false;\n        for (let i = 0; i < layout.scripts.length; i++) {\n            const name = layout.scripts[i].tag;\n            if (name === 'DFLT') return name;\n            if (name === 'latn') hasLatn = true;\n        }\n        if (hasLatn) return 'latn';\n    },\n\n    /**\n     * Returns all LangSysRecords in the given script.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {boolean} create - forces the creation of this script table if it doesn't exist.\n     * @return {Object} An object with tag and script properties.\n     */\n    getScriptTable: function(script, create) {\n        const layout = this.getTable(create);\n        if (layout) {\n            script = script || 'DFLT';\n            const scripts = layout.scripts;\n            const pos = searchTag(layout.scripts, script);\n            if (pos >= 0) {\n                return scripts[pos].script;\n            } else if (create) {\n                const scr = {\n                    tag: script,\n                    script: {\n                        defaultLangSys: {reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: []},\n                        langSysRecords: []\n                    }\n                };\n                scripts.splice(-1 - pos, 0, scr);\n                return scr.script;\n            }\n        }\n    },\n\n    /**\n     * Returns a language system table\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {boolean} create - forces the creation of this langSysTable if it doesn't exist.\n     * @return {Object}\n     */\n    getLangSysTable: function(script, language, create) {\n        const scriptTable = this.getScriptTable(script, create);\n        if (scriptTable) {\n            if (!language || language === 'dflt' || language === 'DFLT') {\n                return scriptTable.defaultLangSys;\n            }\n            const pos = searchTag(scriptTable.langSysRecords, language);\n            if (pos >= 0) {\n                return scriptTable.langSysRecords[pos].langSys;\n            } else if (create) {\n                const langSysRecord = {\n                    tag: language,\n                    langSys: {reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: []}\n                };\n                scriptTable.langSysRecords.splice(-1 - pos, 0, langSysRecord);\n                return langSysRecord.langSys;\n            }\n        }\n    },\n\n    /**\n     * Get a specific feature table.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - One of the codes listed at https://www.microsoft.com/typography/OTSPEC/featurelist.htm\n     * @param {boolean} create - forces the creation of the feature table if it doesn't exist.\n     * @return {Object}\n     */\n    getFeatureTable: function(script, language, feature, create) {\n        const langSysTable = this.getLangSysTable(script, language, create);\n        if (langSysTable) {\n            let featureRecord;\n            const featIndexes = langSysTable.featureIndexes;\n            const allFeatures = this.font.tables[this.tableName].features;\n            // The FeatureIndex array of indices is in arbitrary order,\n            // even if allFeatures is sorted alphabetically by feature tag.\n            for (let i = 0; i < featIndexes.length; i++) {\n                featureRecord = allFeatures[featIndexes[i]];\n                if (featureRecord.tag === feature) {\n                    return featureRecord.feature;\n                }\n            }\n            if (create) {\n                const index = allFeatures.length;\n                // Automatic ordering of features would require to shift feature indexes in the script list.\n                check.assert(index === 0 || feature >= allFeatures[index - 1].tag, 'Features must be added in alphabetical order.');\n                featureRecord = {\n                    tag: feature,\n                    feature: { params: 0, lookupListIndexes: [] }\n                };\n                allFeatures.push(featureRecord);\n                featIndexes.push(index);\n                return featureRecord.feature;\n            }\n        }\n    },\n\n    /**\n     * Get the lookup tables of a given type for a script/language/feature.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - 4-letter feature code\n     * @param {number} lookupType - 1 to 9\n     * @param {boolean} create - forces the creation of the lookup table if it doesn't exist, with no subtables.\n     * @return {Object[]}\n     */\n    getLookupTables: function(script, language, feature, lookupType, create) {\n        const featureTable = this.getFeatureTable(script, language, feature, create);\n        const tables = [];\n        if (featureTable) {\n            let lookupTable;\n            const lookupListIndexes = featureTable.lookupListIndexes;\n            const allLookups = this.font.tables[this.tableName].lookups;\n            // lookupListIndexes are in no particular order, so use naive search.\n            for (let i = 0; i < lookupListIndexes.length; i++) {\n                lookupTable = allLookups[lookupListIndexes[i]];\n                if (lookupTable.lookupType === lookupType) {\n                    tables.push(lookupTable);\n                }\n            }\n            if (tables.length === 0 && create) {\n                lookupTable = {\n                    lookupType: lookupType,\n                    lookupFlag: 0,\n                    subtables: [],\n                    markFilteringSet: undefined\n                };\n                const index = allLookups.length;\n                allLookups.push(lookupTable);\n                lookupListIndexes.push(index);\n                return [lookupTable];\n            }\n        }\n        return tables;\n    },\n\n    /**\n     * Find a glyph in a class definition table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#class-definition-table\n     * @param {object} classDefTable - an OpenType Layout class definition table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getGlyphClass: function(classDefTable, glyphIndex) {\n        switch (classDefTable.format) {\n            case 1:\n                if (classDefTable.startGlyph <= glyphIndex && glyphIndex < classDefTable.startGlyph + classDefTable.classes.length) {\n                    return classDefTable.classes[glyphIndex - classDefTable.startGlyph];\n                }\n                return 0;\n            case 2:\n                const range = searchRange(classDefTable.ranges, glyphIndex);\n                return range ? range.classId : 0;\n        }\n    },\n\n    /**\n     * Find a glyph in a coverage table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#coverage-table\n     * @param {object} coverageTable - an OpenType Layout coverage table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getCoverageIndex: function(coverageTable, glyphIndex) {\n        switch (coverageTable.format) {\n            case 1:\n                const index = binSearch(coverageTable.glyphs, glyphIndex);\n                return index >= 0 ? index : -1;\n            case 2:\n                const range = searchRange(coverageTable.ranges, glyphIndex);\n                return range ? range.index + glyphIndex - range.start : -1;\n        }\n    },\n\n    /**\n     * Returns the list of glyph indexes of a coverage table.\n     * Format 1: the list is stored raw\n     * Format 2: compact list as range records.\n     * @instance\n     * @param  {Object} coverageTable\n     * @return {Array}\n     */\n    expandCoverage: function(coverageTable) {\n        if (coverageTable.format === 1) {\n            return coverageTable.glyphs;\n        } else {\n            const glyphs = [];\n            const ranges = coverageTable.ranges;\n            for (let i = 0; i < ranges.length; i++) {\n                const range = ranges[i];\n                const start = range.start;\n                const end = range.end;\n                for (let j = start; j <= end; j++) {\n                    glyphs.push(j);\n                }\n            }\n            return glyphs;\n        }\n    }\n\n};\n\nexport default Layout;\n", "// The Position object provides utility methods to manipulate\n// the GPOS position table.\n\nimport Layout from './layout';\n\n/**\n * @exports opentype.Position\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Position(font) {\n    Layout.call(this, font, 'gpos');\n}\n\nPosition.prototype = Layout.prototype;\n\n/**\n * Init some data for faster and easier access later.\n */\nPosition.prototype.init = function() {\n    const script = this.getDefaultScriptName();\n    this.defaultKerningTables = this.getKerningTables(script);\n};\n\n/**\n * Find a glyph pair in a list of lookup tables of type 2 and retrieve the xAdvance kerning value.\n *\n * @param {integer} leftIndex - left glyph index\n * @param {integer} rightIndex - right glyph index\n * @returns {integer}\n */\nPosition.prototype.getKerningValue = function(kerningLookups, leftIndex, rightIndex) {\n    for (let i = 0; i < kerningLookups.length; i++) {\n        const subtables = kerningLookups[i].subtables;\n        for (let j = 0; j < subtables.length; j++) {\n            const subtable = subtables[j];\n            const covIndex = this.getCoverageIndex(subtable.coverage, leftIndex);\n            if (covIndex < 0) continue;\n            switch (subtable.posFormat) {\n                case 1:\n                    // Search Pair Adjustment Positioning Format 1\n                    let pairSet = subtable.pairSets[covIndex];\n                    for (let k = 0; k < pairSet.length; k++) {\n                        let pair = pairSet[k];\n                        if (pair.secondGlyph === rightIndex) {\n                            return pair.value1 && pair.value1.xAdvance || 0;\n                        }\n                    }\n                    break;      // left glyph found, not right glyph - try next subtable\n                case 2:\n                    // Search Pair Adjustment Positioning Format 2\n                    const class1 = this.getGlyphClass(subtable.classDef1, leftIndex);\n                    const class2 = this.getGlyphClass(subtable.classDef2, rightIndex);\n                    const pair = subtable.classRecords[class1][class2];\n                    return pair.value1 && pair.value1.xAdvance || 0;\n            }\n        }\n    }\n    return 0;\n};\n\n/**\n * List all kerning lookup tables.\n *\n * @param {string} [script='DFLT'] - use font.position.getDefaultScriptName() for a better default value\n * @param {string} [language='dflt']\n * @return {object[]} The list of kerning lookup tables (may be empty), or undefined if there is no GPOS table (and we should use the kern table)\n */\nPosition.prototype.getKerningTables = function(script, language) {\n    if (this.font.tables.gpos) {\n        return this.getLookupTables(script, language, 'kern', 2);\n    }\n};\n\nexport default Position;\n", "// The Substitution object provides utility methods to manipulate\n// the GSUB substitution table.\n\nimport check from './check';\nimport Layout from './layout';\n\n/**\n * @exports opentype.Substitution\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Substitution(font) {\n    Layout.call(this, font, 'gsub');\n}\n\n// Check if 2 arrays of primitives are equal.\nfunction arraysEqual(ar1, ar2) {\n    const n = ar1.length;\n    if (n !== ar2.length) { return false; }\n    for (let i = 0; i < n; i++) {\n        if (ar1[i] !== ar2[i]) { return false; }\n    }\n    return true;\n}\n\n// Find the first subtable of a lookup table in a particular format.\nfunction getSubstFormat(lookupTable, format, defaultSubtable) {\n    const subtables = lookupTable.subtables;\n    for (let i = 0; i < subtables.length; i++) {\n        const subtable = subtables[i];\n        if (subtable.substFormat === format) {\n            return subtable;\n        }\n    }\n    if (defaultSubtable) {\n        subtables.push(defaultSubtable);\n        return defaultSubtable;\n    }\n    return undefined;\n}\n\nSubstitution.prototype = Layout.prototype;\n\n/**\n * Create a default GSUB table.\n * @return {Object} gsub - The GSUB table.\n */\nSubstitution.prototype.createDefaultTable = function() {\n    // Generate a default empty GSUB table with just a DFLT script and dflt lang sys.\n    return {\n        version: 1,\n        scripts: [{\n            tag: 'DFLT',\n            script: {\n                defaultLangSys: { reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: [] },\n                langSysRecords: []\n            }\n        }],\n        features: [],\n        lookups: []\n    };\n};\n\n/**\n * List all single substitutions (lookup type 1) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt', 'ss01'...)\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getSingle = function(feature, script, language) {\n    const substitutions = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 1);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            let j;\n            if (subtable.substFormat === 1) {\n                const delta = subtable.deltaGlyphId;\n                for (j = 0; j < glyphs.length; j++) {\n                    const glyph = glyphs[j];\n                    substitutions.push({ sub: glyph, by: glyph + delta });\n                }\n            } else {\n                const substitute = subtable.substitute;\n                for (j = 0; j < glyphs.length; j++) {\n                    substitutions.push({ sub: glyphs[j], by: substitute[j] });\n                }\n            }\n        }\n    }\n    return substitutions;\n};\n\n/**\n * List all multiple substitutions (lookup type 2) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('ccmp', 'stch')\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getMultiple = function(feature, script, language) {\n    const substitutions = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 2);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            let j;\n\n            for (j = 0; j < glyphs.length; j++) {\n                const glyph = glyphs[j];\n                const replacements = subtable.sequences[j];\n                substitutions.push({ sub: glyph, by: replacements });\n            }\n        }\n    }\n    return substitutions;\n};\n\n/**\n * List all alternates (lookup type 3) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt'...)\n * @return {Array} alternates - The list of alternates\n */\nSubstitution.prototype.getAlternates = function(feature, script, language) {\n    const alternates = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 3);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            const alternateSets = subtable.alternateSets;\n            for (let j = 0; j < glyphs.length; j++) {\n                alternates.push({ sub: glyphs[j], by: alternateSets[j] });\n            }\n        }\n    }\n    return alternates;\n};\n\n/**\n * List all ligatures (lookup type 4) for a given script, language, and feature.\n * The result is an array of ligature objects like { sub: [ids], by: id }\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} ligatures - The list of ligatures.\n */\nSubstitution.prototype.getLigatures = function(feature, script, language) {\n    const ligatures = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 4);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            const ligatureSets = subtable.ligatureSets;\n            for (let j = 0; j < glyphs.length; j++) {\n                const startGlyph = glyphs[j];\n                const ligSet = ligatureSets[j];\n                for (let k = 0; k < ligSet.length; k++) {\n                    const lig = ligSet[k];\n                    ligatures.push({\n                        sub: [startGlyph].concat(lig.components),\n                        by: lig.ligGlyph\n                    });\n                }\n            }\n        }\n    }\n    return ligatures;\n};\n\n/**\n * Add or modify a single substitution (lookup type 1)\n * Format 2, more flexible, is always used.\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, by: id } (format 1 is not supported)\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addSingle = function(feature, substitution, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 1, true)[0];\n    const subtable = getSubstFormat(lookupTable, 2, {                // lookup type 1 subtable, format 2, coverage format 1\n        substFormat: 2,\n        coverage: {format: 1, glyphs: []},\n        substitute: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Single: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.substitute.splice(pos, 0, 0);\n    }\n    subtable.substitute[pos] = substitution.by;\n};\n\n/**\n * Add or modify a multiple substitution (lookup type 2)\n * @param {string} feature - 4-letter feature name ('ccmp', 'stch')\n * @param {Object} substitution - { sub: id, by: [id] } for format 2.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addMultiple = function(feature, substitution, script, language) {\n    check.assert(substitution.by instanceof Array && substitution.by.length > 1, 'Multiple: \"by\" must be an array of two or more ids');\n    const lookupTable = this.getLookupTables(script, language, feature, 2, true)[0];\n    const subtable = getSubstFormat(lookupTable, 1, {                // lookup type 2 subtable, format 1, coverage format 1\n        substFormat: 1,\n        coverage: {format: 1, glyphs: []},\n        sequences: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Multiple: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.sequences.splice(pos, 0, 0);\n    }\n    subtable.sequences[pos] = substitution.by;\n};\n\n/**\n * Add or modify an alternate substitution (lookup type 3)\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, by: [ids] }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addAlternate = function(feature, substitution, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 3, true)[0];\n    const subtable = getSubstFormat(lookupTable, 1, {                // lookup type 3 subtable, format 1, coverage format 1\n        substFormat: 1,\n        coverage: {format: 1, glyphs: []},\n        alternateSets: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Alternate: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.alternateSets.splice(pos, 0, 0);\n    }\n    subtable.alternateSets[pos] = substitution.by;\n};\n\n/**\n * Add a ligature (lookup type 4)\n * Ligatures with more components must be stored ahead of those with fewer components in order to be found\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} ligature - { sub: [ids], by: id }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addLigature = function(feature, ligature, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 4, true)[0];\n    let subtable = lookupTable.subtables[0];\n    if (!subtable) {\n        subtable = {                // lookup type 4 subtable, format 1, coverage format 1\n            substFormat: 1,\n            coverage: { format: 1, glyphs: [] },\n            ligatureSets: []\n        };\n        lookupTable.subtables[0] = subtable;\n    }\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = ligature.sub[0];\n    const ligComponents = ligature.sub.slice(1);\n    const ligatureTable = {\n        ligGlyph: ligature.by,\n        components: ligComponents\n    };\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos >= 0) {\n        // ligatureSet already exists\n        const ligatureSet = subtable.ligatureSets[pos];\n        for (let i = 0; i < ligatureSet.length; i++) {\n            // If ligature already exists, return.\n            if (arraysEqual(ligatureSet[i].components, ligComponents)) {\n                return;\n            }\n        }\n        // ligature does not exist: add it.\n        ligatureSet.push(ligatureTable);\n    } else {\n        // Create a new ligatureSet and add coverage for the first glyph.\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.ligatureSets.splice(pos, 0, [ligatureTable]);\n    }\n};\n\n/**\n * List all feature data for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getFeature = function(feature, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.getSingle(feature, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            return this.getSingle(feature, script, language)\n                    .concat(this.getAlternates(feature, script, language));\n        case 'dlig':\n        case 'liga':\n        case 'rlig':\n            return this.getLigatures(feature, script, language);\n        case 'ccmp':\n            return this.getMultiple(feature, script, language)\n                .concat(this.getLigatures(feature, script, language));\n        case 'stch':\n            return this.getMultiple(feature, script, language);\n    }\n    return undefined;\n};\n\n/**\n * Add a substitution to a feature for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {Object} sub - the substitution to add (an object like { sub: id or [ids], by: id or [ids] })\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.add = function(feature, sub, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.addSingle(feature, sub, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            if (typeof sub.by === 'number') {\n                return this.addSingle(feature, sub, script, language);\n            }\n            return this.addAlternate(feature, sub, script, language);\n        case 'dlig':\n        case 'liga':\n        case 'rlig':\n            return this.addLigature(feature, sub, script, language);\n        case 'ccmp':\n            if (sub.by instanceof Array) {\n                return this.addMultiple(feature, sub, script, language);\n            }\n            return this.addLigature(feature, sub, script, language);\n    }\n    return undefined;\n};\n\nexport default Substitution;\n", "function isBrowser() {\n    return typeof window !== 'undefined';\n}\n\nfunction isNode() {\n    return typeof window === 'undefined';\n}\n\nfunction nodeBufferToArrayBuffer(buffer) {\n    const ab = new ArrayBuffer(buffer.length);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        view[i] = buffer[i];\n    }\n\n    return ab;\n}\n\nfunction arrayBufferToNodeBuffer(ab) {\n    const buffer = new Buffer(ab.byteLength);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n    }\n\n    return buffer;\n}\n\nfunction checkArgument(expression, message) {\n    if (!expression) {\n        throw message;\n    }\n}\n\nexport { isBrowser, isNode, nodeBufferToArrayBuffer, arrayBufferToNodeBuffer, checkArgument };\n", "// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\nimport check from '../check';\nimport glyphset from '../glyphset';\nimport parse from '../parse';\nimport Path from '../path';\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    let v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(glyph, data, start) {\n    const p = new parse.Parser(data, start);\n    glyph.numberOfContours = p.parseShort();\n    glyph._xMin = p.parseShort();\n    glyph._yMin = p.parseShort();\n    glyph._xMax = p.parseShort();\n    glyph._yMax = p.parseShort();\n    let flags;\n    let flag;\n\n    if (glyph.numberOfContours > 0) {\n        // This glyph is not a composite.\n        const endPointIndices = glyph.endPointIndices = [];\n        for (let i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (let i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        const numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (let i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                const repeatCount = p.parseByte();\n                for (let j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            const points = [];\n            let point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                let px = 0;\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                let py = 0;\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        let moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            const component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseShort();\n                    component.dy = p.parseShort();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseUShort(), p.parseUShort()];\n                }\n\n            } else {\n                // The arguments are bytes\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseChar();\n                    component.dy = p.parseChar();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseByte(), p.parseByte()];\n                }\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n        if (flags & 0x100) {\n            // We have instructions\n            glyph.instructionLength = p.parseUShort();\n            glyph.instructions = [];\n            for (let i = 0; i < glyph.instructionLength; i += 1) {\n                glyph.instructions.push(p.parseByte());\n            }\n        }\n    }\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    const newPoints = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const pt = points[i];\n        const newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    const contours = [];\n    let currentContour = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    const p = new Path();\n    if (!points) {\n        return p;\n    }\n\n    const contours = getContours(points);\n\n    for (let contourIndex = 0; contourIndex < contours.length; ++contourIndex) {\n        const contour = contours[contourIndex];\n\n        let prev = null;\n        let curr = contour[contour.length - 1];\n        let next = contour[0];\n\n        if (curr.onCurve) {\n            p.moveTo(curr.x, curr.y);\n        } else {\n            if (next.onCurve) {\n                p.moveTo(next.x, next.y);\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                const start = {x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5};\n                p.moveTo(start.x, start.y);\n            }\n        }\n\n        for (let i = 0; i < contour.length; ++i) {\n            prev = curr;\n            curr = next;\n            next = contour[(i + 1) % contour.length];\n\n            if (curr.onCurve) {\n                // This is a straight line.\n                p.lineTo(curr.x, curr.y);\n            } else {\n                let prev2 = prev;\n                let next2 = next;\n\n                if (!prev.onCurve) {\n                    prev2 = { x: (curr.x + prev.x) * 0.5, y: (curr.y + prev.y) * 0.5 };\n                }\n\n                if (!next.onCurve) {\n                    next2 = { x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5 };\n                }\n\n                p.quadraticCurveTo(curr.x, curr.y, next2.x, next2.y);\n            }\n        }\n\n        p.closePath();\n    }\n    return p;\n}\n\nfunction buildPath(glyphs, glyph) {\n    if (glyph.isComposite) {\n        for (let j = 0; j < glyph.components.length; j += 1) {\n            const component = glyph.components[j];\n            const componentGlyph = glyphs.get(component.glyphIndex);\n            // Force the ttfGlyphLoader to parse the glyph.\n            componentGlyph.getPath();\n            if (componentGlyph.points) {\n                let transformedPoints;\n                if (component.matchedPoints === undefined) {\n                    // component positioned by offset\n                    transformedPoints = transformPoints(componentGlyph.points, component);\n                } else {\n                    // component positioned by matched points\n                    if ((component.matchedPoints[0] > glyph.points.length - 1) ||\n                        (component.matchedPoints[1] > componentGlyph.points.length - 1)) {\n                        throw Error('Matched points out of range in ' + glyph.name);\n                    }\n                    const firstPt = glyph.points[component.matchedPoints[0]];\n                    let secondPt = componentGlyph.points[component.matchedPoints[1]];\n                    const transform = {\n                        xScale: component.xScale, scale01: component.scale01,\n                        scale10: component.scale10, yScale: component.yScale,\n                        dx: 0, dy: 0\n                    };\n                    secondPt = transformPoints([secondPt], transform)[0];\n                    transform.dx = firstPt.x - secondPt.x;\n                    transform.dy = firstPt.y - secondPt.y;\n                    transformedPoints = transformPoints(componentGlyph.points, transform);\n                }\n                glyph.points = glyph.points.concat(transformedPoints);\n            }\n        }\n    }\n\n    return getPath(glyph.points);\n}\n\nfunction parseGlyfTableAll(data, start, loca, font) {\n    const glyphs = new glyphset.GlyphSet(font);\n\n    // The last element of the loca table is invalid.\n    for (let i = 0; i < loca.length - 1; i += 1) {\n        const offset = loca[i];\n        const nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    }\n\n    return glyphs;\n}\n\nfunction parseGlyfTableOnLowMemory(data, start, loca, font) {\n    const glyphs = new glyphset.GlyphSet(font);\n\n    font._push = function(i) {\n        const offset = loca[i];\n        const nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    };\n\n    return glyphs;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font, opt) {\n    if (opt.lowMemory)\n        return parseGlyfTableOnLowMemory(data, start, loca, font);\n    else\n        return parseGlyfTableAll(data, start, loca, font);\n}\n\nexport default { getPath, parse: parseGlyfTable};\n", "/* A TrueType font hinting interpreter.\n*\n* (c) 2017 Axel Kittenberger\n*\n* This interpreter has been implemented according to this documentation:\n* https://developer.apple.com/fonts/TrueType-Reference-Manual/RM05/Chap5.html\n*\n* According to the documentation F24DOT6 values are used for pixels.\n* That means calculation is 1/64 pixel accurate and uses integer operations.\n* However, Javascript has floating point operations by default and only\n* those are available. One could make a case to simulate the 1/64 accuracy\n* exactly by truncating after every division operation\n* (for example with << 0) to get pixel exactly results as other TrueType\n* implementations. It may make sense since some fonts are pixel optimized\n* by hand using DELTAP instructions. The current implementation doesn't\n* and rather uses full floating point precision.\n*\n* xScale, yScale and rotation is currently ignored.\n*\n* A few non-trivial instructions are missing as I didn't encounter yet\n* a font that used them to test a possible implementation.\n*\n* Some fonts seem to use undocumented features regarding the twilight zone.\n* Only some of them are implemented as they were encountered.\n*\n* The exports.DEBUG statements are removed on the minified distribution file.\n*/\n'use strict';\n\nimport glyf from './tables/glyf';\n\nlet instructionTable;\nlet exec;\nlet execGlyph;\nlet execComponent;\n\n/*\n* Creates a hinting object.\n*\n* There ought to be exactly one\n* for each truetype font that is used for hinting.\n*/\nfunction Hinting(font) {\n    // the font this hinting object is for\n    this.font = font;\n\n    this.getCommands = function (hPoints) {\n        return glyf.getPath(hPoints).commands;\n    };\n\n    // cached states\n    this._fpgmState  =\n    this._prepState  =\n        undefined;\n\n    // errorState\n    // 0 ... all okay\n    // 1 ... had an error in a glyf,\n    //       continue working but stop spamming\n    //       the console\n    // 2 ... error at prep, stop hinting at this ppem\n    // 3 ... error at fpeg, stop hinting for this font at all\n    this._errorState = 0;\n}\n\n/*\n* Not rounding.\n*/\nfunction roundOff(v) {\n    return v;\n}\n\n/*\n* Rounding to grid.\n*/\nfunction roundToGrid(v) {\n    //Rounding in TT is supposed to \"symmetrical around zero\"\n    return Math.sign(v) * Math.round(Math.abs(v));\n}\n\n/*\n* Rounding to double grid.\n*/\nfunction roundToDoubleGrid(v) {\n    return Math.sign(v) * Math.round(Math.abs(v * 2)) / 2;\n}\n\n/*\n* Rounding to half grid.\n*/\nfunction roundToHalfGrid(v) {\n    return Math.sign(v) * (Math.round(Math.abs(v) + 0.5) - 0.5);\n}\n\n/*\n* Rounding to up to grid.\n*/\nfunction roundUpToGrid(v) {\n    return Math.sign(v) * Math.ceil(Math.abs(v));\n}\n\n/*\n* Rounding to down to grid.\n*/\nfunction roundDownToGrid(v) {\n    return Math.sign(v) * Math.floor(Math.abs(v));\n}\n\n/*\n* Super rounding.\n*/\nconst roundSuper = function (v) {\n    const period = this.srPeriod;\n    let phase = this.srPhase;\n    const threshold = this.srThreshold;\n    let sign = 1;\n\n    if (v < 0) {\n        v = -v;\n        sign = -1;\n    }\n\n    v += threshold - phase;\n\n    v = Math.trunc(v / period) * period;\n\n    v += phase;\n\n    // according to http://xgridfit.sourceforge.net/round.html\n    if (v < 0) return phase * sign;\n\n    return v * sign;\n};\n\n/*\n* Unit vector of x-axis.\n*/\nconst xUnitVector = {\n    x: 1,\n\n    y: 0,\n\n    axis: 'x',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.xo : p1.x) - (o2 ? p2.xo : p2.x);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        let do1;\n        let do2;\n        let doa1;\n        let doa2;\n        let dm1;\n        let dm2;\n        let dt;\n\n        if (!pv || pv === this) {\n            do1 = p.xo - rp1.xo;\n            do2 = p.xo - rp2.xo;\n            dm1 = rp1.x - rp1.xo;\n            dm2 = rp2.x - rp2.xo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.x = p.xo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.x = p.xo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            xUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        xUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this\n    normalSlope: Number.NEGATIVE_INFINITY,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'.\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.x = (org ? rp.xo : rp.x) + d;\n            return;\n        }\n\n        const rpx = org ? rp.xo : rp.x;\n        const rpy = org ? rp.yo : rp.y;\n        const rpdx = rpx + d * pv.x;\n        const rpdy = rpy + d * pv.y;\n\n        p.x = rpdx + (p.y - rpdy) / pv.normalSlope;\n    },\n\n    // Slope of vector line.\n    slope: 0,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.xTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.xTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.xTouched = false;\n    }\n};\n\n/*\n* Unit vector of y-axis.\n*/\nconst yUnitVector = {\n    x: 0,\n\n    y: 1,\n\n    axis: 'y',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.yo : p1.y) - (o2 ? p2.yo : p2.y);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        let do1;\n        let do2;\n        let doa1;\n        let doa2;\n        let dm1;\n        let dm2;\n        let dt;\n\n        if (!pv || pv === this) {\n            do1 = p.yo - rp1.yo;\n            do2 = p.yo - rp2.yo;\n            dm1 = rp1.y - rp1.yo;\n            dm2 = rp2.y - rp2.yo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.y = p.yo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.y = p.yo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            yUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        yUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this.\n    normalSlope: 0,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.y = (org ? rp.yo : rp.y) + d;\n            return;\n        }\n\n        const rpx = org ? rp.xo : rp.x;\n        const rpy = org ? rp.yo : rp.y;\n        const rpdx = rpx + d * pv.x;\n        const rpdy = rpy + d * pv.y;\n\n        p.y = rpdy + pv.normalSlope * (p.x - rpdx);\n    },\n\n    // Slope of vector line.\n    slope: Number.POSITIVE_INFINITY,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.yTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.yTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.yTouched = false;\n    }\n};\n\nObject.freeze(xUnitVector);\nObject.freeze(yUnitVector);\n\n/*\n* Creates a unit vector that is not x- or y-axis.\n*/\nfunction UnitVector(x, y) {\n    this.x = x;\n    this.y = y;\n    this.axis = undefined;\n    this.slope = y / x;\n    this.normalSlope = -x / y;\n    Object.freeze(this);\n}\n\n/*\n* Gets the projected distance between two points.\n* o1/o2 ... if true, respective original position is used.\n*/\nUnitVector.prototype.distance = function(p1, p2, o1, o2) {\n    return (\n        this.x * xUnitVector.distance(p1, p2, o1, o2) +\n        this.y * yUnitVector.distance(p1, p2, o1, o2)\n    );\n};\n\n/*\n* Moves point p so the moved position has the same relative\n* position to the moved positions of rp1 and rp2 than the\n* original positions had.\n*\n* See APPENDIX on INTERPOLATE at the bottom of this file.\n*/\nUnitVector.prototype.interpolate = function(p, rp1, rp2, pv) {\n    let dm1;\n    let dm2;\n    let do1;\n    let do2;\n    let doa1;\n    let doa2;\n    let dt;\n\n    do1 = pv.distance(p, rp1, true, true);\n    do2 = pv.distance(p, rp2, true, true);\n    dm1 = pv.distance(rp1, rp1, false, true);\n    dm2 = pv.distance(rp2, rp2, false, true);\n    doa1 = Math.abs(do1);\n    doa2 = Math.abs(do2);\n    dt = doa1 + doa2;\n\n    if (dt === 0) {\n        this.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n        return;\n    }\n\n    this.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n};\n\n/*\n* Sets the point 'p' relative to point 'rp'\n* by the distance 'd'\n*\n* See APPENDIX on SETRELATIVE at the bottom of this file.\n*\n* p   ...  point to set\n* rp  ... reference point\n* d   ... distance on projection vector\n* pv  ... projection vector (undefined = this)\n* org ... if true, uses the original position of rp as reference.\n*/\nUnitVector.prototype.setRelative = function(p, rp, d, pv, org) {\n    pv = pv || this;\n\n    const rpx = org ? rp.xo : rp.x;\n    const rpy = org ? rp.yo : rp.y;\n    const rpdx = rpx + d * pv.x;\n    const rpdy = rpy + d * pv.y;\n\n    const pvns = pv.normalSlope;\n    const fvs = this.slope;\n\n    const px = p.x;\n    const py = p.y;\n\n    p.x = (fvs * px - pvns * rpdx + rpdy - py) / (fvs - pvns);\n    p.y = fvs * (p.x - px) + py;\n};\n\n/*\n* Touches the point p.\n*/\nUnitVector.prototype.touch = function(p) {\n    p.xTouched = true;\n    p.yTouched = true;\n};\n\n/*\n* Returns a unit vector with x/y coordinates.\n*/\nfunction getUnitVector(x, y) {\n    const d = Math.sqrt(x * x + y * y);\n\n    x /= d;\n    y /= d;\n\n    if (x === 1 && y === 0) return xUnitVector;\n    else if (x === 0 && y === 1) return yUnitVector;\n    else return new UnitVector(x, y);\n}\n\n/*\n* Creates a point in the hinting engine.\n*/\nfunction HPoint(\n    x,\n    y,\n    lastPointOfContour,\n    onCurve\n) {\n    this.x = this.xo = Math.round(x * 64) / 64; // hinted x value and original x-value\n    this.y = this.yo = Math.round(y * 64) / 64; // hinted y value and original y-value\n\n    this.lastPointOfContour = lastPointOfContour;\n    this.onCurve = onCurve;\n    this.prevPointOnContour = undefined;\n    this.nextPointOnContour = undefined;\n    this.xTouched = false;\n    this.yTouched = false;\n\n    Object.preventExtensions(this);\n}\n\n/*\n* Returns the next touched point on the contour.\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.nextTouched = function(v) {\n    let p = this.nextPointOnContour;\n\n    while (!v.touched(p) && p !== this) p = p.nextPointOnContour;\n\n    return p;\n};\n\n/*\n* Returns the previous touched point on the contour\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.prevTouched = function(v) {\n    let p = this.prevPointOnContour;\n\n    while (!v.touched(p) && p !== this) p = p.prevPointOnContour;\n\n    return p;\n};\n\n/*\n* The zero point.\n*/\nconst HPZero = Object.freeze(new HPoint(0, 0));\n\n/*\n* The default state of the interpreter.\n*\n* Note: Freezing the defaultState and then deriving from it\n* makes the V8 Javascript engine going awkward,\n* so this is avoided, albeit the defaultState shouldn't\n* ever change.\n*/\nconst defaultState = {\n    cvCutIn: 17 / 16,    // control value cut in\n    deltaBase: 9,\n    deltaShift: 0.125,\n    loop: 1,             // loops some instructions\n    minDis: 1,           // minimum distance\n    autoFlip: true\n};\n\n/*\n* The current state of the interpreter.\n*\n* env  ... 'fpgm' or 'prep' or 'glyf'\n* prog ... the program\n*/\nfunction State(env, prog) {\n    this.env = env;\n    this.stack = [];\n    this.prog = prog;\n\n    switch (env) {\n        case 'glyf' :\n            this.zp0 = this.zp1 = this.zp2 = 1;\n            this.rp0 = this.rp1 = this.rp2 = 0;\n            /* fall through */\n        case 'prep' :\n            this.fv = this.pv = this.dpv = xUnitVector;\n            this.round = roundToGrid;\n    }\n}\n\n/*\n* Executes a glyph program.\n*\n* This does the hinting for each glyph.\n*\n* Returns an array of moved points.\n*\n* glyph: the glyph to hint\n* ppem: the size the glyph is rendered for\n*/\nHinting.prototype.exec = function(glyph, ppem) {\n    if (typeof ppem !== 'number') {\n        throw new Error('Point size is not a number!');\n    }\n\n    // Received a fatal error, don't do any hinting anymore.\n    if (this._errorState > 2) return;\n\n    const font = this.font;\n    let prepState = this._prepState;\n\n    if (!prepState || prepState.ppem !== ppem) {\n        let fpgmState = this._fpgmState;\n\n        if (!fpgmState) {\n            // Executes the fpgm state.\n            // This is used by fonts to define functions.\n            State.prototype = defaultState;\n\n            fpgmState =\n            this._fpgmState =\n                new State('fpgm', font.tables.fpgm);\n\n            fpgmState.funcs = [ ];\n            fpgmState.font = font;\n\n            if (exports.DEBUG) {\n                console.log('---EXEC FPGM---');\n                fpgmState.step = -1;\n            }\n\n            try {\n                exec(fpgmState);\n            } catch (e) {\n                console.log('Hinting error in FPGM:' + e);\n                this._errorState = 3;\n                return;\n            }\n        }\n\n        // Executes the prep program for this ppem setting.\n        // This is used by fonts to set cvt values\n        // depending on to be rendered font size.\n\n        State.prototype = fpgmState;\n        prepState =\n        this._prepState =\n            new State('prep', font.tables.prep);\n\n        prepState.ppem = ppem;\n\n        // Creates a copy of the cvt table\n        // and scales it to the current ppem setting.\n        const oCvt = font.tables.cvt;\n        if (oCvt) {\n            const cvt = prepState.cvt = new Array(oCvt.length);\n            const scale = ppem / font.unitsPerEm;\n            for (let c = 0; c < oCvt.length; c++) {\n                cvt[c] = oCvt[c] * scale;\n            }\n        } else {\n            prepState.cvt = [];\n        }\n\n        if (exports.DEBUG) {\n            console.log('---EXEC PREP---');\n            prepState.step = -1;\n        }\n\n        try {\n            exec(prepState);\n        } catch (e) {\n            if (this._errorState < 2) {\n                console.log('Hinting error in PREP:' + e);\n            }\n            this._errorState = 2;\n        }\n    }\n\n    if (this._errorState > 1) return;\n\n    try {\n        return execGlyph(glyph, prepState);\n    } catch (e) {\n        if (this._errorState < 1) {\n            console.log('Hinting error:' + e);\n            console.log('Note: further hinting errors are silenced');\n        }\n        this._errorState = 1;\n        return undefined;\n    }\n};\n\n/*\n* Executes the hinting program for a glyph.\n*/\nexecGlyph = function(glyph, prepState) {\n    // original point positions\n    const xScale = prepState.ppem / prepState.font.unitsPerEm;\n    const yScale = xScale;\n    let components = glyph.components;\n    let contours;\n    let gZone;\n    let state;\n\n    State.prototype = prepState;\n    if (!components) {\n        state = new State('glyf', glyph.instructions);\n        if (exports.DEBUG) {\n            console.log('---EXEC GLYPH---');\n            state.step = -1;\n        }\n        execComponent(glyph, state, xScale, yScale);\n        gZone = state.gZone;\n    } else {\n        const font = prepState.font;\n        gZone = [];\n        contours = [];\n        for (let i = 0; i < components.length; i++) {\n            const c = components[i];\n            const cg = font.glyphs.get(c.glyphIndex);\n\n            state = new State('glyf', cg.instructions);\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMP ' + i + '---');\n                state.step = -1;\n            }\n\n            execComponent(cg, state, xScale, yScale);\n            // appends the computed points to the result array\n            // post processes the component points\n            const dx = Math.round(c.dx * xScale);\n            const dy = Math.round(c.dy * yScale);\n            const gz = state.gZone;\n            const cc = state.contours;\n            for (let pi = 0; pi < gz.length; pi++) {\n                const p = gz[pi];\n                p.xTouched = p.yTouched = false;\n                p.xo = p.x = p.x + dx;\n                p.yo = p.y = p.y + dy;\n            }\n\n            const gLen = gZone.length;\n            gZone.push.apply(gZone, gz);\n            for (let j = 0; j < cc.length; j++) {\n                contours.push(cc[j] + gLen);\n            }\n        }\n\n        if (glyph.instructions && !state.inhibitGridFit) {\n            // the composite has instructions on its own\n            state = new State('glyf', glyph.instructions);\n\n            state.gZone = state.z0 = state.z1 = state.z2 = gZone;\n\n            state.contours = contours;\n\n            // note: HPZero cannot be used here, since\n            //       the point might be modified\n            gZone.push(\n                new HPoint(0, 0),\n                new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n            );\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMPOSITE---');\n                state.step = -1;\n            }\n\n            exec(state);\n\n            gZone.length -= 2;\n        }\n    }\n\n    return gZone;\n};\n\n/*\n* Executes the hinting program for a component of a multi-component glyph\n* or of the glyph itself for a non-component glyph.\n*/\nexecComponent = function(glyph, state, xScale, yScale)\n{\n    const points = glyph.points || [];\n    const pLen = points.length;\n    const gZone = state.gZone = state.z0 = state.z1 = state.z2 = [];\n    const contours = state.contours = [];\n\n    // Scales the original points and\n    // makes copies for the hinted points.\n    let cp; // current point\n    for (let i = 0; i < pLen; i++) {\n        cp = points[i];\n\n        gZone[i] = new HPoint(\n            cp.x * xScale,\n            cp.y * yScale,\n            cp.lastPointOfContour,\n            cp.onCurve\n        );\n    }\n\n    // Chain links the contours.\n    let sp; // start point\n    let np; // next point\n\n    for (let i = 0; i < pLen; i++) {\n        cp = gZone[i];\n\n        if (!sp) {\n            sp = cp;\n            contours.push(i);\n        }\n\n        if (cp.lastPointOfContour) {\n            cp.nextPointOnContour = sp;\n            sp.prevPointOnContour = cp;\n            sp = undefined;\n        } else {\n            np = gZone[i + 1];\n            cp.nextPointOnContour = np;\n            np.prevPointOnContour = cp;\n        }\n    }\n\n    if (state.inhibitGridFit) return;\n\n    if (exports.DEBUG) {\n        console.log('PROCESSING GLYPH', state.stack);\n        for (let i = 0; i < pLen; i++) {\n            console.log(i, gZone[i].x, gZone[i].y);\n        }\n    }\n\n    gZone.push(\n        new HPoint(0, 0),\n        new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n    );\n\n    exec(state);\n\n    // Removes the extra points.\n    gZone.length -= 2;\n\n    if (exports.DEBUG) {\n        console.log('FINISHED GLYPH', state.stack);\n        for (let i = 0; i < pLen; i++) {\n            console.log(i, gZone[i].x, gZone[i].y);\n        }\n    }\n};\n\n/*\n* Executes the program loaded in state.\n*/\nexec = function(state) {\n    let prog = state.prog;\n\n    if (!prog) return;\n\n    const pLen = prog.length;\n    let ins;\n\n    for (state.ip = 0; state.ip < pLen; state.ip++) {\n        if (exports.DEBUG) state.step++;\n        ins = instructionTable[prog[state.ip]];\n\n        if (!ins) {\n            throw new Error(\n                'unknown instruction: 0x' +\n                Number(prog[state.ip]).toString(16)\n            );\n        }\n\n        ins(state);\n\n        // very extensive debugging for each step\n        /*\n        if (exports.DEBUG) {\n            var da;\n            if (state.gZone) {\n                da = [];\n                for (let i = 0; i < state.gZone.length; i++)\n                {\n                    da.push(i + ' ' +\n                        state.gZone[i].x * 64 + ' ' +\n                        state.gZone[i].y * 64 + ' ' +\n                        (state.gZone[i].xTouched ? 'x' : '') +\n                        (state.gZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('GZ', da);\n            }\n\n            if (state.tZone) {\n                da = [];\n                for (let i = 0; i < state.tZone.length; i++) {\n                    da.push(i + ' ' +\n                        state.tZone[i].x * 64 + ' ' +\n                        state.tZone[i].y * 64 + ' ' +\n                        (state.tZone[i].xTouched ? 'x' : '') +\n                        (state.tZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('TZ', da);\n            }\n\n            if (state.stack.length > 10) {\n                console.log(\n                    state.stack.length,\n                    '...', state.stack.slice(state.stack.length - 10)\n                );\n            } else {\n                console.log(state.stack.length, state.stack);\n            }\n        }\n        */\n    }\n};\n\n/*\n* Initializes the twilight zone.\n*\n* This is only done if a SZPx instruction\n* refers to the twilight zone.\n*/\nfunction initTZone(state)\n{\n    const tZone = state.tZone = new Array(state.gZone.length);\n\n    // no idea if this is actually correct...\n    for (let i = 0; i < tZone.length; i++)\n    {\n        tZone[i] = new HPoint(0, 0);\n    }\n}\n\n/*\n* Skips the instruction pointer ahead over an IF/ELSE block.\n* handleElse .. if true breaks on matching ELSE\n*/\nfunction skip(state, handleElse)\n{\n    const prog = state.prog;\n    let ip = state.ip;\n    let nesting = 1;\n    let ins;\n\n    do {\n        ins = prog[++ip];\n        if (ins === 0x58) // IF\n            nesting++;\n        else if (ins === 0x59) // EIF\n            nesting--;\n        else if (ins === 0x40) // NPUSHB\n            ip += prog[ip + 1] + 1;\n        else if (ins === 0x41) // NPUSHW\n            ip += 2 * prog[ip + 1] + 1;\n        else if (ins >= 0xB0 && ins <= 0xB7) // PUSHB\n            ip += ins - 0xB0 + 1;\n        else if (ins >= 0xB8 && ins <= 0xBF) // PUSHW\n            ip += (ins - 0xB8 + 1) * 2;\n        else if (handleElse && nesting === 1 && ins === 0x1B) // ELSE\n            break;\n    } while (nesting > 0);\n\n    state.ip = ip;\n}\n\n/*----------------------------------------------------------*\n*          And then a lot of instructions...                *\n*----------------------------------------------------------*/\n\n// SVTCA[a] Set freedom and projection Vectors To Coordinate Axis\n// 0x00-0x01\nfunction SVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SVTCA[' + v.axis + ']');\n\n    state.fv = state.pv = state.dpv = v;\n}\n\n// SPVTCA[a] Set Projection Vector to Coordinate Axis\n// 0x02-0x03\nfunction SPVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SPVTCA[' + v.axis + ']');\n\n    state.pv = state.dpv = v;\n}\n\n// SFVTCA[a] Set Freedom Vector to Coordinate Axis\n// 0x04-0x05\nfunction SFVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SFVTCA[' + v.axis + ']');\n\n    state.fv = v;\n}\n\n// SPVTL[a] Set Projection Vector To Line\n// 0x06-0x07\nfunction SPVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SPVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.pv = state.dpv = getUnitVector(dx, dy);\n}\n\n// SFVTL[a] Set Freedom Vector To Line\n// 0x08-0x09\nfunction SFVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SFVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.fv = getUnitVector(dx, dy);\n}\n\n// SPVFS[] Set Projection Vector From Stack\n// 0x0A\nfunction SPVFS(state) {\n    const stack = state.stack;\n    const y = stack.pop();\n    const x = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SPVFS[]', y, x);\n\n    state.pv = state.dpv = getUnitVector(x, y);\n}\n\n// SFVFS[] Set Freedom Vector From Stack\n// 0x0B\nfunction SFVFS(state) {\n    const stack = state.stack;\n    const y = stack.pop();\n    const x = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SPVFS[]', y, x);\n\n    state.fv = getUnitVector(x, y);\n}\n\n// GPV[] Get Projection Vector\n// 0x0C\nfunction GPV(state) {\n    const stack = state.stack;\n    const pv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'GPV[]');\n\n    stack.push(pv.x * 0x4000);\n    stack.push(pv.y * 0x4000);\n}\n\n// GFV[] Get Freedom Vector\n// 0x0C\nfunction GFV(state) {\n    const stack = state.stack;\n    const fv = state.fv;\n\n    if (exports.DEBUG) console.log(state.step, 'GFV[]');\n\n    stack.push(fv.x * 0x4000);\n    stack.push(fv.y * 0x4000);\n}\n\n// SFVTPV[] Set Freedom Vector To Projection Vector\n// 0x0E\nfunction SFVTPV(state) {\n    state.fv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'SFVTPV[]');\n}\n\n// ISECT[] moves point p to the InterSECTion of two lines\n// 0x0F\nfunction ISECT(state)\n{\n    const stack = state.stack;\n    const pa0i = stack.pop();\n    const pa1i = stack.pop();\n    const pb0i = stack.pop();\n    const pb1i = stack.pop();\n    const pi = stack.pop();\n    const z0 = state.z0;\n    const z1 = state.z1;\n    const pa0 = z0[pa0i];\n    const pa1 = z0[pa1i];\n    const pb0 = z1[pb0i];\n    const pb1 = z1[pb1i];\n    const p = state.z2[pi];\n\n    if (exports.DEBUG) console.log('ISECT[], ', pa0i, pa1i, pb0i, pb1i, pi);\n\n    // math from\n    // en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line\n\n    const x1 = pa0.x;\n    const y1 = pa0.y;\n    const x2 = pa1.x;\n    const y2 = pa1.y;\n    const x3 = pb0.x;\n    const y3 = pb0.y;\n    const x4 = pb1.x;\n    const y4 = pb1.y;\n\n    const div = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    const f1 = x1 * y2 - y1 * x2;\n    const f2 = x3 * y4 - y3 * x4;\n\n    p.x = (f1 * (x3 - x4) - f2 * (x1 - x2)) / div;\n    p.y = (f1 * (y3 - y4) - f2 * (y1 - y2)) / div;\n}\n\n// SRP0[] Set Reference Point 0\n// 0x10\nfunction SRP0(state) {\n    state.rp0 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP0[]', state.rp0);\n}\n\n// SRP1[] Set Reference Point 1\n// 0x11\nfunction SRP1(state) {\n    state.rp1 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP1[]', state.rp1);\n}\n\n// SRP1[] Set Reference Point 2\n// 0x12\nfunction SRP2(state) {\n    state.rp2 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP2[]', state.rp2);\n}\n\n// SZP0[] Set Zone Pointer 0\n// 0x13\nfunction SZP0(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP0[]', n);\n\n    state.zp0 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z0 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP1[] Set Zone Pointer 1\n// 0x14\nfunction SZP1(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP1[]', n);\n\n    state.zp1 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z1 = state.tZone;\n            break;\n        case 1 :\n            state.z1 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP2[] Set Zone Pointer 2\n// 0x15\nfunction SZP2(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP2[]', n);\n\n    state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZPS[] Set Zone PointerS\n// 0x16\nfunction SZPS(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZPS[]', n);\n\n    state.zp0 = state.zp1 = state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z0 = state.z1 = state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.z1 = state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SLOOP[] Set LOOP variable\n// 0x17\nfunction SLOOP(state) {\n    state.loop = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SLOOP[]', state.loop);\n}\n\n// RTG[] Round To Grid\n// 0x18\nfunction RTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTG[]');\n\n    state.round = roundToGrid;\n}\n\n// RTHG[] Round To Half Grid\n// 0x19\nfunction RTHG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTHG[]');\n\n    state.round = roundToHalfGrid;\n}\n\n// SMD[] Set Minimum Distance\n// 0x1A\nfunction SMD(state) {\n    const d = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SMD[]', d);\n\n    state.minDis = d / 0x40;\n}\n\n// ELSE[] ELSE clause\n// 0x1B\nfunction ELSE(state) {\n    // This instruction has been reached by executing a then branch\n    // so it just skips ahead until matching EIF.\n    //\n    // In case the IF was negative the IF[] instruction already\n    // skipped forward over the ELSE[]\n\n    if (exports.DEBUG) console.log(state.step, 'ELSE[]');\n\n    skip(state, false);\n}\n\n// JMPR[] JuMP Relative\n// 0x1C\nfunction JMPR(state) {\n    const o = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'JMPR[]', o);\n\n    // A jump by 1 would do nothing.\n    state.ip += o - 1;\n}\n\n// SCVTCI[] Set Control Value Table Cut-In\n// 0x1D\nfunction SCVTCI(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SCVTCI[]', n);\n\n    state.cvCutIn = n / 0x40;\n}\n\n// DUP[] DUPlicate top stack element\n// 0x20\nfunction DUP(state) {\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.step, 'DUP[]');\n\n    stack.push(stack[stack.length - 1]);\n}\n\n// POP[] POP top stack element\n// 0x21\nfunction POP(state) {\n    if (exports.DEBUG) console.log(state.step, 'POP[]');\n\n    state.stack.pop();\n}\n\n// CLEAR[] CLEAR the stack\n// 0x22\nfunction CLEAR(state) {\n    if (exports.DEBUG) console.log(state.step, 'CLEAR[]');\n\n    state.stack.length = 0;\n}\n\n// SWAP[] SWAP the top two elements on the stack\n// 0x23\nfunction SWAP(state) {\n    const stack = state.stack;\n\n    const a = stack.pop();\n    const b = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SWAP[]');\n\n    stack.push(a);\n    stack.push(b);\n}\n\n// DEPTH[] DEPTH of the stack\n// 0x24\nfunction DEPTH(state) {\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.step, 'DEPTH[]');\n\n    stack.push(stack.length);\n}\n\n// LOOPCALL[] LOOPCALL function\n// 0x2A\nfunction LOOPCALL(state) {\n    const stack = state.stack;\n    const fn = stack.pop();\n    const c = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LOOPCALL[]', fn, c);\n\n    // saves callers program\n    const cip = state.ip;\n    const cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    for (let i = 0; i < c; i++) {\n        exec(state);\n\n        if (exports.DEBUG) console.log(\n            ++state.step,\n            i + 1 < c ? 'next loopcall' : 'done loopcall',\n            i\n        );\n    }\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n}\n\n// CALL[] CALL function\n// 0x2B\nfunction CALL(state) {\n    const fn = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CALL[]', fn);\n\n    // saves callers program\n    const cip = state.ip;\n    const cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    exec(state);\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n\n    if (exports.DEBUG) console.log(++state.step, 'returning from', fn);\n}\n\n// CINDEX[] Copy the INDEXed element to the top of the stack\n// 0x25\nfunction CINDEX(state) {\n    const stack = state.stack;\n    const k = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CINDEX[]', k);\n\n    // In case of k == 1, it copies the last element after popping\n    // thus stack.length - k.\n    stack.push(stack[stack.length - k]);\n}\n\n// MINDEX[] Move the INDEXed element to the top of the stack\n// 0x26\nfunction MINDEX(state) {\n    const stack = state.stack;\n    const k = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MINDEX[]', k);\n\n    stack.push(stack.splice(stack.length - k, 1)[0]);\n}\n\n// FDEF[] Function DEFinition\n// 0x2C\nfunction FDEF(state) {\n    if (state.env !== 'fpgm') throw new Error('FDEF not allowed here');\n    const stack = state.stack;\n    const prog = state.prog;\n    let ip = state.ip;\n\n    const fn = stack.pop();\n    const ipBegin = ip;\n\n    if (exports.DEBUG) console.log(state.step, 'FDEF[]', fn);\n\n    while (prog[++ip] !== 0x2D);\n\n    state.ip = ip;\n    state.funcs[fn] = prog.slice(ipBegin + 1, ip);\n}\n\n// MDAP[a] Move Direct Absolute Point\n// 0x2E-0x2F\nfunction MDAP(round, state) {\n    const pi = state.stack.pop();\n    const p = state.z0[pi];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'MDAP[' + round + ']', pi);\n\n    let d = pv.distance(p, HPZero);\n\n    if (round) d = state.round(d);\n\n    fv.setRelative(p, HPZero, d, pv);\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// IUP[a] Interpolate Untouched Points through the outline\n// 0x30\nfunction IUP(v, state) {\n    const z2 = state.z2;\n    const pLen = z2.length - 2;\n    let cp;\n    let pp;\n    let np;\n\n    if (exports.DEBUG) console.log(state.step, 'IUP[' + v.axis + ']');\n\n    for (let i = 0; i < pLen; i++) {\n        cp = z2[i]; // current point\n\n        // if this point has been touched go on\n        if (v.touched(cp)) continue;\n\n        pp = cp.prevTouched(v);\n\n        // no point on the contour has been touched?\n        if (pp === cp) continue;\n\n        np = cp.nextTouched(v);\n\n        if (pp === np) {\n            // only one point on the contour has been touched\n            // so simply moves the point like that\n\n            v.setRelative(cp, cp, v.distance(pp, pp, false, true), v, true);\n        }\n\n        v.interpolate(cp, pp, np, v);\n    }\n}\n\n// SHP[] SHift Point using reference point\n// 0x32-0x33\nfunction SHP(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n    let loop = state.loop;\n    const z2 = state.z2;\n\n    while (loop--)\n    {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        const d = pv.distance(rp, rp, false, true);\n        fv.setRelative(p, p, d, pv);\n        fv.touch(p);\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ?\n                   'loop ' + (state.loop - loop) + ': ' :\n                   ''\n                ) +\n                'SHP[' + (a ? 'rp1' : 'rp2') + ']', pi\n            );\n        }\n    }\n\n    state.loop = 1;\n}\n\n// SHC[] SHift Contour using reference point\n// 0x36-0x37\nfunction SHC(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n    const ci = stack.pop();\n    const sp = state.z2[state.contours[ci]];\n    let p = sp;\n\n    if (exports.DEBUG) console.log(state.step, 'SHC[' + a + ']', ci);\n\n    const d = pv.distance(rp, rp, false, true);\n\n    do {\n        if (p !== rp) fv.setRelative(p, p, d, pv);\n        p = p.nextPointOnContour;\n    } while (p !== sp);\n}\n\n// SHZ[] SHift Zone using reference point\n// 0x36-0x37\nfunction SHZ(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    const e = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SHZ[' + a + ']', e);\n\n    let z;\n    switch (e) {\n        case 0 : z = state.tZone; break;\n        case 1 : z = state.gZone; break;\n        default : throw new Error('Invalid zone');\n    }\n\n    let p;\n    const d = pv.distance(rp, rp, false, true);\n    const pLen = z.length - 2;\n    for (let i = 0; i < pLen; i++)\n    {\n        p = z[i];\n        fv.setRelative(p, p, d, pv);\n        //if (p !== rp) fv.setRelative(p, p, d, pv);\n    }\n}\n\n// SHPIX[] SHift point by a PIXel amount\n// 0x38\nfunction SHPIX(state) {\n    const stack = state.stack;\n    let loop = state.loop;\n    const fv = state.fv;\n    const d = stack.pop() / 0x40;\n    const z2 = state.z2;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'SHPIX[]', pi, d\n            );\n        }\n\n        fv.setRelative(p, p, d);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// IP[] Interpolate Point\n// 0x39\nfunction IP(state) {\n    const stack = state.stack;\n    const rp1i = state.rp1;\n    const rp2i = state.rp2;\n    let loop = state.loop;\n    const rp1 = state.z0[rp1i];\n    const rp2 = state.z1[rp2i];\n    const fv = state.fv;\n    const pv = state.dpv;\n    const z2 = state.z2;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'IP[]', pi, rp1i, '<->', rp2i\n            );\n        }\n\n        fv.interpolate(p, rp1, rp2, pv);\n\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// MSIRP[a] Move Stack Indirect Relative Point\n// 0x3A-0x3B\nfunction MSIRP(a, state) {\n    const stack = state.stack;\n    const d = stack.pop() / 64;\n    const pi = stack.pop();\n    const p = state.z1[pi];\n    const rp0 = state.z0[state.rp0];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    fv.setRelative(p, rp0, d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) console.log(state.step, 'MSIRP[' + a + ']', d, pi);\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (a) state.rp0 = pi;\n}\n\n// ALIGNRP[] Align to reference point.\n// 0x3C\nfunction ALIGNRP(state) {\n    const stack = state.stack;\n    const rp0i = state.rp0;\n    const rp0 = state.z0[rp0i];\n    let loop = state.loop;\n    const fv = state.fv;\n    const pv = state.pv;\n    const z1 = state.z1;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z1[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'ALIGNRP[]', pi\n            );\n        }\n\n        fv.setRelative(p, rp0, 0, pv);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// RTG[] Round To Double Grid\n// 0x3D\nfunction RTDG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTDG[]');\n\n    state.round = roundToDoubleGrid;\n}\n\n// MIAP[a] Move Indirect Absolute Point\n// 0x3E-0x3F\nfunction MIAP(round, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const pi = stack.pop();\n    const p = state.z0[pi];\n    const fv = state.fv;\n    const pv = state.pv;\n    let cv = state.cvt[n];\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            'MIAP[' + round + ']',\n            n, '(', cv, ')', pi\n        );\n    }\n\n    let d = pv.distance(p, HPZero);\n\n    if (round) {\n        if (Math.abs(d - cv) < state.cvCutIn) d = cv;\n\n        d = state.round(d);\n    }\n\n    fv.setRelative(p, HPZero, d, pv);\n\n    if (state.zp0 === 0) {\n        p.xo = p.x;\n        p.yo = p.y;\n    }\n\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// NPUSB[] PUSH N Bytes\n// 0x40\nfunction NPUSHB(state) {\n    const prog = state.prog;\n    let ip = state.ip;\n    const stack = state.stack;\n\n    const n = prog[++ip];\n\n    if (exports.DEBUG) console.log(state.step, 'NPUSHB[]', n);\n\n    for (let i = 0; i < n; i++) stack.push(prog[++ip]);\n\n    state.ip = ip;\n}\n\n// NPUSHW[] PUSH N Words\n// 0x41\nfunction NPUSHW(state) {\n    let ip = state.ip;\n    const prog = state.prog;\n    const stack = state.stack;\n    const n = prog[++ip];\n\n    if (exports.DEBUG) console.log(state.step, 'NPUSHW[]', n);\n\n    for (let i = 0; i < n; i++) {\n        let w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) w = -((w ^ 0xffff) + 1);\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// WS[] Write Store\n// 0x42\nfunction WS(state) {\n    const stack = state.stack;\n    let store = state.store;\n\n    if (!store) store = state.store = [];\n\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WS', v, l);\n\n    store[l] = v;\n}\n\n// RS[] Read Store\n// 0x43\nfunction RS(state) {\n    const stack = state.stack;\n    const store = state.store;\n\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'RS', l);\n\n    const v = (store && store[l]) || 0;\n\n    stack.push(v);\n}\n\n// WCVTP[] Write Control Value Table in Pixel units\n// 0x44\nfunction WCVTP(state) {\n    const stack = state.stack;\n\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WCVTP', v, l);\n\n    state.cvt[l] = v / 0x40;\n}\n\n// RCVT[] Read Control Value Table entry\n// 0x45\nfunction RCVT(state) {\n    const stack = state.stack;\n    const cvte = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'RCVT', cvte);\n\n    stack.push(state.cvt[cvte] * 0x40);\n}\n\n// GC[] Get Coordinate projected onto the projection vector\n// 0x46-0x47\nfunction GC(a, state) {\n    const stack = state.stack;\n    const pi = stack.pop();\n    const p = state.z2[pi];\n\n    if (exports.DEBUG) console.log(state.step, 'GC[' + a + ']', pi);\n\n    stack.push(state.dpv.distance(p, HPZero, a, false) * 0x40);\n}\n\n// MD[a] Measure Distance\n// 0x49-0x4A\nfunction MD(a, state) {\n    const stack = state.stack;\n    const pi2 = stack.pop();\n    const pi1 = stack.pop();\n    const p2 = state.z1[pi2];\n    const p1 = state.z0[pi1];\n    const d = state.dpv.distance(p1, p2, a, a);\n\n    if (exports.DEBUG) console.log(state.step, 'MD[' + a + ']', pi2, pi1, '->', d);\n\n    state.stack.push(Math.round(d * 64));\n}\n\n// MPPEM[] Measure Pixels Per EM\n// 0x4B\nfunction MPPEM(state) {\n    if (exports.DEBUG) console.log(state.step, 'MPPEM[]');\n    state.stack.push(state.ppem);\n}\n\n// FLIPON[] set the auto FLIP Boolean to ON\n// 0x4D\nfunction FLIPON(state) {\n    if (exports.DEBUG) console.log(state.step, 'FLIPON[]');\n    state.autoFlip = true;\n}\n\n// LT[] Less Than\n// 0x50\nfunction LT(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LT[]', e2, e1);\n\n    stack.push(e1 < e2 ? 1 : 0);\n}\n\n// LTEQ[] Less Than or EQual\n// 0x53\nfunction LTEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LTEQ[]', e2, e1);\n\n    stack.push(e1 <= e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than\n// 0x52\nfunction GT(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'GT[]', e2, e1);\n\n    stack.push(e1 > e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than or EQual\n// 0x53\nfunction GTEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'GTEQ[]', e2, e1);\n\n    stack.push(e1 >= e2 ? 1 : 0);\n}\n\n// EQ[] EQual\n// 0x54\nfunction EQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'EQ[]', e2, e1);\n\n    stack.push(e2 === e1 ? 1 : 0);\n}\n\n// NEQ[] Not EQual\n// 0x55\nfunction NEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NEQ[]', e2, e1);\n\n    stack.push(e2 !== e1 ? 1 : 0);\n}\n\n// ODD[] ODD\n// 0x56\nfunction ODD(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ODD[]', n);\n\n    stack.push(Math.trunc(n) % 2 ? 1 : 0);\n}\n\n// EVEN[] EVEN\n// 0x57\nfunction EVEN(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'EVEN[]', n);\n\n    stack.push(Math.trunc(n) % 2 ? 0 : 1);\n}\n\n// IF[] IF test\n// 0x58\nfunction IF(state) {\n    let test = state.stack.pop();\n    let ins;\n\n    if (exports.DEBUG) console.log(state.step, 'IF[]', test);\n\n    // if test is true it just continues\n    // if not the ip is skipped until matching ELSE or EIF\n    if (!test) {\n        skip(state, true);\n\n        if (exports.DEBUG) console.log(state.step, ins === 0x1B ? 'ELSE[]' : 'EIF[]');\n    }\n}\n\n// EIF[] End IF\n// 0x59\nfunction EIF(state) {\n    // this can be reached normally when\n    // executing an else branch.\n    // -> just ignore it\n\n    if (exports.DEBUG) console.log(state.step, 'EIF[]');\n}\n\n// AND[] logical AND\n// 0x5A\nfunction AND(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'AND[]', e2, e1);\n\n    stack.push(e2 && e1 ? 1 : 0);\n}\n\n// OR[] logical OR\n// 0x5B\nfunction OR(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'OR[]', e2, e1);\n\n    stack.push(e2 || e1 ? 1 : 0);\n}\n\n// NOT[] logical NOT\n// 0x5C\nfunction NOT(state) {\n    const stack = state.stack;\n    const e = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NOT[]', e);\n\n    stack.push(e ? 0 : 1);\n}\n\n// DELTAP1[] DELTA exception P1\n// DELTAP2[] DELTA exception P2\n// DELTAP3[] DELTA exception P3\n// 0x5D, 0x71, 0x72\nfunction DELTAP123(b, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const fv = state.fv;\n    const pv = state.pv;\n    const ppem = state.ppem;\n    const base = state.deltaBase + (b - 1) * 16;\n    const ds = state.deltaShift;\n    const z0 = state.z0;\n\n    if (exports.DEBUG) console.log(state.step, 'DELTAP[' + b + ']', n, stack);\n\n    for (let i = 0; i < n; i++) {\n        const pi = stack.pop();\n        const arg = stack.pop();\n        const appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) continue;\n\n        let mag = (arg & 0x0F) - 8;\n        if (mag >= 0) mag++;\n        if (exports.DEBUG) console.log(state.step, 'DELTAPFIX', pi, 'by', mag * ds);\n\n        const p = z0[pi];\n        fv.setRelative(p, p, mag * ds, pv);\n    }\n}\n\n// SDB[] Set Delta Base in the graphics state\n// 0x5E\nfunction SDB(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SDB[]', n);\n\n    state.deltaBase = n;\n}\n\n// SDS[] Set Delta Shift in the graphics state\n// 0x5F\nfunction SDS(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SDS[]', n);\n\n    state.deltaShift = Math.pow(0.5, n);\n}\n\n// ADD[] ADD\n// 0x60\nfunction ADD(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ADD[]', n2, n1);\n\n    stack.push(n1 + n2);\n}\n\n// SUB[] SUB\n// 0x61\nfunction SUB(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SUB[]', n2, n1);\n\n    stack.push(n1 - n2);\n}\n\n// DIV[] DIV\n// 0x62\nfunction DIV(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'DIV[]', n2, n1);\n\n    stack.push(n1 * 64 / n2);\n}\n\n// MUL[] MUL\n// 0x63\nfunction MUL(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MUL[]', n2, n1);\n\n    stack.push(n1 * n2 / 64);\n}\n\n// ABS[] ABSolute value\n// 0x64\nfunction ABS(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ABS[]', n);\n\n    stack.push(Math.abs(n));\n}\n\n// NEG[] NEGate\n// 0x65\nfunction NEG(state) {\n    const stack = state.stack;\n    let n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NEG[]', n);\n\n    stack.push(-n);\n}\n\n// FLOOR[] FLOOR\n// 0x66\nfunction FLOOR(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'FLOOR[]', n);\n\n    stack.push(Math.floor(n / 0x40) * 0x40);\n}\n\n// CEILING[] CEILING\n// 0x67\nfunction CEILING(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CEILING[]', n);\n\n    stack.push(Math.ceil(n / 0x40) * 0x40);\n}\n\n// ROUND[ab] ROUND value\n// 0x68-0x6B\nfunction ROUND(dt, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ROUND[]');\n\n    stack.push(state.round(n / 0x40) * 0x40);\n}\n\n// WCVTF[] Write Control Value Table in Funits\n// 0x70\nfunction WCVTF(state) {\n    const stack = state.stack;\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WCVTF[]', v, l);\n\n    state.cvt[l] = v * state.ppem / state.font.unitsPerEm;\n}\n\n// DELTAC1[] DELTA exception C1\n// DELTAC2[] DELTA exception C2\n// DELTAC3[] DELTA exception C3\n// 0x73, 0x74, 0x75\nfunction DELTAC123(b, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const ppem = state.ppem;\n    const base = state.deltaBase + (b - 1) * 16;\n    const ds = state.deltaShift;\n\n    if (exports.DEBUG) console.log(state.step, 'DELTAC[' + b + ']', n, stack);\n\n    for (let i = 0; i < n; i++) {\n        const c = stack.pop();\n        const arg = stack.pop();\n        const appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) continue;\n\n        let mag = (arg & 0x0F) - 8;\n        if (mag >= 0) mag++;\n\n        const delta = mag * ds;\n\n        if (exports.DEBUG) console.log(state.step, 'DELTACFIX', c, 'by', delta);\n\n        state.cvt[c] += delta;\n    }\n}\n\n// SROUND[] Super ROUND\n// 0x76\nfunction SROUND(state) {\n    let n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SROUND[]', n);\n\n    state.round = roundSuper;\n\n    let period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = 0.5;\n            break;\n        case 0x40:\n            period = 1;\n            break;\n        case 0x80:\n            period = 2;\n            break;\n        default:\n            throw new Error('invalid SROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default: throw new Error('invalid SROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) state.srThreshold = 0;\n    else state.srThreshold = (n / 8 - 0.5) * period;\n}\n\n// S45ROUND[] Super ROUND 45 degrees\n// 0x77\nfunction S45ROUND(state) {\n    let n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'S45ROUND[]', n);\n\n    state.round = roundSuper;\n\n    let period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = Math.sqrt(2) / 2;\n            break;\n        case 0x40:\n            period = Math.sqrt(2);\n            break;\n        case 0x80:\n            period = 2 * Math.sqrt(2);\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) state.srThreshold = 0;\n    else state.srThreshold = (n / 8 - 0.5) * period;\n}\n\n// ROFF[] Round Off\n// 0x7A\nfunction ROFF(state) {\n    if (exports.DEBUG) console.log(state.step, 'ROFF[]');\n\n    state.round = roundOff;\n}\n\n// RUTG[] Round Up To Grid\n// 0x7C\nfunction RUTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RUTG[]');\n\n    state.round = roundUpToGrid;\n}\n\n// RDTG[] Round Down To Grid\n// 0x7D\nfunction RDTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RDTG[]');\n\n    state.round = roundDownToGrid;\n}\n\n// SCANCTRL[] SCAN conversion ConTRoL\n// 0x85\nfunction SCANCTRL(state) {\n    const n = state.stack.pop();\n\n    // ignored by opentype.js\n\n    if (exports.DEBUG) console.log(state.step, 'SCANCTRL[]', n);\n}\n\n// SDPVTL[a] Set Dual Projection Vector To Line\n// 0x86-0x87\nfunction SDPVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log(state.step, 'SDPVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.dpv = getUnitVector(dx, dy);\n}\n\n// GETINFO[] GET INFOrmation\n// 0x88\nfunction GETINFO(state) {\n    const stack = state.stack;\n    const sel = stack.pop();\n    let r = 0;\n\n    if (exports.DEBUG) console.log(state.step, 'GETINFO[]', sel);\n\n    // v35 as in no subpixel hinting\n    if (sel & 0x01) r = 35;\n\n    // TODO rotation and stretch currently not supported\n    // and thus those GETINFO are always 0.\n\n    // opentype.js is always gray scaling\n    if (sel & 0x20) r |= 0x1000;\n\n    stack.push(r);\n}\n\n// ROLL[] ROLL the top three stack elements\n// 0x8A\nfunction ROLL(state) {\n    const stack = state.stack;\n    const a = stack.pop();\n    const b = stack.pop();\n    const c = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ROLL[]');\n\n    stack.push(b);\n    stack.push(a);\n    stack.push(c);\n}\n\n// MAX[] MAXimum of top two stack elements\n// 0x8B\nfunction MAX(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MAX[]', e2, e1);\n\n    stack.push(Math.max(e1, e2));\n}\n\n// MIN[] MINimum of top two stack elements\n// 0x8C\nfunction MIN(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MIN[]', e2, e1);\n\n    stack.push(Math.min(e1, e2));\n}\n\n// SCANTYPE[] SCANTYPE\n// 0x8D\nfunction SCANTYPE(state) {\n    const n = state.stack.pop();\n    // ignored by opentype.js\n    if (exports.DEBUG) console.log(state.step, 'SCANTYPE[]', n);\n}\n\n// INSTCTRL[] INSTCTRL\n// 0x8D\nfunction INSTCTRL(state) {\n    const s = state.stack.pop();\n    let v = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'INSTCTRL[]', s, v);\n\n    switch (s) {\n        case 1 : state.inhibitGridFit = !!v; return;\n        case 2 : state.ignoreCvt = !!v; return;\n        default: throw new Error('invalid INSTCTRL[] selector');\n    }\n}\n\n// PUSHB[abc] PUSH Bytes\n// 0xB0-0xB7\nfunction PUSHB(n, state) {\n    const stack = state.stack;\n    const prog = state.prog;\n    let ip = state.ip;\n\n    if (exports.DEBUG) console.log(state.step, 'PUSHB[' + n + ']');\n\n    for (let i = 0; i < n; i++) stack.push(prog[++ip]);\n\n    state.ip = ip;\n}\n\n// PUSHW[abc] PUSH Words\n// 0xB8-0xBF\nfunction PUSHW(n, state) {\n    let ip = state.ip;\n    const prog = state.prog;\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.ip, 'PUSHW[' + n + ']');\n\n    for (let i = 0; i < n; i++) {\n        let w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) w = -((w ^ 0xffff) + 1);\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// MDRP[abcde] Move Direct Relative Point\n// 0xD0-0xEF\n// (if indirect is 0)\n//\n// and\n//\n// MIRP[abcde] Move Indirect Relative Point\n// 0xE0-0xFF\n// (if indirect is 1)\n\nfunction MDRP_MIRP(indirect, setRp0, keepD, ro, dt, state) {\n    const stack = state.stack;\n    const cvte = indirect && stack.pop();\n    const pi = stack.pop();\n    const rp0i = state.rp0;\n    const rp = state.z0[rp0i];\n    const p = state.z1[pi];\n\n    const md = state.minDis;\n    const fv = state.fv;\n    const pv = state.dpv;\n    let od; // original distance\n    let d; // moving distance\n    let sign; // sign of distance\n    let cv;\n\n    d = od = pv.distance(p, rp, true, true);\n    sign = d >= 0 ? 1 : -1; // Math.sign would be 0 in case of 0\n\n    // TODO consider autoFlip\n    d = Math.abs(d);\n\n    if (indirect) {\n        cv = state.cvt[cvte];\n\n        if (ro && Math.abs(d - cv) < state.cvCutIn) d = cv;\n    }\n\n    if (keepD && d < md) d = md;\n\n    if (ro) d = state.round(d);\n\n    fv.setRelative(p, rp, sign * d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            (indirect ? 'MIRP[' : 'MDRP[') +\n            (setRp0 ? 'M' : 'm') +\n            (keepD ? '>' : '_') +\n            (ro ? 'R' : '_') +\n            (dt === 0 ? 'Gr' : (dt === 1 ? 'Bl' : (dt === 2 ? 'Wh' : ''))) +\n            ']',\n            indirect ?\n                cvte + '(' + state.cvt[cvte] + ',' +  cv + ')' :\n                '',\n            pi,\n            '(d =', od, '->', sign * d, ')'\n        );\n    }\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (setRp0) state.rp0 = pi;\n}\n\n/*\n* The instruction table.\n*/\ninstructionTable = [\n    /* 0x00 */ SVTCA.bind(undefined, yUnitVector),\n    /* 0x01 */ SVTCA.bind(undefined, xUnitVector),\n    /* 0x02 */ SPVTCA.bind(undefined, yUnitVector),\n    /* 0x03 */ SPVTCA.bind(undefined, xUnitVector),\n    /* 0x04 */ SFVTCA.bind(undefined, yUnitVector),\n    /* 0x05 */ SFVTCA.bind(undefined, xUnitVector),\n    /* 0x06 */ SPVTL.bind(undefined, 0),\n    /* 0x07 */ SPVTL.bind(undefined, 1),\n    /* 0x08 */ SFVTL.bind(undefined, 0),\n    /* 0x09 */ SFVTL.bind(undefined, 1),\n    /* 0x0A */ SPVFS,\n    /* 0x0B */ SFVFS,\n    /* 0x0C */ GPV,\n    /* 0x0D */ GFV,\n    /* 0x0E */ SFVTPV,\n    /* 0x0F */ ISECT,\n    /* 0x10 */ SRP0,\n    /* 0x11 */ SRP1,\n    /* 0x12 */ SRP2,\n    /* 0x13 */ SZP0,\n    /* 0x14 */ SZP1,\n    /* 0x15 */ SZP2,\n    /* 0x16 */ SZPS,\n    /* 0x17 */ SLOOP,\n    /* 0x18 */ RTG,\n    /* 0x19 */ RTHG,\n    /* 0x1A */ SMD,\n    /* 0x1B */ ELSE,\n    /* 0x1C */ JMPR,\n    /* 0x1D */ SCVTCI,\n    /* 0x1E */ undefined,   // TODO SSWCI\n    /* 0x1F */ undefined,   // TODO SSW\n    /* 0x20 */ DUP,\n    /* 0x21 */ POP,\n    /* 0x22 */ CLEAR,\n    /* 0x23 */ SWAP,\n    /* 0x24 */ DEPTH,\n    /* 0x25 */ CINDEX,\n    /* 0x26 */ MINDEX,\n    /* 0x27 */ undefined,   // TODO ALIGNPTS\n    /* 0x28 */ undefined,\n    /* 0x29 */ undefined,   // TODO UTP\n    /* 0x2A */ LOOPCALL,\n    /* 0x2B */ CALL,\n    /* 0x2C */ FDEF,\n    /* 0x2D */ undefined,   // ENDF (eaten by FDEF)\n    /* 0x2E */ MDAP.bind(undefined, 0),\n    /* 0x2F */ MDAP.bind(undefined, 1),\n    /* 0x30 */ IUP.bind(undefined, yUnitVector),\n    /* 0x31 */ IUP.bind(undefined, xUnitVector),\n    /* 0x32 */ SHP.bind(undefined, 0),\n    /* 0x33 */ SHP.bind(undefined, 1),\n    /* 0x34 */ SHC.bind(undefined, 0),\n    /* 0x35 */ SHC.bind(undefined, 1),\n    /* 0x36 */ SHZ.bind(undefined, 0),\n    /* 0x37 */ SHZ.bind(undefined, 1),\n    /* 0x38 */ SHPIX,\n    /* 0x39 */ IP,\n    /* 0x3A */ MSIRP.bind(undefined, 0),\n    /* 0x3B */ MSIRP.bind(undefined, 1),\n    /* 0x3C */ ALIGNRP,\n    /* 0x3D */ RTDG,\n    /* 0x3E */ MIAP.bind(undefined, 0),\n    /* 0x3F */ MIAP.bind(undefined, 1),\n    /* 0x40 */ NPUSHB,\n    /* 0x41 */ NPUSHW,\n    /* 0x42 */ WS,\n    /* 0x43 */ RS,\n    /* 0x44 */ WCVTP,\n    /* 0x45 */ RCVT,\n    /* 0x46 */ GC.bind(undefined, 0),\n    /* 0x47 */ GC.bind(undefined, 1),\n    /* 0x48 */ undefined,   // TODO SCFS\n    /* 0x49 */ MD.bind(undefined, 0),\n    /* 0x4A */ MD.bind(undefined, 1),\n    /* 0x4B */ MPPEM,\n    /* 0x4C */ undefined,   // TODO MPS\n    /* 0x4D */ FLIPON,\n    /* 0x4E */ undefined,   // TODO FLIPOFF\n    /* 0x4F */ undefined,   // TODO DEBUG\n    /* 0x50 */ LT,\n    /* 0x51 */ LTEQ,\n    /* 0x52 */ GT,\n    /* 0x53 */ GTEQ,\n    /* 0x54 */ EQ,\n    /* 0x55 */ NEQ,\n    /* 0x56 */ ODD,\n    /* 0x57 */ EVEN,\n    /* 0x58 */ IF,\n    /* 0x59 */ EIF,\n    /* 0x5A */ AND,\n    /* 0x5B */ OR,\n    /* 0x5C */ NOT,\n    /* 0x5D */ DELTAP123.bind(undefined, 1),\n    /* 0x5E */ SDB,\n    /* 0x5F */ SDS,\n    /* 0x60 */ ADD,\n    /* 0x61 */ SUB,\n    /* 0x62 */ DIV,\n    /* 0x63 */ MUL,\n    /* 0x64 */ ABS,\n    /* 0x65 */ NEG,\n    /* 0x66 */ FLOOR,\n    /* 0x67 */ CEILING,\n    /* 0x68 */ ROUND.bind(undefined, 0),\n    /* 0x69 */ ROUND.bind(undefined, 1),\n    /* 0x6A */ ROUND.bind(undefined, 2),\n    /* 0x6B */ ROUND.bind(undefined, 3),\n    /* 0x6C */ undefined,   // TODO NROUND[ab]\n    /* 0x6D */ undefined,   // TODO NROUND[ab]\n    /* 0x6E */ undefined,   // TODO NROUND[ab]\n    /* 0x6F */ undefined,   // TODO NROUND[ab]\n    /* 0x70 */ WCVTF,\n    /* 0x71 */ DELTAP123.bind(undefined, 2),\n    /* 0x72 */ DELTAP123.bind(undefined, 3),\n    /* 0x73 */ DELTAC123.bind(undefined, 1),\n    /* 0x74 */ DELTAC123.bind(undefined, 2),\n    /* 0x75 */ DELTAC123.bind(undefined, 3),\n    /* 0x76 */ SROUND,\n    /* 0x77 */ S45ROUND,\n    /* 0x78 */ undefined,   // TODO JROT[]\n    /* 0x79 */ undefined,   // TODO JROF[]\n    /* 0x7A */ ROFF,\n    /* 0x7B */ undefined,\n    /* 0x7C */ RUTG,\n    /* 0x7D */ RDTG,\n    /* 0x7E */ POP, // actually SANGW, supposed to do only a pop though\n    /* 0x7F */ POP, // actually AA, supposed to do only a pop though\n    /* 0x80 */ undefined,   // TODO FLIPPT\n    /* 0x81 */ undefined,   // TODO FLIPRGON\n    /* 0x82 */ undefined,   // TODO FLIPRGOFF\n    /* 0x83 */ undefined,\n    /* 0x84 */ undefined,\n    /* 0x85 */ SCANCTRL,\n    /* 0x86 */ SDPVTL.bind(undefined, 0),\n    /* 0x87 */ SDPVTL.bind(undefined, 1),\n    /* 0x88 */ GETINFO,\n    /* 0x89 */ undefined,   // TODO IDEF\n    /* 0x8A */ ROLL,\n    /* 0x8B */ MAX,\n    /* 0x8C */ MIN,\n    /* 0x8D */ SCANTYPE,\n    /* 0x8E */ INSTCTRL,\n    /* 0x8F */ undefined,\n    /* 0x90 */ undefined,\n    /* 0x91 */ undefined,\n    /* 0x92 */ undefined,\n    /* 0x93 */ undefined,\n    /* 0x94 */ undefined,\n    /* 0x95 */ undefined,\n    /* 0x96 */ undefined,\n    /* 0x97 */ undefined,\n    /* 0x98 */ undefined,\n    /* 0x99 */ undefined,\n    /* 0x9A */ undefined,\n    /* 0x9B */ undefined,\n    /* 0x9C */ undefined,\n    /* 0x9D */ undefined,\n    /* 0x9E */ undefined,\n    /* 0x9F */ undefined,\n    /* 0xA0 */ undefined,\n    /* 0xA1 */ undefined,\n    /* 0xA2 */ undefined,\n    /* 0xA3 */ undefined,\n    /* 0xA4 */ undefined,\n    /* 0xA5 */ undefined,\n    /* 0xA6 */ undefined,\n    /* 0xA7 */ undefined,\n    /* 0xA8 */ undefined,\n    /* 0xA9 */ undefined,\n    /* 0xAA */ undefined,\n    /* 0xAB */ undefined,\n    /* 0xAC */ undefined,\n    /* 0xAD */ undefined,\n    /* 0xAE */ undefined,\n    /* 0xAF */ undefined,\n    /* 0xB0 */ PUSHB.bind(undefined, 1),\n    /* 0xB1 */ PUSHB.bind(undefined, 2),\n    /* 0xB2 */ PUSHB.bind(undefined, 3),\n    /* 0xB3 */ PUSHB.bind(undefined, 4),\n    /* 0xB4 */ PUSHB.bind(undefined, 5),\n    /* 0xB5 */ PUSHB.bind(undefined, 6),\n    /* 0xB6 */ PUSHB.bind(undefined, 7),\n    /* 0xB7 */ PUSHB.bind(undefined, 8),\n    /* 0xB8 */ PUSHW.bind(undefined, 1),\n    /* 0xB9 */ PUSHW.bind(undefined, 2),\n    /* 0xBA */ PUSHW.bind(undefined, 3),\n    /* 0xBB */ PUSHW.bind(undefined, 4),\n    /* 0xBC */ PUSHW.bind(undefined, 5),\n    /* 0xBD */ PUSHW.bind(undefined, 6),\n    /* 0xBE */ PUSHW.bind(undefined, 7),\n    /* 0xBF */ PUSHW.bind(undefined, 8),\n    /* 0xC0 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 0),\n    /* 0xC1 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 1),\n    /* 0xC2 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 2),\n    /* 0xC3 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 3),\n    /* 0xC4 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 0),\n    /* 0xC5 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 1),\n    /* 0xC6 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 2),\n    /* 0xC7 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 3),\n    /* 0xC8 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 0),\n    /* 0xC9 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 1),\n    /* 0xCA */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 2),\n    /* 0xCB */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 3),\n    /* 0xCC */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 0),\n    /* 0xCD */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 1),\n    /* 0xCE */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 2),\n    /* 0xCF */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 3),\n    /* 0xD0 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 0),\n    /* 0xD1 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 1),\n    /* 0xD2 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 2),\n    /* 0xD3 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 3),\n    /* 0xD4 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 0),\n    /* 0xD5 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 1),\n    /* 0xD6 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 2),\n    /* 0xD7 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 3),\n    /* 0xD8 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 0),\n    /* 0xD9 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 1),\n    /* 0xDA */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 2),\n    /* 0xDB */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 3),\n    /* 0xDC */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 0),\n    /* 0xDD */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 1),\n    /* 0xDE */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 2),\n    /* 0xDF */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 3),\n    /* 0xE0 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 0),\n    /* 0xE1 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 1),\n    /* 0xE2 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 2),\n    /* 0xE3 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 3),\n    /* 0xE4 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 0),\n    /* 0xE5 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 1),\n    /* 0xE6 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 2),\n    /* 0xE7 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 3),\n    /* 0xE8 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 0),\n    /* 0xE9 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 1),\n    /* 0xEA */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 2),\n    /* 0xEB */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 3),\n    /* 0xEC */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 0),\n    /* 0xED */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 1),\n    /* 0xEE */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 2),\n    /* 0xEF */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 3),\n    /* 0xF0 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 0),\n    /* 0xF1 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 1),\n    /* 0xF2 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 2),\n    /* 0xF3 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 3),\n    /* 0xF4 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 0),\n    /* 0xF5 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 1),\n    /* 0xF6 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 2),\n    /* 0xF7 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 3),\n    /* 0xF8 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 0),\n    /* 0xF9 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 1),\n    /* 0xFA */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 2),\n    /* 0xFB */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 3),\n    /* 0xFC */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 0),\n    /* 0xFD */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 1),\n    /* 0xFE */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 2),\n    /* 0xFF */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 3)\n];\n\nexport default Hinting;\n\n/*****************************\n  Mathematical Considerations\n******************************\n\nfv ... refers to freedom vector\npv ... refers to projection vector\nrp ... refers to reference point\np  ... refers to to point being operated on\nd  ... refers to distance\n\nSETRELATIVE:\n============\n\ncase freedom vector == x-axis:\n------------------------------\n\n                        (pv)\n                     .-'\n              rpd .-'\n               .-*\n          d .-'90°'\n         .-'       '\n      .-'           '\n   *-'               ' b\n  rp                  '\n                       '\n                        '\n            p *----------*-------------- (fv)\n                          pm\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b\n\n   y - rpdy = pvns * (x- rpdx)\n\n   y = p.y\n\n   x = rpdx + ( p.y - rpdy ) / pvns\n\n\ncase freedom vector == y-axis:\n------------------------------\n\n    * pm\n    |\\\n    | \\\n    |  \\\n    |   \\\n    |    \\\n    |     \\\n    |      \\\n    |       \\\n    |        \\\n    |         \\ b\n    |          \\\n    |           \\\n    |            \\    .-' (pv)\n    |         90° \\.-'\n    |           .-'* rpd\n    |        .-'\n    *     *-'  d\n    p     rp\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b:\n           pvns ... normal slope to pv\n\n   y - rpdy = pvns * (x - rpdx)\n\n   x = p.x\n\n   y = rpdy +  pvns * (p.x - rpdx)\n\n\n\ngeneric case:\n-------------\n\n\n                              .'(fv)\n                            .'\n                          .* pm\n                        .' !\n                      .'    .\n                    .'      !\n                  .'         . b\n                .'           !\n               *              .\n              p               !\n                         90°   .    ... (pv)\n                           ...-*-'''\n                  ...---'''    rpd\n         ...---'''   d\n   *--'''\n  rp\n\n    rpdx = rpx + d * pv.x\n    rpdy = rpy + d * pv.y\n\n equation of line b:\n    pvns... normal slope to pv\n\n    y - rpdy = pvns * (x - rpdx)\n\n equation of freedom vector line:\n    fvs ... slope of freedom vector (=fy/fx)\n\n    y - py = fvs * (x - px)\n\n\n  on pm both equations are true for same x/y\n\n    y - rpdy = pvns * (x - rpdx)\n\n    y - py = fvs * (x - px)\n\n  form to y and set equal:\n\n    pvns * (x - rpdx) + rpdy = fvs * (x - px) + py\n\n  expand:\n\n    pvns * x - pvns * rpdx + rpdy = fvs * x - fvs * px + py\n\n  switch:\n\n    fvs * x - fvs * px + py = pvns * x - pvns * rpdx + rpdy\n\n  solve for x:\n\n    fvs * x - pvns * x = fvs * px - pvns * rpdx - py + rpdy\n\n\n\n          fvs * px - pvns * rpdx + rpdy - py\n    x =  -----------------------------------\n                 fvs - pvns\n\n  and:\n\n    y = fvs * (x - px) + py\n\n\n\nINTERPOLATE:\n============\n\nExamples of point interpolation.\n\nThe weight of the movement of the reference point gets bigger\nthe further the other reference point is away, thus the safest\noption (that is avoiding 0/0 divisions) is to weight the\noriginal distance of the other point by the sum of both distances.\n\nIf the sum of both distances is 0, then move the point by the\narithmetic average of the movement of both reference points.\n\n\n\n\n           (+6)\n    rp1o *---->*rp1\n         .     .                          (+12)\n         .     .                  rp2o *---------->* rp2\n         .     .                       .           .\n         .     .                       .           .\n         .    10          20           .           .\n         |.........|...................|           .\n               .   .                               .\n               .   . (+8)                          .\n                po *------>*p                      .\n               .           .                       .\n               .    12     .          24           .\n               |...........|.......................|\n                                  36\n\n\n-------\n\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .                      (-10)\n         .         .              rp2 *<---------* rpo2\n         .         .                   .         .\n         .         .                   .         .\n         .    10   .          30       .         .\n         |.........|.............................|\n                   .                   .\n                   . (+5)              .\n                po *--->* p            .\n                   .    .              .\n                   .    .   20         .\n                   |....|..............|\n                     5        15\n\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .\n    rp2o *-------->*rp2\n\n\n                               (+10)\n                          po *-------->* p\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .(+30)\n    rp2o *---------------------------->*rp2\n\n\n                                        (+25)\n                          po *----------------------->* p\n\n\n\nvim: set ts=4 sw=4 expandtab:\n*****/\n", "/**\n * Converts a string into a list of tokens.\n */\n\n/**\n * Create a new token\n * @param {string} char a single char\n */\nfunction Token(char) {\n    this.char = char;\n    this.state = {};\n    this.activeState = null;\n}\n\n/**\n * Create a new context range\n * @param {number} startIndex range start index\n * @param {number} endOffset range end index offset\n * @param {string} contextName owner context name\n */\nfunction ContextRange(startIndex, endOffset, contextName) {\n    this.contextName = contextName;\n    this.startIndex = startIndex;\n    this.endOffset = endOffset;\n}\n\n/**\n * Check context start and end\n * @param {string} contextName a unique context name\n * @param {function} checkStart a predicate function the indicates a context's start\n * @param {function} checkEnd a predicate function the indicates a context's end\n */\nfunction ContextChecker(contextName, checkStart, checkEnd) {\n    this.contextName = contextName;\n    this.openRange = null;\n    this.ranges = [];\n    this.checkStart = checkStart;\n    this.checkEnd = checkEnd;\n}\n\n/**\n * @typedef ContextParams\n * @type Object\n * @property {array} context context items\n * @property {number} currentIndex current item index\n */\n\n/**\n * Create a context params\n * @param {array} context a list of items\n * @param {number} currentIndex current item index\n */\nfunction ContextParams(context, currentIndex) {\n    this.context = context;\n    this.index = currentIndex;\n    this.length = context.length;\n    this.current = context[currentIndex];\n    this.backtrack = context.slice(0, currentIndex);\n    this.lookahead = context.slice(currentIndex + 1);\n}\n\n/**\n * Create an event instance\n * @param {string} eventId event unique id\n */\nfunction Event(eventId) {\n    this.eventId = eventId;\n    this.subscribers = [];\n}\n\n/**\n * Initialize a core events and auto subscribe required event handlers\n * @param {any} events an object that enlists core events handlers\n */\nfunction initializeCoreEvents(events) {\n    const coreEvents = [\n        'start', 'end', 'next', 'newToken', 'contextStart',\n        'contextEnd', 'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD', 'updateContextsRanges'\n    ];\n\n    coreEvents.forEach(eventId => {\n        Object.defineProperty(this.events, eventId, {\n            value: new Event(eventId)\n        });\n    });\n\n    if (!!events) {\n        coreEvents.forEach(eventId => {\n            const event = events[eventId];\n            if (typeof event === 'function') {\n                this.events[eventId].subscribe(event);\n            }\n        });\n    }\n    const requiresContextUpdate = [\n        'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD'\n    ];\n    requiresContextUpdate.forEach(eventId => {\n        this.events[eventId].subscribe(\n            this.updateContextsRanges\n        );\n    });\n}\n\n/**\n * Converts a string into a list of tokens\n * @param {any} events tokenizer core events\n */\nfunction Tokenizer(events) {\n    this.tokens = [];\n    this.registeredContexts = {};\n    this.contextCheckers = [];\n    this.events = {};\n    this.registeredModifiers = [];\n\n    initializeCoreEvents.call(this, events);\n}\n\n/**\n * Sets the state of a token, usually called by a state modifier.\n * @param {string} key state item key\n * @param {any} value state item value\n */\nToken.prototype.setState = function(key, value) {\n    this.state[key] = value;\n    this.activeState = { key, value: this.state[key] };\n    return this.activeState;\n};\n\nToken.prototype.getState = function (stateId) {\n    return this.state[stateId] || null;\n};\n\n/**\n * Checks if an index exists in the tokens list.\n * @param {number} index token index\n */\nTokenizer.prototype.inboundIndex = function(index) {\n    return index >= 0 && index < this.tokens.length;\n};\n\n/**\n * Compose and apply a list of operations (replace, update, delete)\n * @param {array} RUDs replace, update and delete operations\n * TODO: Perf. Optimization (lengthBefore === lengthAfter ? dispatch once)\n */\nTokenizer.prototype.composeRUD = function (RUDs) {\n    const silent = true;\n    const state = RUDs.map(RUD => (\n        this[RUD[0]].apply(this, RUD.slice(1).concat(silent))\n    ));\n    const hasFAILObject = obj => (\n        typeof obj === 'object' &&\n        obj.hasOwnProperty('FAIL')\n    );\n    if (state.every(hasFAILObject)) {\n        return {\n            FAIL: `composeRUD: one or more operations hasn't completed successfully`,\n            report: state.filter(hasFAILObject)\n        };\n    }\n    this.dispatch('composeRUD', [state.filter(op => !hasFAILObject(op))]);\n};\n\n/**\n * Replace a range of tokens with a list of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {token} tokens a list of tokens to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceRange = function (startIndex, offset, tokens, silent) {\n    offset = offset !== null ? offset : this.tokens.length;\n    const isTokenType = tokens.every(token => token instanceof Token);\n    if (!isNaN(startIndex) && this.inboundIndex(startIndex) && isTokenType) {\n        const replaced = this.tokens.splice.apply(\n            this.tokens, [startIndex, offset].concat(tokens)\n        );\n        if (!silent) this.dispatch('replaceToken', [startIndex, offset, tokens]);\n        return [replaced, tokens];\n    } else {\n        return { FAIL: 'replaceRange: invalid tokens or startIndex.' };\n    }\n};\n\n/**\n * Replace a token with another token\n * @param {number} index token index\n * @param {token} token a token to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceToken = function (index, token, silent) {\n    if (!isNaN(index) && this.inboundIndex(index) && token instanceof Token) {\n        const replaced = this.tokens.splice(index, 1, token);\n        if (!silent) this.dispatch('replaceToken', [index, token]);\n        return [replaced[0], token];\n    } else {\n        return { FAIL: 'replaceToken: invalid token or index.' };\n    }\n};\n\n/**\n * Removes a range of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeRange = function(startIndex, offset, silent) {\n    offset = !isNaN(offset) ? offset : this.tokens.length;\n    const tokens = this.tokens.splice(startIndex, offset);\n    if (!silent) this.dispatch('removeRange', [tokens, startIndex, offset]);\n    return tokens;\n};\n\n/**\n * Remove a token at a certain index\n * @param {number} index token index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeToken = function(index, silent) {\n    if (!isNaN(index) && this.inboundIndex(index)) {\n        const token = this.tokens.splice(index, 1);\n        if (!silent) this.dispatch('removeToken', [token, index]);\n        return token;\n    } else {\n        return { FAIL: 'removeToken: invalid token index.' };\n    }\n};\n\n/**\n * Insert a list of tokens at a certain index\n * @param {array} tokens a list of tokens to insert\n * @param {number} index insert the list of tokens at index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.insertToken = function (tokens, index, silent) {\n    const tokenType = tokens.every(\n        token => token instanceof Token\n    );\n    if (tokenType) {\n        this.tokens.splice.apply(\n            this.tokens, [index, 0].concat(tokens)\n        );\n        if (!silent) this.dispatch('insertToken', [tokens, index]);\n        return tokens;\n    } else {\n        return { FAIL: 'insertToken: invalid token(s).' };\n    }\n};\n\n/**\n * A state modifier that is called on 'newToken' event\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a function to update token state\n */\nTokenizer.prototype.registerModifier = function(modifierId, condition, modifier) {\n    this.events.newToken.subscribe(function(token, contextParams) {\n        const conditionParams = [token, contextParams];\n        const canApplyModifier = (\n            condition === null ||\n            condition.apply(this, conditionParams) === true\n        );\n        const modifierParams = [token, contextParams];\n        if (canApplyModifier) {\n            let newStateValue = modifier.apply(this, modifierParams);\n            token.setState(modifierId, newStateValue);\n        }\n    });\n    this.registeredModifiers.push(modifierId);\n};\n\n/**\n * Subscribe a handler to an event\n * @param {function} eventHandler an event handler function\n */\nEvent.prototype.subscribe = function (eventHandler) {\n    if (typeof eventHandler === 'function') {\n        return ((this.subscribers.push(eventHandler)) - 1);\n    } else {\n        return { FAIL: `invalid '${this.eventId}' event handler`};\n    }\n};\n\n/**\n * Unsubscribe an event handler\n * @param {string} subsId subscription id\n */\nEvent.prototype.unsubscribe = function (subsId) {\n    this.subscribers.splice(subsId, 1);\n};\n\n/**\n * Sets context params current value index\n * @param {number} index context params current value index\n */\nContextParams.prototype.setCurrentIndex = function(index) {\n    this.index = index;\n    this.current = this.context[index];\n    this.backtrack = this.context.slice(0, index);\n    this.lookahead = this.context.slice(index + 1);\n};\n\n/**\n * Get an item at an offset from the current value\n * example (current value is 3):\n *  1    2   [3]   4    5   |   items values\n * -2   -1    0    1    2   |   offset values\n * @param {number} offset an offset from current value index\n */\nContextParams.prototype.get = function (offset) {\n    switch (true) {\n        case (offset === 0):\n            return this.current;\n        case (offset < 0 && Math.abs(offset) <= this.backtrack.length):\n            return this.backtrack.slice(offset)[0];\n        case (offset > 0 && offset <= this.lookahead.length):\n            return this.lookahead[offset - 1];\n        default:\n            return null;\n    }\n};\n\n/**\n * Converts a context range into a string value\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.rangeToText = function (range) {\n    if (range instanceof ContextRange) {\n        return (\n            this.getRangeTokens(range)\n                .map(token => token.char).join('')\n        );\n    }\n};\n\n/**\n * Converts all tokens into a string\n */\nTokenizer.prototype.getText = function () {\n    return this.tokens.map(token => token.char).join('');\n};\n\n/**\n * Get a context by name\n * @param {string} contextName context name to get\n */\nTokenizer.prototype.getContext = function (contextName) {\n    let context = this.registeredContexts[contextName];\n    return !!context ? context : null;\n};\n\n/**\n * Subscribes a new event handler to an event\n * @param {string} eventName event name to subscribe to\n * @param {function} eventHandler a function to be invoked on event\n */\nTokenizer.prototype.on = function(eventName, eventHandler) {\n    const event = this.events[eventName];\n    if (!!event) {\n        return event.subscribe(eventHandler);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Dispatches an event\n * @param {string} eventName event name\n * @param {any} args event handler arguments\n */\nTokenizer.prototype.dispatch = function(eventName, args) {\n    const event = this.events[eventName];\n    if (event instanceof Event) {\n        event.subscribers.forEach(subscriber => {\n            subscriber.apply(this, args || []);\n        });\n    }\n};\n\n/**\n * Register a new context checker\n * @param {string} contextName a unique context name\n * @param {function} contextStartCheck a predicate function that returns true on context start\n * @param {function} contextEndCheck  a predicate function that returns true on context end\n * TODO: call tokenize on registration to update context ranges with the new context.\n */\nTokenizer.prototype.registerContextChecker = function(contextName, contextStartCheck, contextEndCheck) {\n    if (!!this.getContext(contextName)) return {\n        FAIL:\n        `context name '${contextName}' is already registered.`\n    };\n    if (typeof contextStartCheck !== 'function') return {\n        FAIL:\n        `missing context start check.`\n    };\n    if (typeof contextEndCheck !== 'function') return {\n        FAIL:\n        `missing context end check.`\n    };\n    const contextCheckers = new ContextChecker(\n        contextName, contextStartCheck, contextEndCheck\n    );\n    this.registeredContexts[contextName] = contextCheckers;\n    this.contextCheckers.push(contextCheckers);\n    return contextCheckers;\n};\n\n/**\n * Gets a context range tokens\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.getRangeTokens = function(range) {\n    const endIndex = range.startIndex + range.endOffset;\n    return [].concat(\n        this.tokens\n            .slice(range.startIndex, endIndex)\n    );\n};\n\n/**\n * Gets the ranges of a context\n * @param {string} contextName context name\n */\nTokenizer.prototype.getContextRanges = function(contextName) {\n    const context = this.getContext(contextName);\n    if (!!context) {\n        return context.ranges;\n    } else {\n        return { FAIL: `context checker '${contextName}' is not registered.` };\n    }\n};\n\n/**\n * Resets context ranges to run context update\n */\nTokenizer.prototype.resetContextsRanges = function () {\n    const registeredContexts = this.registeredContexts;\n    for (const contextName in registeredContexts) {\n        if (registeredContexts.hasOwnProperty(contextName)) {\n            const context = registeredContexts[contextName];\n            context.ranges = [];\n        }\n    }\n};\n\n/**\n * Updates context ranges\n */\nTokenizer.prototype.updateContextsRanges = function () {\n    this.resetContextsRanges();\n    const chars = this.tokens.map(token => token.char);\n    for (let i = 0; i < chars.length; i++) {\n        const contextParams = new ContextParams(chars, i);\n        this.runContextCheck(contextParams);\n    }\n    this.dispatch('updateContextsRanges', [this.registeredContexts]);\n};\n\n/**\n * Sets the end offset of an open range\n * @param {number} offset range end offset\n * @param {string} contextName context name\n */\nTokenizer.prototype.setEndOffset = function (offset, contextName) {\n    const startIndex = this.getContext(contextName).openRange.startIndex;\n    let range = new ContextRange(startIndex, offset, contextName);\n    const ranges = this.getContext(contextName).ranges;\n    range.rangeId = `${contextName}.${ranges.length}`;\n    ranges.push(range);\n    this.getContext(contextName).openRange = null;\n    return range;\n};\n\n/**\n * Runs a context check on the current context\n * @param {contextParams} contextParams current context params\n */\nTokenizer.prototype.runContextCheck = function(contextParams) {\n    const index = contextParams.index;\n    this.contextCheckers.forEach(contextChecker => {\n        let contextName = contextChecker.contextName;\n        let openRange = this.getContext(contextName).openRange;\n        if (!openRange && contextChecker.checkStart(contextParams)) {\n            openRange = new ContextRange(index, null, contextName);\n            this.getContext(contextName).openRange = openRange;\n            this.dispatch('contextStart', [contextName, index]);\n        }\n        if (!!openRange && contextChecker.checkEnd(contextParams)) {\n            const offset = (index - openRange.startIndex) + 1;\n            const range = this.setEndOffset(offset, contextName);\n            this.dispatch('contextEnd', [contextName, range]);\n        }\n    });\n};\n\n/**\n * Converts a text into a list of tokens\n * @param {string} text a text to tokenize\n */\nTokenizer.prototype.tokenize = function (text) {\n    this.tokens = [];\n    this.resetContextsRanges();\n    let chars = Array.from(text);\n    this.dispatch('start');\n    for (let i = 0; i < chars.length; i++) {\n        const char = chars[i];\n        const contextParams = new ContextParams(chars, i);\n        this.dispatch('next', [contextParams]);\n        this.runContextCheck(contextParams);\n        let token = new Token(char);\n        this.tokens.push(token);\n        this.dispatch('newToken', [token, contextParams]);\n    }\n    this.dispatch('end', [this.tokens]);\n    return this.tokens;\n};\n\nexport default Tokenizer;\nexport { Token, Event, ContextRange, ContextParams };\n", "// ╭─┄┄┄────────────────────────┄─────────────────────────────────────────────╮\n// ┊ Character Class Assertions ┊ Checks if a char belongs to a certain class ┊\n// ╰─╾──────────────────────────┄─────────────────────────────────────────────╯\n// jscs:disable maximumLineLength\n/**\n * Check if a char is Arabic\n * @param {string} c a single char\n */\nexport function isArabicChar(c) {\n    return /[\\u0600-\\u065F\\u066A-\\u06D2\\u06FA-\\u06FF]/.test(c);\n}\n\n/**\n * Check if a char is an isolated arabic char\n * @param {string} c a single char\n */\nexport function isIsolatedArabicChar(char) {\n    return /[\\u0630\\u0690\\u0621\\u0631\\u0661\\u0671\\u0622\\u0632\\u0672\\u0692\\u06C2\\u0623\\u0673\\u0693\\u06C3\\u0624\\u0694\\u06C4\\u0625\\u0675\\u0695\\u06C5\\u06E5\\u0676\\u0696\\u06C6\\u0627\\u0677\\u0697\\u06C7\\u0648\\u0688\\u0698\\u06C8\\u0689\\u0699\\u06C9\\u068A\\u06CA\\u066B\\u068B\\u06CB\\u068C\\u068D\\u06CD\\u06FD\\u068E\\u06EE\\u06FE\\u062F\\u068F\\u06CF\\u06EF]/.test(char);\n}\n\n/**\n * Check if a char is an Arabic Tashkeel char\n * @param {string} c a single char\n */\nexport function isTashkeelArabicChar(char) {\n    return /[\\u0600-\\u0605\\u060C-\\u060E\\u0610-\\u061B\\u061E\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED]/.test(char);\n}\n\n/**\n * Check if a char is Latin\n * @param {string} c a single char\n */\nexport function isLatinChar(c) {\n    return /[A-z]/.test(c);\n}\n\n/**\n * Check if a char is whitespace char\n * @param {string} c a single char\n */\nexport function isWhiteSpace(c) {\n    return /\\s/.test(c);\n}\n", "/**\n * Query a feature by some of it's properties to lookup a glyph substitution.\n */\n\nimport { ContextParams } from '../tokenizer';\nimport { isTashkeelArabicChar } from '../char';\n\n/**\n * Create feature query instance\n * @param {Font} font opentype font instance\n */\nfunction FeatureQuery(font) {\n    this.font = font;\n    this.features = {};\n}\n\n/**\n * @typedef SubstitutionAction\n * @type Object\n * @property {number} id substitution type\n * @property {string} tag feature tag\n * @property {any} substitution substitution value(s)\n */\n\n/**\n * Create a substitution action instance\n * @param {SubstitutionAction} action\n */\nfunction SubstitutionAction(action) {\n    this.id = action.id;\n    this.tag = action.tag;\n    this.substitution = action.substitution;\n}\n\n/**\n * Lookup a coverage table\n * @param {number} glyphIndex glyph index\n * @param {CoverageTable} coverage coverage table\n */\nfunction lookupCoverage(glyphIndex, coverage) {\n    if (!glyphIndex) return -1;\n    switch (coverage.format) {\n        case 1:\n            return coverage.glyphs.indexOf(glyphIndex);\n\n        case 2:\n            let ranges = coverage.ranges;\n            for (let i = 0; i < ranges.length; i++) {\n                const range = ranges[i];\n                if (glyphIndex >= range.start && glyphIndex <= range.end) {\n                    let offset = glyphIndex - range.start;\n                    return range.index + offset;\n                }\n            }\n            break;\n        default:\n            return -1; // not found\n    }\n    return -1;\n}\n\n/**\n * Handle a single substitution - format 1\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat1(glyphIndex, subtable) {\n    let substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) return null;\n    return glyphIndex + subtable.deltaGlyphId;\n}\n\n/**\n * Handle a single substitution - format 2\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat2(glyphIndex, subtable) {\n    let substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) return null;\n    return subtable.substitute[substituteIndex];\n}\n\n/**\n * Lookup a list of coverage tables\n * @param {any} coverageList a list of coverage tables\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction lookupCoverageList(coverageList, contextParams) {\n    let lookupList = [];\n    for (let i = 0; i < coverageList.length; i++) {\n        const coverage = coverageList[i];\n        let glyphIndex = contextParams.current;\n        glyphIndex = Array.isArray(glyphIndex) ? glyphIndex[0] : glyphIndex;\n        const lookupIndex = lookupCoverage(glyphIndex, coverage);\n        if (lookupIndex !== -1) {\n            lookupList.push(lookupIndex);\n        }\n    }\n    if (lookupList.length !== coverageList.length) return -1;\n    return lookupList;\n}\n\n/**\n * Handle chaining context substitution - format 3\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction chainingSubstitutionFormat3(contextParams, subtable) {\n    const lookupsCount = (\n        subtable.inputCoverage.length +\n        subtable.lookaheadCoverage.length +\n        subtable.backtrackCoverage.length\n    );\n    if (contextParams.context.length < lookupsCount) return [];\n    // INPUT LOOKUP //\n    let inputLookups = lookupCoverageList(\n        subtable.inputCoverage, contextParams\n    );\n    if (inputLookups === -1) return [];\n    // LOOKAHEAD LOOKUP //\n    const lookaheadOffset = subtable.inputCoverage.length - 1;\n    if (contextParams.lookahead.length < subtable.lookaheadCoverage.length) return [];\n    let lookaheadContext = contextParams.lookahead.slice(lookaheadOffset);\n    while (lookaheadContext.length && isTashkeelArabicChar(lookaheadContext[0].char)) {\n        lookaheadContext.shift();\n    }\n    const lookaheadParams = new ContextParams(lookaheadContext, 0);\n    let lookaheadLookups = lookupCoverageList(\n        subtable.lookaheadCoverage, lookaheadParams\n    );\n    // BACKTRACK LOOKUP //\n    let backtrackContext = [].concat(contextParams.backtrack);\n    backtrackContext.reverse();\n    while (backtrackContext.length && isTashkeelArabicChar(backtrackContext[0].char)) {\n        backtrackContext.shift();\n    }\n    if (backtrackContext.length < subtable.backtrackCoverage.length) return [];\n    const backtrackParams = new ContextParams(backtrackContext, 0);\n    let backtrackLookups = lookupCoverageList(\n        subtable.backtrackCoverage, backtrackParams\n    );\n    const contextRulesMatch = (\n        inputLookups.length === subtable.inputCoverage.length &&\n        lookaheadLookups.length === subtable.lookaheadCoverage.length &&\n        backtrackLookups.length === subtable.backtrackCoverage.length\n    );\n    let substitutions = [];\n    if (contextRulesMatch) {\n        for (let i = 0; i < subtable.lookupRecords.length; i++) {\n            const lookupRecord = subtable.lookupRecords[i];\n            const lookupListIndex = lookupRecord.lookupListIndex;\n            const lookupTable = this.getLookupByIndex(lookupListIndex);\n            for (let s = 0; s < lookupTable.subtables.length; s++) {\n                const subtable = lookupTable.subtables[s];\n                const lookup = this.getLookupMethod(lookupTable, subtable);\n                const substitutionType = this.getSubstitutionType(lookupTable, subtable);\n                if (substitutionType === '12') {\n                    for (let n = 0; n < inputLookups.length; n++) {\n                        const glyphIndex = contextParams.get(n);\n                        const substitution = lookup(glyphIndex);\n                        if (substitution) substitutions.push(substitution);\n                    }\n                }\n            }\n        }\n    }\n    return substitutions;\n}\n\n/**\n * Handle ligature substitution - format 1\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction ligatureSubstitutionFormat1(contextParams, subtable) {\n    // COVERAGE LOOKUP //\n    let glyphIndex = contextParams.current;\n    let ligSetIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (ligSetIndex === -1) return null;\n    // COMPONENTS LOOKUP\n    // (!) note, components are ordered in the written direction.\n    let ligature;\n    let ligatureSet = subtable.ligatureSets[ligSetIndex];\n    for (let s = 0; s < ligatureSet.length; s++) {\n        ligature = ligatureSet[s];\n        for (let l = 0; l < ligature.components.length; l++) {\n            const lookaheadItem = contextParams.lookahead[l];\n            const component = ligature.components[l];\n            if (lookaheadItem !== component) break;\n            if (l === ligature.components.length - 1) return ligature;\n        }\n    }\n    return null;\n}\n\n/**\n * Handle decomposition substitution - format 1\n * @param {number} glyphIndex glyph index\n * @param {any} subtable subtable\n */\nfunction decompositionSubstitutionFormat1(glyphIndex, subtable) {\n    let substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) return null;\n    return subtable.sequences[substituteIndex];\n}\n\n/**\n * Get default script features indexes\n */\nFeatureQuery.prototype.getDefaultScriptFeaturesIndexes = function () {\n    const scripts = this.font.tables.gsub.scripts;\n    for (let s = 0; s < scripts.length; s++) {\n        const script = scripts[s];\n        if (script.tag === 'DFLT') return (\n            script.script.defaultLangSys.featureIndexes\n        );\n    }\n    return [];\n};\n\n/**\n * Get feature indexes of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeaturesIndexes = function(scriptTag) {\n    const tables = this.font.tables;\n    if (!tables.gsub) return [];\n    if (!scriptTag) return this.getDefaultScriptFeaturesIndexes();\n    const scripts = this.font.tables.gsub.scripts;\n    for (let i = 0; i < scripts.length; i++) {\n        const script = scripts[i];\n        if (script.tag === scriptTag && script.script.defaultLangSys) {\n            return script.script.defaultLangSys.featureIndexes;\n        } else {\n            let langSysRecords = script.langSysRecords;\n            if (!!langSysRecords) {\n                for (let j = 0; j < langSysRecords.length; j++) {\n                    const langSysRecord = langSysRecords[j];\n                    if (langSysRecord.tag === scriptTag) {\n                        let langSys = langSysRecord.langSys;\n                        return langSys.featureIndexes;\n                    }\n                }\n            }\n        }\n    }\n    return this.getDefaultScriptFeaturesIndexes();\n};\n\n/**\n * Map a feature tag to a gsub feature\n * @param {any} features gsub features\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.mapTagsToFeatures = function (features, scriptTag) {\n    let tags = {};\n    for (let i = 0; i < features.length; i++) {\n        const tag = features[i].tag;\n        const feature = features[i].feature;\n        tags[tag] = feature;\n    }\n    this.features[scriptTag].tags = tags;\n};\n\n/**\n * Get features of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeatures = function (scriptTag) {\n    let features = this.features[scriptTag];\n    if (this.features.hasOwnProperty(scriptTag)) return features;\n    const featuresIndexes = this.getScriptFeaturesIndexes(scriptTag);\n    if (!featuresIndexes) return null;\n    const gsub = this.font.tables.gsub;\n    features = featuresIndexes.map(index => gsub.features[index]);\n    this.features[scriptTag] = features;\n    this.mapTagsToFeatures(features, scriptTag);\n    return features;\n};\n\n/**\n * Get substitution type\n * @param {any} lookupTable lookup table\n * @param {any} subtable subtable\n */\nFeatureQuery.prototype.getSubstitutionType = function(lookupTable, subtable) {\n    const lookupType = lookupTable.lookupType.toString();\n    const substFormat = subtable.substFormat.toString();\n    return lookupType + substFormat;\n};\n\n/**\n * Get lookup method\n * @param {any} lookupTable lookup table\n * @param {any} subtable subtable\n */\nFeatureQuery.prototype.getLookupMethod = function(lookupTable, subtable) {\n    let substitutionType = this.getSubstitutionType(lookupTable, subtable);\n    switch (substitutionType) {\n        case '11':\n            return glyphIndex => singleSubstitutionFormat1.apply(\n                this, [glyphIndex, subtable]\n            );\n        case '12':\n            return glyphIndex => singleSubstitutionFormat2.apply(\n                this, [glyphIndex, subtable]\n            );\n        case '63':\n            return contextParams => chainingSubstitutionFormat3.apply(\n                this, [contextParams, subtable]\n            );\n        case '41':\n            return contextParams => ligatureSubstitutionFormat1.apply(\n                this, [contextParams, subtable]\n            );\n        case '21':\n            return glyphIndex => decompositionSubstitutionFormat1.apply(\n                this, [glyphIndex, subtable]\n            );\n        default:\n            throw new Error(\n                `lookupType: ${lookupTable.lookupType} - ` +\n                `substFormat: ${subtable.substFormat} ` +\n                `is not yet supported`\n            );\n    }\n};\n\n/**\n * [ LOOKUP TYPES ]\n * -------------------------------\n * Single                        1;\n * Multiple                      2;\n * Alternate                     3;\n * Ligature                      4;\n * Context                       5;\n * ChainingContext               6;\n * ExtensionSubstitution         7;\n * ReverseChainingContext        8;\n * -------------------------------\n *\n */\n\n/**\n * @typedef FQuery\n * @type Object\n * @param {string} tag feature tag\n * @param {string} script feature script\n * @param {ContextParams} contextParams context params\n */\n\n/**\n * Lookup a feature using a query parameters\n * @param {FQuery} query feature query\n */\nFeatureQuery.prototype.lookupFeature = function (query) {\n    let contextParams = query.contextParams;\n    let currentIndex = contextParams.index;\n    const feature = this.getFeature({\n        tag: query.tag, script: query.script\n    });\n    if (!feature) return new Error(\n        `font '${this.font.names.fullName.en}' ` +\n        `doesn't support feature '${query.tag}' ` +\n        `for script '${query.script}'.`\n    );\n    const lookups = this.getFeatureLookups(feature);\n    const substitutions = [].concat(contextParams.context);\n    for (let l = 0; l < lookups.length; l++) {\n        const lookupTable = lookups[l];\n        const subtables = this.getLookupSubtables(lookupTable);\n        for (let s = 0; s < subtables.length; s++) {\n            const subtable = subtables[s];\n            const substType = this.getSubstitutionType(lookupTable, subtable);\n            const lookup = this.getLookupMethod(lookupTable, subtable);\n            let substitution;\n            switch (substType) {\n                case '11':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 11, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '12':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 12, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '63':\n                    substitution = lookup(contextParams);\n                    if (Array.isArray(substitution) && substitution.length) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 63, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '41':\n                    substitution = lookup(contextParams);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 41, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '21':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 21, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n            }\n            contextParams = new ContextParams(substitutions, currentIndex);\n            if (Array.isArray(substitution) && !substitution.length) continue;\n            substitution = null;\n        }\n    }\n    return substitutions.length ? substitutions : null;\n};\n\n/**\n * Checks if a font supports a specific features\n * @param {FQuery} query feature query object\n */\nFeatureQuery.prototype.supports = function (query) {\n    if (!query.script) return false;\n    this.getScriptFeatures(query.script);\n    const supportedScript = this.features.hasOwnProperty(query.script);\n    if (!query.tag) return supportedScript;\n    const supportedFeature = (\n        this.features[query.script].some(feature => feature.tag === query.tag)\n    );\n    return supportedScript && supportedFeature;\n};\n\n/**\n * Get lookup table subtables\n * @param {any} lookupTable lookup table\n */\nFeatureQuery.prototype.getLookupSubtables = function (lookupTable) {\n    return lookupTable.subtables || null;\n};\n\n/**\n * Get lookup table by index\n * @param {number} index lookup table index\n */\nFeatureQuery.prototype.getLookupByIndex = function (index) {\n    const lookups = this.font.tables.gsub.lookups;\n    return lookups[index] || null;\n};\n\n/**\n * Get lookup tables for a feature\n * @param {string} feature\n */\nFeatureQuery.prototype.getFeatureLookups = function (feature) {\n    // TODO: memoize\n    return feature.lookupListIndexes.map(this.getLookupByIndex.bind(this));\n};\n\n/**\n * Query a feature by it's properties\n * @param {any} query an object that describes the properties of a query\n */\nFeatureQuery.prototype.getFeature = function getFeature(query) {\n    if (!this.font) return { FAIL: `No font was found`};\n    if (!this.features.hasOwnProperty(query.script)) {\n        this.getScriptFeatures(query.script);\n    }\n    const scriptFeatures = this.features[query.script];\n    if (!scriptFeatures) return (\n        { FAIL: `No feature for script ${query.script}`}\n    );\n    if (!scriptFeatures.tags[query.tag]) return null;\n    return this.features[query.script].tags[query.tag];\n};\n\nexport default FeatureQuery;\nexport { FeatureQuery, SubstitutionAction };\n", "/**\n * Arabic word context checkers\n */\n\nimport { isArabicChar } from '../../../char';\n\nfunction arabicWordStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? arabic first char\n        (prevChar === null && isArabicChar(char)) ||\n        // ? arabic char preceded with a non arabic char\n        (!isArabicChar(prevChar) && isArabicChar(char))\n    );\n}\n\nfunction arabicWordEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    return (\n        // ? last arabic char\n        (nextChar === null) ||\n        // ? next char is not arabic\n        (!isArabicChar(nextChar))\n    );\n}\n\nexport default {\n    startCheck: arabicWordStartCheck,\n    endCheck: arabicWordEndCheck\n};\n", "/**\n * Arabic sentence context checkers\n */\n\nimport { isArabicChar, isWhiteSpace, isTashkeelArabicChar } from '../../../char';\n\nfunction arabicSentenceStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? an arabic char preceded with a non arabic char\n        (isArabicChar(char) || isTashkeelArabicChar(char)) &&\n        !isArabicChar(prevChar)\n    );\n}\n\nfunction arabicSentenceEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    switch (true) {\n        case nextChar === null:\n            return true;\n        case (!isArabicChar(nextChar) && !isTashkeelArabicChar(nextChar)):\n            const nextIsWhitespace = isWhiteSpace(nextChar);\n            if (!nextIsWhitespace) return true;\n            if (nextIsWhitespace) {\n                let arabicCharAhead = false;\n                arabicCharAhead = (\n                    contextParams.lookahead.some(\n                        c => isArabicChar(c) || isTashkeelArabicChar(c)\n                    )\n                );\n                if (!arabicCharAhead) return true;\n            }\n            break;\n        default:\n            return false;\n    }\n}\n\nexport default {\n    startCheck: arabicSentenceStartCheck,\n    endCheck: arabicSentenceEndCheck\n};\n", "import { SubstitutionAction } from './featureQuery';\n\n/**\n * Apply single substitution format 1\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction singleSubstitutionFormat1(action, tokens, index) {\n    tokens[index].setState(action.tag, action.substitution);\n}\n\n/**\n * Apply single substitution format 2\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction singleSubstitutionFormat2(action, tokens, index) {\n    tokens[index].setState(action.tag, action.substitution);\n}\n\n/**\n * Apply chaining context substitution format 3\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction chainingSubstitutionFormat3(action, tokens, index) {\n    action.substitution.forEach((subst, offset) => {\n        const token = tokens[index + offset];\n        token.setState(action.tag, subst);\n    });\n}\n\n/**\n * Apply ligature substitution format 1\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction ligatureSubstitutionFormat1(action, tokens, index) {\n    let token = tokens[index];\n    token.setState(action.tag, action.substitution.ligGlyph);\n    const compsCount = action.substitution.components.length;\n    for (let i = 0; i < compsCount; i++) {\n        token = tokens[index + i + 1];\n        token.setState('deleted', true);\n    }\n}\n\n/**\n * Supported substitutions\n */\nconst SUBSTITUTIONS = {\n    11: singleSubstitutionFormat1,\n    12: singleSubstitutionFormat2,\n    63: chainingSubstitutionFormat3,\n    41: ligatureSubstitutionFormat1\n};\n\n/**\n * Apply substitutions to a list of tokens\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction applySubstitution(action, tokens, index) {\n    if (action instanceof SubstitutionAction && SUBSTITUTIONS[action.id]) {\n        SUBSTITUTIONS[action.id](action, tokens, index);\n    }\n}\n\nexport default applySubstitution;\n", "/**\n * Apply Arabic presentation forms to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport { isIsolatedArabicChar, isTashkeelArabicChar } from '../../char';\nimport { SubstitutionAction } from '../featureQuery';\nimport applySubstitution from '../applySubstitution';\n\n/**\n * Check if a char can be connected to it's preceding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectPrev(charContextParams) {\n    let backtrack = [].concat(charContextParams.backtrack);\n    for (let i = backtrack.length - 1; i >= 0; i--) {\n        const prevChar = backtrack[i];\n        const isolated = isIsolatedArabicChar(prevChar);\n        const tashkeel = isTashkeelArabicChar(prevChar);\n        if (!isolated && !tashkeel) return true;\n        if (isolated) return false;\n    }\n    return false;\n}\n\n/**\n * Check if a char can be connected to it's proceeding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectNext(charContextParams) {\n    if (isIsolatedArabicChar(charContextParams.current)) return false;\n    for (let i = 0; i < charContextParams.lookahead.length; i++) {\n        const nextChar = charContextParams.lookahead[i];\n        const tashkeel = isTashkeelArabicChar(nextChar);\n        if (!tashkeel) return true;\n    }\n    return false;\n}\n\n/**\n * Apply arabic presentation forms to a list of tokens\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicPresentationForms(range) {\n    const script = 'arab';\n    const tags = this.featuresTags[script];\n    const tokens = this.tokenizer.getRangeTokens(range);\n    if (tokens.length === 1) return;\n    let contextParams = new ContextParams(\n        tokens.map(token => token.getState('glyphIndex')\n    ), 0);\n    const charContextParams = new ContextParams(\n        tokens.map(token => token.char\n    ), 0);\n    tokens.forEach((token, index) => {\n        if (isTashkeelArabicChar(token.char)) return;\n        contextParams.setCurrentIndex(index);\n        charContextParams.setCurrentIndex(index);\n        let CONNECT = 0; // 2 bits 00 (10: can connect next) (01: can connect prev)\n        if (willConnectPrev(charContextParams)) CONNECT |= 1;\n        if (willConnectNext(charContextParams)) CONNECT |= 2;\n        let tag;\n        switch (CONNECT) {\n            case 1: (tag = 'fina'); break;\n            case 2: (tag = 'init'); break;\n            case 3: (tag = 'medi'); break;\n        }\n        if (tags.indexOf(tag) === -1) return;\n        let substitutions = this.query.lookupFeature({\n            tag, script, contextParams\n        });\n        if (substitutions instanceof Error) return console.info(substitutions.message);\n        substitutions.forEach((action, index) => {\n            if (action instanceof SubstitutionAction) {\n                applySubstitution(action, tokens, index);\n                contextParams.context[index] = action.substitution;\n            }\n        });\n    });\n}\n\nexport default arabicPresentationForms;\nexport { arabicPresentationForms };\n", "/**\n * Apply Arabic required ligatures feature to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport applySubstitution from '../applySubstitution';\n\n/**\n * Update context params\n * @param {any} tokens a list of tokens\n * @param {number} index current item index\n */\nfunction getContextParams(tokens, index) {\n    const context = tokens.map(token => token.activeState.value);\n    return new ContextParams(context, index || 0);\n}\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicRequiredLigatures(range) {\n    const script = 'arab';\n    let tokens = this.tokenizer.getRangeTokens(range);\n    let contextParams = getContextParams(tokens);\n    contextParams.context.forEach((glyphIndex, index) => {\n        contextParams.setCurrentIndex(index);\n        let substitutions = this.query.lookupFeature({\n            tag: 'rlig', script, contextParams\n        });\n        if (substitutions.length) {\n            substitutions.forEach(\n                action => applySubstitution(action, tokens, index)\n            );\n            contextParams = getContextParams(tokens);\n        }\n    });\n}\n\nexport default arabicRequiredLigatures;\nexport { arabicRequiredLigatures };\n", "/**\n * Latin word context checkers\n */\n\nimport { isLatinChar } from '../../../char';\n\nfunction latinWordStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? latin first char\n        (prevChar === null && isLatinChar(char)) ||\n        // ? latin char preceded with a non latin char\n        (!isLatinChar(prevChar) && isLatinChar(char))\n    );\n}\n\nfunction latinWordEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    return (\n        // ? last latin char\n        (nextChar === null) ||\n        // ? next char is not latin\n        (!isLatinChar(nextChar))\n    );\n}\n\nexport default {\n    startCheck: latinWordStartCheck,\n    endCheck: latinWordEndCheck\n};\n", "/**\n * Apply Latin ligature feature to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport applySubstitution from '../applySubstitution';\n\n/**\n * Update context params\n * @param {any} tokens a list of tokens\n * @param {number} index current item index\n */\nfunction getContextParams(tokens, index) {\n    const context = tokens.map(token => token.activeState.value);\n    return new ContextParams(context, index || 0);\n}\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction latinLigature(range) {\n    const script = 'latn';\n    let tokens = this.tokenizer.getRangeTokens(range);\n    let contextParams = getContextParams(tokens);\n    contextParams.context.forEach((glyphIndex, index) => {\n        contextParams.setCurrentIndex(index);\n        let substitutions = this.query.lookupFeature({\n            tag: 'liga', script, contextParams\n        });\n        if (substitutions.length) {\n            substitutions.forEach(\n                action => applySubstitution(action, tokens, index)\n            );\n            contextParams = getContextParams(tokens);\n        }\n    });\n}\n\nexport default latinLigature;\n", "/**\n * Infer bidirectional properties for a given text and apply\n * the corresponding layout rules.\n */\n\nimport Tokenizer from './tokenizer';\nimport FeatureQuery from './features/featureQuery';\nimport arabicWordCheck from './features/arab/contextCheck/arabicWord';\nimport arabicSentenceCheck from './features/arab/contextCheck/arabicSentence';\nimport arabicPresentationForms from './features/arab/arabicPresentationForms';\nimport arabicRequiredLigatures from './features/arab/arabicRequiredLigatures';\nimport latinWordCheck from './features/latn/contextCheck/latinWord';\nimport latinLigature from './features/latn/latinLigatures';\n\n/**\n * Create Bidi. features\n * @param {string} baseDir text base direction. value either 'ltr' or 'rtl'\n */\nfunction Bidi(baseDir) {\n    this.baseDir = baseDir || 'ltr';\n    this.tokenizer = new Tokenizer();\n    this.featuresTags = {};\n}\n\n/**\n * Sets Bidi text\n * @param {string} text a text input\n */\nBidi.prototype.setText = function (text) {\n    this.text = text;\n};\n\n/**\n * Store essential context checks:\n * arabic word check for applying gsub features\n * arabic sentence check for adjusting arabic layout\n */\nBidi.prototype.contextChecks = ({\n    latinWordCheck,\n    arabicWordCheck,\n    arabicSentenceCheck\n});\n\n/**\n * Register arabic word check\n */\nfunction registerContextChecker(checkId) {\n    const check = this.contextChecks[`${checkId}Check`];\n    return this.tokenizer.registerContextChecker(\n        checkId, check.startCheck, check.endCheck\n    );\n}\n\n/**\n * Perform pre tokenization procedure then\n * tokenize text input\n */\nfunction tokenizeText() {\n    registerContextChecker.call(this, 'latinWord');\n    registerContextChecker.call(this, 'arabicWord');\n    registerContextChecker.call(this, 'arabicSentence');\n    return this.tokenizer.tokenize(this.text);\n}\n\n/**\n * Reverse arabic sentence layout\n * TODO: check base dir before applying adjustments - priority low\n */\nfunction reverseArabicSentences() {\n    const ranges = this.tokenizer.getContextRanges('arabicSentence');\n    ranges.forEach(range => {\n        let rangeTokens = this.tokenizer.getRangeTokens(range);\n        this.tokenizer.replaceRange(\n            range.startIndex,\n            range.endOffset,\n            rangeTokens.reverse()\n        );\n    });\n}\n\n/**\n * Register supported features tags\n * @param {script} script script tag\n * @param {Array} tags features tags list\n */\nBidi.prototype.registerFeatures = function (script, tags) {\n    const supportedTags = tags.filter(\n        tag => this.query.supports({script, tag})\n    );\n    if (!this.featuresTags.hasOwnProperty(script)) {\n        this.featuresTags[script] = supportedTags;\n    } else {\n        this.featuresTags[script] =\n        this.featuresTags[script].concat(supportedTags);\n    }\n};\n\n/**\n * Apply GSUB features\n * @param {Array} tagsList a list of features tags\n * @param {string} script a script tag\n * @param {Font} font opentype font instance\n */\nBidi.prototype.applyFeatures = function (font, features) {\n    if (!font) throw new Error(\n        'No valid font was provided to apply features'\n    );\n    if (!this.query) this.query = new FeatureQuery(font);\n    for (let f = 0; f < features.length; f++) {\n        const feature = features[f];\n        if (!this.query.supports({script: feature.script})) continue;\n        this.registerFeatures(feature.script, feature.tags);\n    }\n};\n\n/**\n * Register a state modifier\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a modifier function to set token state\n */\nBidi.prototype.registerModifier = function (modifierId, condition, modifier) {\n    this.tokenizer.registerModifier(modifierId, condition, modifier);\n};\n\n/**\n * Check if 'glyphIndex' is registered\n */\nfunction checkGlyphIndexStatus() {\n    if (this.tokenizer.registeredModifiers.indexOf('glyphIndex') === -1) {\n        throw new Error(\n            'glyphIndex modifier is required to apply ' +\n            'arabic presentation features.'\n        );\n    }\n}\n\n/**\n * Apply arabic presentation forms features\n */\nfunction applyArabicPresentationForms() {\n    const script = 'arab';\n    if (!this.featuresTags.hasOwnProperty(script)) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(range => {\n        arabicPresentationForms.call(this, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyArabicRequireLigatures() {\n    const script = 'arab';\n    if (!this.featuresTags.hasOwnProperty(script)) return;\n    const tags = this.featuresTags[script];\n    if (tags.indexOf('rlig') === -1) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(range => {\n        arabicRequiredLigatures.call(this, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyLatinLigatures() {\n    const script = 'latn';\n    if (!this.featuresTags.hasOwnProperty(script)) return;\n    const tags = this.featuresTags[script];\n    if (tags.indexOf('liga') === -1) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('latinWord');\n    ranges.forEach(range => {\n        latinLigature.call(this, range);\n    });\n}\n\n/**\n * Check if a context is registered\n * @param {string} contextId context id\n */\nBidi.prototype.checkContextReady = function (contextId) {\n    return !!this.tokenizer.getContext(contextId);\n};\n\n/**\n * Apply features to registered contexts\n */\nBidi.prototype.applyFeaturesToContexts = function () {\n    if (this.checkContextReady('arabicWord')) {\n        applyArabicPresentationForms.call(this);\n        applyArabicRequireLigatures.call(this);\n    }\n    if (this.checkContextReady('latinWord')) {\n        applyLatinLigatures.call(this);\n    }\n    if (this.checkContextReady('arabicSentence')) {\n        reverseArabicSentences.call(this);\n    }\n};\n\n/**\n * process text input\n * @param {string} text an input text\n */\nBidi.prototype.processText = function(text) {\n    if (!this.text || this.text !== text) {\n        this.setText(text);\n        tokenizeText.call(this);\n        this.applyFeaturesToContexts();\n    }\n};\n\n/**\n * Process a string of text to identify and adjust\n * bidirectional text entities.\n * @param {string} text input text\n */\nBidi.prototype.getBidiText = function (text) {\n    this.processText(text);\n    return this.tokenizer.getText();\n};\n\n/**\n * Get the current state index of each token\n * @param {text} text an input text\n */\nBidi.prototype.getTextGlyphs = function (text) {\n    this.processText(text);\n    let indexes = [];\n    for (let i = 0; i < this.tokenizer.tokens.length; i++) {\n        const token = this.tokenizer.tokens[i];\n        if (token.state.deleted) continue;\n        const index = token.activeState.value;\n        indexes.push(Array.isArray(index) ? index[0] : index);\n    }\n    return indexes;\n};\n\nexport default Bidi;\n", "// The Font object\n\nimport Path from './path';\nimport sfnt from './tables/sfnt';\nimport { DefaultEncoding } from './encoding';\nimport glyphset from './glyphset';\nimport Position from './position';\nimport Substitution from './substitution';\nimport { isBrowser, checkArgument, arrayBufferToNodeBuffer } from './util';\nimport HintingTrueType from './hintingtt';\nimport Bidi from './bidi';\n\n/**\n * @typedef FontOptions\n * @type Object\n * @property {Boolean} empty - whether to create a new empty font\n * @property {string} familyName\n * @property {string} styleName\n * @property {string=} fullName\n * @property {string=} postScriptName\n * @property {string=} designer\n * @property {string=} designerURL\n * @property {string=} manufacturer\n * @property {string=} manufacturerURL\n * @property {string=} license\n * @property {string=} licenseURL\n * @property {string=} version\n * @property {string=} description\n * @property {string=} copyright\n * @property {string=} trademark\n * @property {Number} unitsPerEm\n * @property {Number} ascender\n * @property {Number} descender\n * @property {Number} createdTimestamp\n * @property {string=} weightClass\n * @property {string=} widthClass\n * @property {string=} fsSelection\n */\n\n/**\n * A Font represents a loaded OpenType font file.\n * It contains a set of glyphs and methods to draw text on a drawing context,\n * or to get a path representing the text.\n * @exports opentype.Font\n * @class\n * @param {FontOptions}\n * @constructor\n */\nfunction Font(options) {\n    options = options || {};\n    options.tables = options.tables || {};\n\n    if (!options.empty) {\n        // Check that we've provided the minimum set of names.\n        checkArgument(options.familyName, 'When creating a new Font object, familyName is required.');\n        checkArgument(options.styleName, 'When creating a new Font object, styleName is required.');\n        checkArgument(options.unitsPerEm, 'When creating a new Font object, unitsPerEm is required.');\n        checkArgument(options.ascender, 'When creating a new Font object, ascender is required.');\n        checkArgument(options.descender <= 0, 'When creating a new Font object, negative descender value is required.');\n\n        // OS X will complain if the names are empty, so we put a single space everywhere by default.\n        this.names = {\n            fontFamily: {en: options.familyName || ' '},\n            fontSubfamily: {en: options.styleName || ' '},\n            fullName: {en: options.fullName || options.familyName + ' ' + options.styleName},\n            // postScriptName may not contain any whitespace\n            postScriptName: {en: options.postScriptName || (options.familyName + options.styleName).replace(/\\s/g, '')},\n            designer: {en: options.designer || ' '},\n            designerURL: {en: options.designerURL || ' '},\n            manufacturer: {en: options.manufacturer || ' '},\n            manufacturerURL: {en: options.manufacturerURL || ' '},\n            license: {en: options.license || ' '},\n            licenseURL: {en: options.licenseURL || ' '},\n            version: {en: options.version || 'Version 0.1'},\n            description: {en: options.description || ' '},\n            copyright: {en: options.copyright || ' '},\n            trademark: {en: options.trademark || ' '}\n        };\n        this.unitsPerEm = options.unitsPerEm || 1000;\n        this.ascender = options.ascender;\n        this.descender = options.descender;\n        this.createdTimestamp = options.createdTimestamp;\n        this.tables = Object.assign(options.tables, {\n            os2: Object.assign({\n                usWeightClass: options.weightClass || this.usWeightClasses.MEDIUM,\n                usWidthClass: options.widthClass || this.usWidthClasses.MEDIUM,\n                fsSelection: options.fsSelection || this.fsSelectionValues.REGULAR,\n            }, options.tables.os2)\n        });\n    }\n\n    this.supported = true; // Deprecated: parseBuffer will throw an error if font is not supported.\n    this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n    this.encoding = new DefaultEncoding(this);\n    this.position = new Position(this);\n    this.substitution = new Substitution(this);\n    this.tables = this.tables || {};\n\n    // needed for low memory mode only.\n    this._push = null;\n    this._hmtxTableData = {};\n\n    Object.defineProperty(this, 'hinting', {\n        get: function() {\n            if (this._hinting) return this._hinting;\n            if (this.outlinesFormat === 'truetype') {\n                return (this._hinting = new HintingTrueType(this));\n            }\n        }\n    });\n}\n\n/**\n * Check if the font has a glyph for the given character.\n * @param  {string}\n * @return {Boolean}\n */\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n/**\n * Convert the given character to a single glyph index.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n/**\n * Convert the given character to a single Glyph object.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.charToGlyph = function(c) {\n    const glyphIndex = this.charToGlyphIndex(c);\n    let glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * Update features\n * @param {any} options features options\n */\nFont.prototype.updateFeatures = function (options) {\n    // TODO: update all features options not only 'latn'.\n    return this.defaultRenderOptions.features.map(feature => {\n        if (feature.script === 'latn') {\n            return {\n                script: 'latn',\n                tags: feature.tags.filter(tag => options[tag])\n            };\n        } else {\n            return feature;\n        }\n    });\n};\n\n/**\n * Convert the given text to a list of Glyph objects.\n * Note that there is no strict one-to-one mapping between characters and\n * glyphs, so the list of returned glyphs can be larger or smaller than the\n * length of the given string.\n * @param  {string}\n * @param  {GlyphRenderOptions} [options]\n * @return {opentype.Glyph[]}\n */\nFont.prototype.stringToGlyphs = function(s, options) {\n\n    const bidi = new Bidi();\n\n    // Create and register 'glyphIndex' state modifier\n    const charToGlyphIndexMod = token => this.charToGlyphIndex(token.char);\n    bidi.registerModifier('glyphIndex', null, charToGlyphIndexMod);\n\n    // roll-back to default features\n    let features = options ?\n    this.updateFeatures(options.features) :\n    this.defaultRenderOptions.features;\n\n    bidi.applyFeatures(this, features);\n\n    const indexes = bidi.getTextGlyphs(s);\n\n    let length = indexes.length;\n\n    // convert glyph indexes to glyph objects\n    const glyphs = new Array(length);\n    const notdef = this.glyphs.get(0);\n    for (let i = 0; i < length; i += 1) {\n        glyphs[i] = this.glyphs.get(indexes[i]) || notdef;\n    }\n    return glyphs;\n};\n\n/**\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\n/**\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.nameToGlyph = function(name) {\n    const glyphIndex = this.nameToGlyphIndex(name);\n    let glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * @param  {Number}\n * @return {String}\n */\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n/**\n * Retrieve the value of the kerning pair between the left glyph (or its index)\n * and the right glyph (or its index). If no kerning pair is found, return 0.\n * The kerning value gets added to the advance width when calculating the spacing\n * between glyphs.\n * For GPOS kerning, this method uses the default script and language, which covers\n * most use cases. To have greater control, use font.position.getKerningValue .\n * @param  {opentype.Glyph} leftGlyph\n * @param  {opentype.Glyph} rightGlyph\n * @return {Number}\n */\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    const gposKerning = this.position.defaultKerningTables;\n    if (gposKerning) {\n        return this.position.getKerningValue(gposKerning, leftGlyph, rightGlyph);\n    }\n    // \"kern\" table\n    return this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0;\n};\n\n/**\n * @typedef GlyphRenderOptions\n * @type Object\n * @property {string} [script] - script used to determine which features to apply. By default, 'DFLT' or 'latn' is used.\n *                               See https://www.microsoft.com/typography/otspec/scripttags.htm\n * @property {string} [language='dflt'] - language system used to determine which features to apply.\n *                                        See https://www.microsoft.com/typography/developers/opentype/languagetags.aspx\n * @property {boolean} [kerning=true] - whether to include kerning values\n * @property {object} [features] - OpenType Layout feature tags. Used to enable or disable the features of the given script/language system.\n *                                 See https://www.microsoft.com/typography/otspec/featuretags.htm\n */\nFont.prototype.defaultRenderOptions = {\n    kerning: true,\n    features: [\n        /**\n         * these 4 features are required to render Arabic text properly\n         * and shouldn't be turned off when rendering arabic text.\n         */\n        { script: 'arab', tags: ['init', 'medi', 'fina', 'rlig'] },\n        { script: 'latn', tags: ['liga', 'rlig'] }\n    ]\n};\n\n/**\n * Helper function that invokes the given callback for each glyph in the given text.\n * The callback gets `(glyph, x, y, fontSize, options)`.* @param  {string} text\n * @param {string} text - The text to apply.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @param  {Function} callback\n */\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = Object.assign({}, this.defaultRenderOptions, options);\n    const fontScale = 1 / this.unitsPerEm * fontSize;\n    const glyphs = this.stringToGlyphs(text, options);\n    let kerningLookups;\n    if (options.kerning) {\n        const script = options.script || this.position.getDefaultScriptName();\n        kerningLookups = this.position.getKerningTables(script, options.language);\n    }\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs[i];\n        callback.call(this, glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (options.kerning && i < glyphs.length - 1) {\n            // We should apply position adjustment lookups in a more generic way.\n            // Here we only use the xAdvance value.\n            const kerningValue = kerningLookups ?\n                  this.position.getKerningValue(kerningLookups, glyph.index, glyphs[i + 1].index) :\n                  this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n\n        if (options.letterSpacing) {\n            x += options.letterSpacing * fontSize;\n        } else if (options.tracking) {\n            x += (options.tracking / 1000) * fontSize;\n        }\n    }\n    return x;\n};\n\n/**\n * Create a Path object that represents the given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path}\n */\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    const fullPath = new Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        const glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n        fullPath.extend(glyphPath);\n    });\n    return fullPath;\n};\n\n/**\n * Create an array of Path objects that represent the glyphs of a given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path[]}\n */\nFont.prototype.getPaths = function(text, x, y, fontSize, options) {\n    const glyphPaths = [];\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        const glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n        glyphPaths.push(glyphPath);\n    });\n\n    return glyphPaths;\n};\n\n/**\n * Returns the advance width of a text.\n *\n * This is something different than Path.getBoundingBox() as for example a\n * suffixed whitespace increases the advanceWidth but not the bounding box\n * or an overhanging letter like a calligraphic 'f' might have a quite larger\n * bounding box than its advance width.\n *\n * This corresponds to canvas2dContext.measureText(text).width\n *\n * @param  {string} text - The text to create.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return advance width\n */\nFont.prototype.getAdvanceWidth = function(text, fontSize, options) {\n    return this.forEachGlyph(text, 0, 0, fontSize, options, function() {});\n};\n\n/**\n * Draw the text on the given drawing context.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n */\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n/**\n * Draw the points of all glyphs in the text.\n * On-curve points will be drawn in blue, off-curve points will be drawn in red.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param {string} text - The text to create.\n * @param {number} [x=0] - Horizontal position of the beginning of the text.\n * @param {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param {GlyphRenderOptions=} options\n */\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n/**\n * Draw lines indicating important font measurements for all glyphs in the text.\n * Black lines indicate the origin of the coordinate system (point 0,0).\n * Blue lines indicate the glyph bounding box.\n * Green line indicates the advance width of the glyph.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param {string} text - The text to create.\n * @param {number} [x=0] - Horizontal position of the beginning of the text.\n * @param {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param {GlyphRenderOptions=} options\n */\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n/**\n * @param  {string}\n * @return {string}\n */\nFont.prototype.getEnglishName = function(name) {\n    const translations = this.names[name];\n    if (translations) {\n        return translations.en;\n    }\n};\n\n/**\n * Validate\n */\nFont.prototype.validate = function() {\n    const warnings = [];\n    const _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertNamePresent(name) {\n        const englishName = _this.getEnglishName(name);\n        assert(englishName && englishName.trim().length > 0,\n               'No English ' + name + ' specified.');\n    }\n\n    // Identification information\n    assertNamePresent('fontFamily');\n    assertNamePresent('weightName');\n    assertNamePresent('manufacturer');\n    assertNamePresent('copyright');\n    assertNamePresent('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n/**\n * Convert the font object to a SFNT data structure.\n * This structure contains all the necessary tables and metadata to create a binary OTF file.\n * @return {opentype.Table}\n */\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n/**\n * @deprecated Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.\n */\nFont.prototype.toBuffer = function() {\n    console.warn('Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.');\n    return this.toArrayBuffer();\n};\n/**\n * Converts a `opentype.Font` into an `ArrayBuffer`\n * @return {ArrayBuffer}\n */\nFont.prototype.toArrayBuffer = function() {\n    const sfntTable = this.toTables();\n    const bytes = sfntTable.encode();\n    const buffer = new ArrayBuffer(bytes.length);\n    const intArray = new Uint8Array(buffer);\n    for (let i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n/**\n * Initiate a download of the OpenType font.\n */\nFont.prototype.download = function(fileName) {\n    const familyName = this.getEnglishName('fontFamily');\n    const styleName = this.getEnglishName('fontSubfamily');\n    fileName = fileName || familyName.replace(/\\s/g, '') + '-' + styleName + '.otf';\n    const arrayBuffer = this.toArrayBuffer();\n\n    if (isBrowser()) {\n        window.URL = window.URL || window.webkitURL;\n\n        if (window.URL) {\n            const dataView = new DataView(arrayBuffer);\n            const blob = new Blob([dataView], {type: 'font/opentype'});\n\n            let link = document.createElement('a');\n            link.href = window.URL.createObjectURL(blob);\n            link.download = fileName;\n\n            let event = document.createEvent('MouseEvents');\n            event.initEvent('click', true, false);\n            link.dispatchEvent(event);\n        } else {\n            console.warn('Font file could not be downloaded. Try using a different browser.');\n        }\n    } else {\n        const fs = require('fs');\n        const buffer = arrayBufferToNodeBuffer(arrayBuffer);\n        fs.writeFileSync(fileName, buffer);\n    }\n};\n/**\n * @private\n */\nFont.prototype.fsSelectionValues = {\n    ITALIC:              0x001, //1\n    UNDERSCORE:          0x002, //2\n    NEGATIVE:            0x004, //4\n    OUTLINED:            0x008, //8\n    STRIKEOUT:           0x010, //16\n    BOLD:                0x020, //32\n    REGULAR:             0x040, //64\n    USER_TYPO_METRICS:   0x080, //128\n    WWS:                 0x100, //256\n    OBLIQUE:             0x200  //512\n};\n\n/**\n * @private\n */\nFont.prototype.usWidthClasses = {\n    ULTRA_CONDENSED: 1,\n    EXTRA_CONDENSED: 2,\n    CONDENSED: 3,\n    SEMI_CONDENSED: 4,\n    MEDIUM: 5,\n    SEMI_EXPANDED: 6,\n    EXPANDED: 7,\n    EXTRA_EXPANDED: 8,\n    ULTRA_EXPANDED: 9\n};\n\n/**\n * @private\n */\nFont.prototype.usWeightClasses = {\n    THIN: 100,\n    EXTRA_LIGHT: 200,\n    LIGHT: 300,\n    NORMAL: 400,\n    MEDIUM: 500,\n    SEMI_BOLD: 600,\n    BOLD: 700,\n    EXTRA_BOLD: 800,\n    BLACK:    900\n};\n\nexport default Font;\n", "// The `fvar` table stores font variation axes and instances.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6fvar.html\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction addName(name, names) {\n    const nameString = JSON.stringify(name);\n    let nameID = 256;\n    for (let nameKey in names) {\n        let n = parseInt(nameKey);\n        if (!n || n < 256) {\n            continue;\n        }\n\n        if (JSON.stringify(names[nameKey]) === nameString) {\n            return n;\n        }\n\n        if (nameID <= n) {\n            nameID = n + 1;\n        }\n    }\n\n    names[nameID] = name;\n    return nameID;\n}\n\nfunction makeFvarAxis(n, axis, names) {\n    const nameID = addName(axis.name, names);\n    return [\n        {name: 'tag_' + n, type: 'TAG', value: axis.tag},\n        {name: 'minValue_' + n, type: 'FIXED', value: axis.minValue << 16},\n        {name: 'defaultValue_' + n, type: 'FIXED', value: axis.defaultValue << 16},\n        {name: 'maxValue_' + n, type: 'FIXED', value: axis.maxValue << 16},\n        {name: 'flags_' + n, type: 'USHORT', value: 0},\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID}\n    ];\n}\n\nfunction parseFvarAxis(data, start, names) {\n    const axis = {};\n    const p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction makeFvarInstance(n, inst, axes, names) {\n    const nameID = addName(inst.name, names);\n    const fields = [\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID},\n        {name: 'flags_' + n, type: 'USHORT', value: 0}\n    ];\n\n    for (let i = 0; i < axes.length; ++i) {\n        const axisTag = axes[i].tag;\n        fields.push({\n            name: 'axis_' + n + ' ' + axisTag,\n            type: 'FIXED',\n            value: inst.coordinates[axisTag] << 16\n        });\n    }\n\n    return fields;\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    const inst = {};\n    const p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (let i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction makeFvarTable(fvar, names) {\n    const result = new table.Table('fvar', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'offsetToData', type: 'USHORT', value: 0},\n        {name: 'countSizePairs', type: 'USHORT', value: 2},\n        {name: 'axisCount', type: 'USHORT', value: fvar.axes.length},\n        {name: 'axisSize', type: 'USHORT', value: 20},\n        {name: 'instanceCount', type: 'USHORT', value: fvar.instances.length},\n        {name: 'instanceSize', type: 'USHORT', value: 4 + fvar.axes.length * 4}\n    ]);\n    result.offsetToData = result.sizeOf();\n\n    for (let i = 0; i < fvar.axes.length; i++) {\n        result.fields = result.fields.concat(makeFvarAxis(i, fvar.axes[i], names));\n    }\n\n    for (let j = 0; j < fvar.instances.length; j++) {\n        result.fields = result.fields.concat(makeFvarInstance(j, fvar.instances[j], fvar.axes, names));\n    }\n\n    return result;\n}\n\nfunction parseFvarTable(data, start, names) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n    const offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    const axisCount = p.parseUShort();\n    const axisSize = p.parseUShort();\n    const instanceCount = p.parseUShort();\n    const instanceSize = p.parseUShort();\n\n    const axes = [];\n    for (let i = 0; i < axisCount; i++) {\n        axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n    }\n\n    const instances = [];\n    const instanceStart = start + offsetToData + axisCount * axisSize;\n    for (let j = 0; j < instanceCount; j++) {\n        instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n    }\n\n    return {axes: axes, instances: instances};\n}\n\nexport default { make: makeFvarTable, parse: parseFvarTable };\n", "// The `GDEF` table contains various glyph properties\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gdef\n\nimport check from '../check';\nimport { Parser } from '../parse';\n\nvar attachList = function() {\n    return {\n        coverage: this.parsePointer(Parser.coverage),\n        attachPoints: this.parseList(Parser.pointer(Parser.uShortList))\n    };\n};\n\nvar caretValue = function() {\n    var format = this.parseUShort();\n    check.argument(format === 1 || format === 2 || format === 3,\n        'Unsupported CaretValue table version.');\n    if (format === 1) {\n        return { coordinate: this.parseShort() };\n    } else if (format === 2) {\n        return { pointindex: this.parseShort() };\n    } else if (format === 3) {\n        // Device / Variation Index tables unsupported\n        return { coordinate: this.parseShort() };\n    }\n};\n\nvar ligGlyph = function() {\n    return this.parseList(Parser.pointer(caretValue));\n};\n\nvar ligCaretList = function() {\n    return {\n        coverage: this.parsePointer(Parser.coverage),\n        ligGlyphs: this.parseList(Parser.pointer(ligGlyph))\n    };\n};\n\nvar markGlyphSets = function() {\n    this.parseUShort(); // Version\n    return this.parseList(Parser.pointer(Parser.coverage));\n};\n\nfunction parseGDEFTable(data, start) {\n    start = start || 0;\n    const p = new Parser(data, start);\n    const tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.2 || tableVersion === 1.3,\n        'Unsupported GDEF table version.');\n    var gdef = {\n        version: tableVersion,\n        classDef: p.parsePointer(Parser.classDef),\n        attachList: p.parsePointer(attachList),\n        ligCaretList: p.parsePointer(ligCaretList),\n        markAttachClassDef: p.parsePointer(Parser.classDef)\n    };\n    if (tableVersion >= 1.2) {\n        gdef.markGlyphSets = p.parsePointer(markGlyphSets);\n    }\n    return gdef;\n}\nexport default { parse: parseGDEFTable };\n", "// The `GPOS` table contains kerning pairs, among other things.\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos\n\nimport check from '../check';\nimport { Parser } from '../parse';\nimport table from '../table';\n\nconst subtableParsers = new Array(10);         // subtableParsers[0] is unused\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-1-single-adjustment-positioning-subtable\n// this = Parser instance\nsubtableParsers[1] = function parseLookup1() {\n    const start = this.offset + this.relativeOffset;\n    const posformat = this.parseUShort();\n    if (posformat === 1) {\n        return {\n            posFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            value: this.parseValueRecord()\n        };\n    } else if (posformat === 2) {\n        return {\n            posFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            values: this.parseValueRecordList()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': GPOS lookup type 1 format must be 1 or 2.');\n};\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-2-pair-adjustment-positioning-subtable\nsubtableParsers[2] = function parseLookup2() {\n    const start = this.offset + this.relativeOffset;\n    const posFormat = this.parseUShort();\n    check.assert(posFormat === 1 || posFormat === 2, '0x' + start.toString(16) + ': GPOS lookup type 2 format must be 1 or 2.');\n    const coverage = this.parsePointer(Parser.coverage);\n    const valueFormat1 = this.parseUShort();\n    const valueFormat2 = this.parseUShort();\n    if (posFormat === 1) {\n        // Adjustments for Glyph Pairs\n        return {\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            pairSets: this.parseList(Parser.pointer(Parser.list(function() {\n                return {        // pairValueRecord\n                    secondGlyph: this.parseUShort(),\n                    value1: this.parseValueRecord(valueFormat1),\n                    value2: this.parseValueRecord(valueFormat2)\n                };\n            })))\n        };\n    } else if (posFormat === 2) {\n        const classDef1 = this.parsePointer(Parser.classDef);\n        const classDef2 = this.parsePointer(Parser.classDef);\n        const class1Count = this.parseUShort();\n        const class2Count = this.parseUShort();\n        return {\n            // Class Pair Adjustment\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            classDef1: classDef1,\n            classDef2: classDef2,\n            class1Count: class1Count,\n            class2Count: class2Count,\n            classRecords: this.parseList(class1Count, Parser.list(class2Count, function() {\n                return {\n                    value1: this.parseValueRecord(valueFormat1),\n                    value2: this.parseValueRecord(valueFormat2)\n                };\n            }))\n        };\n    }\n};\n\nsubtableParsers[3] = function parseLookup3() { return { error: 'GPOS Lookup 3 not supported' }; };\nsubtableParsers[4] = function parseLookup4() { return { error: 'GPOS Lookup 4 not supported' }; };\nsubtableParsers[5] = function parseLookup5() { return { error: 'GPOS Lookup 5 not supported' }; };\nsubtableParsers[6] = function parseLookup6() { return { error: 'GPOS Lookup 6 not supported' }; };\nsubtableParsers[7] = function parseLookup7() { return { error: 'GPOS Lookup 7 not supported' }; };\nsubtableParsers[8] = function parseLookup8() { return { error: 'GPOS Lookup 8 not supported' }; };\nsubtableParsers[9] = function parseLookup9() { return { error: 'GPOS Lookup 9 not supported' }; };\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos\nfunction parseGposTable(data, start) {\n    start = start || 0;\n    const p = new Parser(data, start);\n    const tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.1, 'Unsupported GPOS table version ' + tableVersion);\n\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers)\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n            variations: p.parseFeatureVariationsList()\n        };\n    }\n\n}\n\n// GPOS Writing //////////////////////////////////////////////\n// NOT SUPPORTED\nconst subtableMakers = new Array(10);\n\nfunction makeGposTable(gpos) {\n    return new table.Table('GPOS', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gpos.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gpos.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gpos.lookups, subtableMakers)}\n    ]);\n}\n\nexport default { parse: parseGposTable, make: makeGposTable };\n", "// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\nimport check from '../check';\nimport parse from '../parse';\n\nfunction parseWindowsKernTable(p) {\n    const pairs = {};\n    // Skip nTables.\n    p.skip('uShort');\n    const subtableVersion = p.parseUShort();\n    check.argument(subtableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subtableLength, subtableCoverage\n    p.skip('uShort', 2);\n    const nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (let i = 0; i < nPairs; i += 1) {\n        const leftIndex = p.parseUShort();\n        const rightIndex = p.parseUShort();\n        const value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n    return pairs;\n}\n\nfunction parseMacKernTable(p) {\n    const pairs = {};\n    // The Mac kern table stores the version as a fixed (32 bits) but we only loaded the first 16 bits.\n    // Skip the rest.\n    p.skip('uShort');\n    const nTables = p.parseULong();\n    //check.argument(nTables === 1, 'Only 1 subtable is supported (got ' + nTables + ').');\n    if (nTables > 1) {\n        console.warn('Only the first kern subtable is supported.');\n    }\n    p.skip('uLong');\n    const coverage = p.parseUShort();\n    const subtableVersion = coverage & 0xFF;\n    p.skip('uShort');\n    if (subtableVersion === 0) {\n        const nPairs = p.parseUShort();\n        // Skip searchRange, entrySelector, rangeShift.\n        p.skip('uShort', 3);\n        for (let i = 0; i < nPairs; i += 1) {\n            const leftIndex = p.parseUShort();\n            const rightIndex = p.parseUShort();\n            const value = p.parseShort();\n            pairs[leftIndex + ',' + rightIndex] = value;\n        }\n    }\n    return pairs;\n}\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseUShort();\n    if (tableVersion === 0) {\n        return parseWindowsKernTable(p);\n    } else if (tableVersion === 1) {\n        return parseMacKernTable(p);\n    } else {\n        throw new Error('Unsupported kern table version (' + tableVersion + ').');\n    }\n}\n\nexport default { parse: parseKernTable };\n", "// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\nimport parse from '../parse';\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    const p = new parse.Parser(data, start);\n    const parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    const glyphOffsets = [];\n    for (let i = 0; i < numGlyphs + 1; i += 1) {\n        let glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexport default { parse: parseLocaTable };\n", "// opentype.js\n// https://github.com/opentypejs/opentype.js\n// (c) 2015 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global DataView, Uint8Array, XMLHttpRequest  */\n\nimport 'string.prototype.codepointat';\nimport inflate from 'tiny-inflate';\nimport Font from './font';\nimport Glyph from './glyph';\nimport { CmapEncoding, GlyphNames, addGlyphNames } from './encoding';\nimport parse from './parse';\nimport BoundingBox from './bbox';\nimport Path from './path';\nimport { nodeBufferToArrayBuffer } from './util';\nimport cmap from './tables/cmap';\nimport cff from './tables/cff';\nimport fvar from './tables/fvar';\nimport glyf from './tables/glyf';\nimport gdef from './tables/gdef';\nimport gpos from './tables/gpos';\nimport gsub from './tables/gsub';\nimport head from './tables/head';\nimport hhea from './tables/hhea';\nimport hmtx from './tables/hmtx';\nimport kern from './tables/kern';\nimport ltag from './tables/ltag';\nimport loca from './tables/loca';\nimport maxp from './tables/maxp';\nimport _name from './tables/name';\nimport os2 from './tables/os2';\nimport post from './tables/post';\nimport meta from './tables/meta';\n\n/**\n * The opentype library.\n * @namespace opentype\n */\n\n// File loaders /////////////////////////////////////////////////////////\n/**\n * Loads a font from a file. The callback throws an error message as the first parameter if it fails\n * and the font as an ArrayBuffer in the second parameter if it succeeds.\n * @param  {string} path - The path of the file\n * @param  {Function} callback - The function to call when the font load completes\n */\nfunction loadFromFile(path, callback) {\n    const fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, nodeBufferToArrayBuffer(buffer));\n    });\n}\n/**\n * Loads a font from a URL. The callback throws an error message as the first parameter if it fails\n * and the font as an ArrayBuffer in the second parameter if it succeeds.\n * @param  {string} url - The URL of the font file.\n * @param  {Function} callback - The function to call when the font load completes\n */\nfunction loadFromUrl(url, callback) {\n    const request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.response) {\n            return callback(null, request.response);\n        } else {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n    };\n\n    request.onerror = function () {\n        callback('Font could not be loaded');\n    };\n\n    request.send();\n}\n\n// Table Directory Entries //////////////////////////////////////////////\n/**\n * Parses OpenType table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseOpenTypeTableEntries(data, numTables) {\n    const tableEntries = [];\n    let p = 12;\n    for (let i = 0; i < numTables; i += 1) {\n        const tag = parse.getTag(data, p);\n        const checksum = parse.getULong(data, p + 4);\n        const offset = parse.getULong(data, p + 8);\n        const length = parse.getULong(data, p + 12);\n        tableEntries.push({tag: tag, checksum: checksum, offset: offset, length: length, compression: false});\n        p += 16;\n    }\n\n    return tableEntries;\n}\n\n/**\n * Parses WOFF table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseWOFFTableEntries(data, numTables) {\n    const tableEntries = [];\n    let p = 44; // offset to the first table directory entry.\n    for (let i = 0; i < numTables; i += 1) {\n        const tag = parse.getTag(data, p);\n        const offset = parse.getULong(data, p + 4);\n        const compLength = parse.getULong(data, p + 8);\n        const origLength = parse.getULong(data, p + 12);\n        let compression;\n        if (compLength < origLength) {\n            compression = 'WOFF';\n        } else {\n            compression = false;\n        }\n\n        tableEntries.push({tag: tag, offset: offset, compression: compression,\n            compressedLength: compLength, length: origLength});\n        p += 20;\n    }\n\n    return tableEntries;\n}\n\n/**\n * @typedef TableData\n * @type Object\n * @property {DataView} data - The DataView\n * @property {number} offset - The data offset.\n */\n\n/**\n * @param  {DataView}\n * @param  {Object}\n * @return {TableData}\n */\nfunction uncompressTable(data, tableEntry) {\n    if (tableEntry.compression === 'WOFF') {\n        const inBuffer = new Uint8Array(data.buffer, tableEntry.offset + 2, tableEntry.compressedLength - 2);\n        const outBuffer = new Uint8Array(tableEntry.length);\n        inflate(inBuffer, outBuffer);\n        if (outBuffer.byteLength !== tableEntry.length) {\n            throw new Error('Decompression error: ' + tableEntry.tag + ' decompressed length doesn\\'t match recorded length');\n        }\n\n        const view = new DataView(outBuffer.buffer, 0);\n        return {data: view, offset: 0};\n    } else {\n        return {data: data, offset: tableEntry.offset};\n    }\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n/**\n * Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n * Throws an error if the font could not be parsed.\n * @param  {ArrayBuffer}\n * @param  {Object} opt - options for parsing\n * @return {opentype.Font}\n */\nfunction parseBuffer(buffer, opt) {\n    opt = (opt === undefined || opt === null) ?  {} : opt;\n\n    let indexToLocFormat;\n    let ltagTable;\n\n    // Since the constructor can also be called to create new fonts from scratch, we indicate this\n    // should be an empty font that we'll fill with our own data.\n    const font = new Font({empty: true});\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n    const data = new DataView(buffer, 0);\n    let numTables;\n    let tableEntries = [];\n    const signature = parse.getTag(data, 0);\n    if (signature === String.fromCharCode(0, 1, 0, 0) || signature === 'true' || signature === 'typ1') {\n        font.outlinesFormat = 'truetype';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'OTTO') {\n        font.outlinesFormat = 'cff';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'wOFF') {\n        const flavor = parse.getTag(data, 4);\n        if (flavor === String.fromCharCode(0, 1, 0, 0)) {\n            font.outlinesFormat = 'truetype';\n        } else if (flavor === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType flavor ' + signature);\n        }\n\n        numTables = parse.getUShort(data, 12);\n        tableEntries = parseWOFFTableEntries(data, numTables);\n    } else {\n        throw new Error('Unsupported OpenType signature ' + signature);\n    }\n\n    let cffTableEntry;\n    let fvarTableEntry;\n    let glyfTableEntry;\n    let gdefTableEntry;\n    let gposTableEntry;\n    let gsubTableEntry;\n    let hmtxTableEntry;\n    let kernTableEntry;\n    let locaTableEntry;\n    let nameTableEntry;\n    let metaTableEntry;\n    let p;\n\n    for (let i = 0; i < numTables; i += 1) {\n        const tableEntry = tableEntries[i];\n        let table;\n        switch (tableEntry.tag) {\n            case 'cmap':\n                table = uncompressTable(data, tableEntry);\n                font.tables.cmap = cmap.parse(table.data, table.offset);\n                font.encoding = new CmapEncoding(font.tables.cmap);\n                break;\n            case 'cvt ' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.cvt = p.parseShortList(tableEntry.length / 2);\n                break;\n            case 'fvar':\n                fvarTableEntry = tableEntry;\n                break;\n            case 'fpgm' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.fpgm = p.parseByteList(tableEntry.length);\n                break;\n            case 'head':\n                table = uncompressTable(data, tableEntry);\n                font.tables.head = head.parse(table.data, table.offset);\n                font.unitsPerEm = font.tables.head.unitsPerEm;\n                indexToLocFormat = font.tables.head.indexToLocFormat;\n                break;\n            case 'hhea':\n                table = uncompressTable(data, tableEntry);\n                font.tables.hhea = hhea.parse(table.data, table.offset);\n                font.ascender = font.tables.hhea.ascender;\n                font.descender = font.tables.hhea.descender;\n                font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n                break;\n            case 'hmtx':\n                hmtxTableEntry = tableEntry;\n                break;\n            case 'ltag':\n                table = uncompressTable(data, tableEntry);\n                ltagTable = ltag.parse(table.data, table.offset);\n                break;\n            case 'maxp':\n                table = uncompressTable(data, tableEntry);\n                font.tables.maxp = maxp.parse(table.data, table.offset);\n                font.numGlyphs = font.tables.maxp.numGlyphs;\n                break;\n            case 'name':\n                nameTableEntry = tableEntry;\n                break;\n            case 'OS/2':\n                table = uncompressTable(data, tableEntry);\n                font.tables.os2 = os2.parse(table.data, table.offset);\n                break;\n            case 'post':\n                table = uncompressTable(data, tableEntry);\n                font.tables.post = post.parse(table.data, table.offset);\n                font.glyphNames = new GlyphNames(font.tables.post);\n                break;\n            case 'prep' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.prep = p.parseByteList(tableEntry.length);\n                break;\n            case 'glyf':\n                glyfTableEntry = tableEntry;\n                break;\n            case 'loca':\n                locaTableEntry = tableEntry;\n                break;\n            case 'CFF ':\n                cffTableEntry = tableEntry;\n                break;\n            case 'kern':\n                kernTableEntry = tableEntry;\n                break;\n            case 'GDEF':\n                gdefTableEntry = tableEntry;\n                break;\n            case 'GPOS':\n                gposTableEntry = tableEntry;\n                break;\n            case 'GSUB':\n                gsubTableEntry = tableEntry;\n                break;\n            case 'meta':\n                metaTableEntry = tableEntry;\n                break;\n        }\n    }\n\n    const nameTable = uncompressTable(data, nameTableEntry);\n    font.tables.name = _name.parse(nameTable.data, nameTable.offset, ltagTable);\n    font.names = font.tables.name;\n\n    if (glyfTableEntry && locaTableEntry) {\n        const shortVersion = indexToLocFormat === 0;\n        const locaTable = uncompressTable(data, locaTableEntry);\n        const locaOffsets = loca.parse(locaTable.data, locaTable.offset, font.numGlyphs, shortVersion);\n        const glyfTable = uncompressTable(data, glyfTableEntry);\n        font.glyphs = glyf.parse(glyfTable.data, glyfTable.offset, locaOffsets, font, opt);\n    } else if (cffTableEntry) {\n        const cffTable = uncompressTable(data, cffTableEntry);\n        cff.parse(cffTable.data, cffTable.offset, font, opt);\n    } else {\n        throw new Error('Font doesn\\'t contain TrueType or CFF outlines.');\n    }\n\n    const hmtxTable = uncompressTable(data, hmtxTableEntry);\n    hmtx.parse(font, hmtxTable.data, hmtxTable.offset, font.numberOfHMetrics, font.numGlyphs, font.glyphs, opt);\n    addGlyphNames(font, opt);\n\n    if (kernTableEntry) {\n        const kernTable = uncompressTable(data, kernTableEntry);\n        font.kerningPairs = kern.parse(kernTable.data, kernTable.offset);\n    } else {\n        font.kerningPairs = {};\n    }\n\n    if (gdefTableEntry) {\n        const gdefTable = uncompressTable(data, gdefTableEntry);\n        font.tables.gdef = gdef.parse(gdefTable.data, gdefTable.offset);\n    }\n\n    if (gposTableEntry) {\n        const gposTable = uncompressTable(data, gposTableEntry);\n        font.tables.gpos = gpos.parse(gposTable.data, gposTable.offset);\n        font.position.init();\n    }\n\n    if (gsubTableEntry) {\n        const gsubTable = uncompressTable(data, gsubTableEntry);\n        font.tables.gsub = gsub.parse(gsubTable.data, gsubTable.offset);\n    }\n\n    if (fvarTableEntry) {\n        const fvarTable = uncompressTable(data, fvarTableEntry);\n        font.tables.fvar = fvar.parse(fvarTable.data, fvarTable.offset, font.names);\n    }\n\n    if (metaTableEntry) {\n        const metaTable = uncompressTable(data, metaTableEntry);\n        font.tables.meta = meta.parse(metaTable.data, metaTable.offset);\n        font.metas = font.tables.meta;\n    }\n\n    return font;\n}\n\n/**\n * Asynchronously load the font from a URL or a filesystem. When done, call the callback\n * with two arguments `(err, font)`. The `err` will be null on success,\n * the `font` is a Font object.\n * We use the node.js callback convention so that\n * opentype.js can integrate with frameworks like async.js.\n * @alias opentype.load\n * @param  {string} url - The URL of the font to load.\n * @param  {Function} callback - The callback.\n */\nfunction load(url, callback, opt) {\n    opt = (opt === undefined || opt === null) ?  {} : opt;\n    const isNode = typeof window === 'undefined';\n    const loadFn = isNode && !opt.isUrl ? loadFromFile : loadFromUrl;\n\n    return new Promise((resolve, reject) => {\n        loadFn(url, function(err, arrayBuffer) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                } else {\n                    reject(err);\n                }\n            }\n            let font;\n            try {\n                font = parseBuffer(arrayBuffer, opt);\n            } catch (e) {\n                if (callback) {\n                    return callback(e, null);\n                } else {\n                    reject(e);\n                }\n            }\n            if (callback) {\n                return callback(null, font);\n            } else {\n                resolve(font);\n            }\n        });\n    });\n}\n\n/**\n * Synchronously load the font from a URL or file.\n * When done, returns the font object or throws an error.\n * @alias opentype.loadSync\n * @param  {string} url - The URL of the font to load.\n * @param  {Object} opt - opt.lowMemory\n * @return {opentype.Font}\n */\nfunction loadSync(url, opt) {\n    const fs = require('fs');\n    const buffer = fs.readFileSync(url);\n    return parseBuffer(nodeBufferToArrayBuffer(buffer), opt);\n}\n\nexport {\n    Font,\n    Glyph,\n    Path,\n    BoundingBox,\n    parse as _parse,\n    parseBuffer as parse,\n    load,\n    loadSync\n};\n"],
  "mappings": "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K,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;;EAC3B,EAAC,OAAO,MAAQ,KAAK,MAAM;;EAC3B,EAAC,OAAO,OAAQ,KAAK,MAAM;;EAC3B,EAAC,OAAO,OAAQ,KAAK,MAAM;;EAC3B,EAAC,OAAO,OAAQ,KAAK,MAAM;;EAC3B,EA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A;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA;;EACA,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,MAAM,KAAK,QAAW,CAAC;;EACvB,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,GAAG,CAAC;;EACvC,UAAU,KAAK,QAAW,GAAG,GAAG,GAAG,G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",
  "names": ["exports", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Symbol", "exports", "module", "Symbol", "exports", "module", "exports", "module", "Symbol", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "DataView", "exports", "module", "Map", "exports", "module", "Promise", "exports", "module", "exports", "module", "WeakMap", "exports", "module", "DataView", "Map", "Promise", "WeakMap", "getTag", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Buffer", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "getTag", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Map", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Map", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "othValue", "exports", "module", "Uint8Array", "exports", "module", "exports", "module", "exports", "module", "Symbol", "Uint8Array", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "getTag", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Symbol", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "collection", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Buffer", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Uint8Array", "exports", "module", "exports", "module", "exports", "module", "Symbol", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "getTag", "exports", "module", "exports", "module", "getTag", "exports", "module", "exports", "module", "getTag", "key", "exports", "module", "exports", "exports", "exports", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "constant", "exports", "module", "constant", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "tokenLabel", "AbstractProduction", "exports", "NonTerminal", "Rule", "Alternative", "Option", "RepetitionMandatory", "RepetitionMandatoryWithSeparator", "Repetition", "RepetitionWithSeparator", "Alternation", "Terminal", "serializeGrammar", "serializeProduction", "GAstVisitor", "exports", "exports", "module", "collection", "exports", "module", "exports", "module", "exports", "module", "collection", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "exports", "RestWalker", "exports", "exports", "module", "Symbol", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "exports", "ResyncFollowsWalker", "exports", "exports", "module", "exports", "module", "i", "exports", "module", "head", "require_first", "exports", "module", "exports", "module", "exports", "module", "collection", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "collection", "exports", "module", "exports", "exports", "CharCodeFinder", "exports", "charCode", "EndAnchorFinder", "StartAnchorFinder", "_a", "exports", "module", "exports", "exports", "line", "LexerDefinitionErrorType", "exports", "Lexer", "_a", "line", "tokenLabel", "exports", "tokenName", "createToken", "createTokenInstance", "tokenMatcher", "exports", "_a", "exports", "GastRefResolverVisitor", "exports", "module", "exports", "module", "collection", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "AbstractNextPossibleTokensWalker", "exports", "NextAfterTokenWalker", "AbstractNextTerminalAfterProductionWalker", "NextTerminalAfterManyWalker", "NextTerminalAfterManySepWalker", "NextTerminalAfterAtLeastOneWalker", "NextTerminalAfterAtLeastOneSepWalker", "PROD_TYPE", "exports", "getLookaheadPaths", "tokenMatcher", "currAlt", "RestDefinitionFinderWalker", "InsideDefinitionFinderVisitor", "altIdx", "prefixKeys", "exports", "OccurrenceValidationCollector", "OrCollector", "RepetitionCollector", "exports", "isRecognitionException", "exports", "RecognitionException", "MismatchedTokenException", "NoViableAltException", "NotAllInputParsedException", "EarlyExitException", "exports", "InRuleRecoveryException", "Recoverable", "exports", "LLkLookaheadStrategy", "_a", "exports", "LooksAhead", "_a", "exports", "DslMethodsCollectorVisitor", "exports", "exports", "exports", "CstVisitorDefinitionError", "TreeBuilder", "exports", "LexerAdapter", "exports", "RecognizerApi", "exports", "RecognizerEngine", "invokeRuleWithTry", "exports", "ErrorHandler", "exports", "ContentAssist", "exports", "GastRecorder", "i", "exports", "PerformanceTracer", "_a", "exports", "exports", "exports", "ParserDefinitionErrorType", "EMPTY_ALT", "Parser", "_b", "_a", "CstParser", "EmbeddedActionsParser", "exports", "CstNodeDefinitionGenerator", "g", "definition", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "generateCstDts", "exports", "createSyntaxDiagramsCode", "_a", "_b", "exports", "exports", "clearCache", "Parser", "exports", "module", "obj", "l", "_a", "_b", "post", "head", "i", "post", "td", "_a", "fl", "Deflate", "AsyncDeflate", "Inflate", "AsyncInflate", "Gzip", "AsyncGzip", "Gunzip", "AsyncGunzip", "Zlib", "AsyncZlib", "Unzlib", "AsyncUnzlib", "Decompress", "AsyncDecompress", "DecodeUTF8", "_a", "ch", "EncodeUTF8", "_a", "fl", "ZipPassThrough", "ZipDeflate", "AsyncZipDeflate", "Zip", "fl", "_a", "_b", "UnzipPassThrough", "UnzipInflate", "AsyncUnzipInflate", "Unzip", "_a", "dat", "final", "i", "line", "mod", "Parser", "KHR_SUPERCOMPRESSION_NONE", "KHR_SUPERCOMPRESSION_ZSTD", "KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT", "KHR_DF_VENDORID_KHRONOS", "KHR_DF_VERSION", "KHR_DF_MODEL_UNSPECIFIED", "KHR_DF_FLAG_ALPHA_STRAIGHT", "KHR_DF_FLAG_ALPHA_PREMULTIPLIED", "KHR_DF_TRANSFER_SRGB", "KHR_DF_PRIMARIES_BT709", "KHR_DF_SAMPLE_DATATYPE_SIGNED", "VK_FORMAT_UNDEFINED", "VK_FORMAT_R8_UNORM", "VK_FORMAT_R8_SRGB", "VK_FORMAT_R8G8_UNORM", "VK_FORMAT_R8G8_SRGB", "VK_FORMAT_R8G8B8A8_UNORM", "VK_FORMAT_R8G8B8A8_SRGB", "VK_FORMAT_R16_SFLOAT", "VK_FORMAT_R16G16_SFLOAT", "VK_FORMAT_R16G16B16A16_SFLOAT", "VK_FORMAT_R32_SFLOAT", "VK_FORMAT_R32G32_SFLOAT", "VK_FORMAT_R32G32B32A32_SFLOAT", "KTX2Container", "vkFormat", "VK_FORMAT_UNDEFINED", "typeSize", "pixelWidth", "pixelHeight", "pixelDepth", "layerCount", "faceCount", "supercompressionScheme", "KHR_SUPERCOMPRESSION_NONE", "levels", "dataFormatDescriptor", "vendorId", "KHR_DF_VENDORID_KHRONOS", "descriptorType", "KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT", "descriptorBlockSize", "versionNumber", "KHR_DF_VERSION", "colorModel", "KHR_DF_MODEL_UNSPECIFIED", "colorPrimaries", "KHR_DF_PRIMARIES_BT709", "transferFunction", "KHR_DF_TRANSFER_SRGB", "flags", "KHR_DF_FLAG_ALPHA_STRAIGHT", "texelBlockDimension", "bytesPlane", "samples", "keyValue", "globalData", "BufferReader", "constructor", "data", "byteOffset", "byteLength", "littleEndian", "_dataView", "_littleEndian", "_offset", "DataView", "buffer", "_nextUint8", "value", "getUint8", "_nextUint16", "getUint16", "_nextUint32", "getUint32", "_nextUint64", "left", "right", "_nextInt32", "getInt32", "_skip", "bytes", "_scan", "maxByteLength", "term", "Uint8Array", "NUL", "Uint8Array", "KTX2_ID", "decodeText", "buffer", "TextDecoder", "decode", "Buffer", "from", "toString", "read", "data", "id", "Uint8Array", "buffer", "byteOffset", "KTX2_ID", "length", "Error", "container", "KTX2Container", "headerByteLength", "Uint32Array", "BYTES_PER_ELEMENT", "headerReader", "BufferReader", "vkFormat", "_nextUint32", "typeSize", "pixelWidth", "pixelHeight", "pixelDepth", "layerCount", "faceCount", "levelCount", "supercompressionScheme", "dfdByteOffset", "dfdByteLength", "kvdByteOffset", "kvdByteLength", "sgdByteOffset", "_nextUint64", "sgdByteLength", "levelByteLength", "levelReader", "i", "levels", "push", "levelData", "uncompressedByteLength", "dfdReader", "dfd", "vendorId", "_skip", "_nextUint16", "descriptorType", "versionNumber", "descriptorBlockSize", "colorModel", "_nextUint8", "colorPrimaries", "transferFunction", "flags", "texelBlockDimension", "bytesPlane", "samples", "sampleStart", "sampleWords", "numSamples", "sample", "bitOffset", "bitLength", "channelType", "samplePosition", "sampleLower", "sampleUpper", "Infinity", "KHR_DF_SAMPLE_DATATYPE_SIGNED", "_nextInt32", "dataFormatDescriptor", "kvdReader", "_offset", "keyValueByteLength", "keyData", "_scan", "key", "decodeText", "valueData", "byteLength", "keyValue", "match", "sgdReader", "endpointCount", "selectorCount", "endpointsByteLength", "selectorsByteLength", "tablesByteLength", "extendedByteLength", "imageDescs", "imageFlags", "rgbSliceByteOffset", "rgbSliceByteLength", "alphaSliceByteOffset", "alphaSliceByteLength", "endpointsByteOffset", "selectorsByteOffset", "tablesByteOffset", "extendedByteOffset", "endpointsData", "selectorsData", "tablesData", "extendedData", "globalData", "init", "instance", "heap", "IMPORT_OBJECT", "env", "emscripten_notify_memory_growth", "index", "Uint8Array", "exports", "memory", "buffer", "ZSTDDecoder", "fetch", "wasm", "then", "response", "arrayBuffer", "WebAssembly", "instantiate", "this", "_init", "Buffer", "from", "result", "decode", "array", "uncompressedSize", "Error", "compressedSize", "byteLength", "compressedPtr", "malloc", "set", "Number", "ZSTD_findDecompressedSize", "uncompressedPtr", "actualSize", "ZSTD_decompress", "dec", "slice", "free", "bits", "lengths", "clen", "offs", "const", "let", "i", "arguments", "ii", "table", "subtableMakers", "Parser", "cmap", "g", "post", "x", "y", "scale", "parseGlyph", "buildPath", "parseCFFCharstring", "b2", "b4", "meta", "parse", "code", "charString", "head", "hhea", "maxp", "ltag", "os2", "glyphCount", "substCount", "tableData", "returnTable", "gsub", "sfnt", "langSysTable", "pair", "loca", "this", "subtable", "singleSubstitutionFormat1", "singleSubstitutionFormat2", "chainingSubstitutionFormat3", "ligatureSubstitutionFormat1", "index", "getContextParams", "check", "HintingTrueType", "fvar", "gdef", "subtableParsers", "parseLookup1", "parseLookup2", "parseLookup3", "parseLookup4", "parseLookup5", "parseLookup6", "parseLookup7", "parseLookup8", "gpos", "inflate"]
}
